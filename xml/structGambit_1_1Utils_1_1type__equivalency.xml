<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structGambit_1_1Utils_1_1type__equivalency" kind="struct" language="C++" prot="public">
    <compoundname>Gambit::Utils::type_equivalency</compoundname>
    <includes refid="type__equivalency_8hpp" local="no">type_equivalency.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structGambit_1_1Utils_1_1type__equivalency_1af0f972f6ae3f55cd5a290d5ccc305e7e" prot="public" static="no" mutable="no">
        <type>std::set&lt; std::set&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref> &gt; &gt;</type>
        <definition>std::set&lt; std::set&lt;str&gt; &gt; Gambit::Utils::type_equivalency::equivalency_classes</definition>
        <argsstring></argsstring>
        <name>equivalency_classes</name>
        <qualifiedname>Gambit::Utils::type_equivalency::equivalency_classes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>}@ The total set of equivalency classes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="49" column="18" bodyfile="Elements/include/gambit/Elements/type_equivalency.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structGambit_1_1Utils_1_1type__equivalency_1a98d14edc490309a8a5e51070ae27b3c8" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::Utils::type_equivalency::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <qualifiedname>Gambit::Utils::type_equivalency::filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="53" column="13" bodyfile="Elements/include/gambit/Elements/type_equivalency.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1a2b94825fc87ddebefb102a3404818ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Utils::type_equivalency::add</definition>
        <argsstring>(str, str)</argsstring>
        <name>add</name>
        <qualifiedname>Gambit::Utils::type_equivalency::add</qualifiedname>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t1</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a new equivalency relation {@ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="41" column="14" bodyfile="Elements/src/type_equivalency.cpp" bodystart="73" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1ae56ae1caaaf691f8241eaf1c11568c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Utils::type_equivalency::add</definition>
        <argsstring>(str, str, str)</argsstring>
        <name>add</name>
        <qualifiedname>Gambit::Utils::type_equivalency::add</qualifiedname>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t1</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t2</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t3</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="42" column="14" bodyfile="Elements/src/type_equivalency.cpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1a7cb5d713eaceeb5f82344b2cbfd7dc57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Utils::type_equivalency::add</definition>
        <argsstring>(str, str, str, str)</argsstring>
        <name>add</name>
        <qualifiedname>Gambit::Utils::type_equivalency::add</qualifiedname>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t1</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t2</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t3</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t4</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="43" column="14" bodyfile="Elements/src/type_equivalency.cpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1aaf15f60de33fd8de60642e694aef1867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Utils::type_equivalency::add</definition>
        <argsstring>(str, str, str, str, str)</argsstring>
        <name>add</name>
        <qualifiedname>Gambit::Utils::type_equivalency::add</qualifiedname>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t1</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t2</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t3</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t4</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t5</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="44" column="14" bodyfile="Elements/src/type_equivalency.cpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1aa08cce2dd3afd3cbe5598b888e815e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Utils::type_equivalency::add</definition>
        <argsstring>(str, str, str, str, str, str)</argsstring>
        <name>add</name>
        <qualifiedname>Gambit::Utils::type_equivalency::add</qualifiedname>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t1</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t2</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t3</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t4</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t5</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <defname>t6</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="45" column="14" bodyfile="Elements/src/type_equivalency.cpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1ac5b8f22c0a323648ac0c9d27d8924eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Utils::type_equivalency::add</definition>
        <argsstring>(std::vector&lt; str &gt;)</argsstring>
        <name>add</name>
        <qualifiedname>Gambit::Utils::type_equivalency::add</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref> &gt;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="46" column="14" bodyfile="Elements/src/type_equivalency.cpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1Utils_1_1type__equivalency_1ac3123714ba7c18bdcb27a8073c768432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::Utils::type_equivalency::type_equivalency</definition>
        <argsstring>()</argsstring>
        <name>type_equivalency</name>
        <qualifiedname>Gambit::Utils::type_equivalency::type_equivalency</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="structGambit_1_1Utils_1_1type__equivalency" kindref="compound">type_equivalency</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="51" column="9" bodyfile="Elements/src/type_equivalency.cpp" bodystart="47" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure providing type equivalency classes to the dep resolver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Elements/include/gambit/Elements/type_equivalency.hpp" line="36" column="5" bodyfile="Elements/include/gambit/Elements/type_equivalency.hpp" bodystart="37" bodyend="54"/>
    <listofallmembers>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1a2b94825fc87ddebefb102a3404818ecd" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>add</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1ae56ae1caaaf691f8241eaf1c11568c29" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>add</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1a7cb5d713eaceeb5f82344b2cbfd7dc57" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>add</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1aaf15f60de33fd8de60642e694aef1867" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>add</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1aa08cce2dd3afd3cbe5598b888e815e5c" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>add</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1ac5b8f22c0a323648ac0c9d27d8924eeb" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>add</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1af0f972f6ae3f55cd5a290d5ccc305e7e" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>equivalency_classes</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1a98d14edc490309a8a5e51070ae27b3c8" prot="private" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>filename</name></member>
      <member refid="structGambit_1_1Utils_1_1type__equivalency_1ac3123714ba7c18bdcb27a8073c768432" prot="public" virt="non-virtual"><scope>Gambit::Utils::type_equivalency</scope><name>type_equivalency</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
