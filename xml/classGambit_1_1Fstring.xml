<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Fstring" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Fstring</compoundname>
    <basecompoundref refid="classGambit_1_1Farray" prot="public" virt="non-virtual">Gambit::Farray&lt; char, 1, len &gt;</basecompoundref>
    <includes refid="util__types_8hpp" local="no">util_types.hpp</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>len</declname>
        <defname>len</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Fstring_1a1b55ce65c5738fdedff58882b19bddb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Fstring&lt; len &gt;::Fstring</definition>
        <argsstring>()</argsstring>
        <name>Fstring</name>
        <qualifiedname>Gambit::Fstring::Fstring</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="450" column="7" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="450" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1a2d9bf9d1e0c7bde6376d9cc4f478f259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Fstring&lt; len &gt;::Fstring</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>Fstring</name>
        <qualifiedname>Gambit::Fstring::Fstring</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="451" column="7" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="451" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1ab963d1b6a1e3b2a85138e495d4102dac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Fstring&lt; len &gt;::Fstring</definition>
        <argsstring>(const char *in)</argsstring>
        <name>Fstring</name>
        <qualifiedname>Gambit::Fstring::Fstring</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="452" column="7" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="452" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1a7ffd47f9a42cf488958884cf3934c580" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Fstring&lt; len &gt;::Fstring</definition>
        <argsstring>(char in)</argsstring>
        <name>Fstring</name>
        <qualifiedname>Gambit::Fstring::Fstring</qualifiedname>
        <param>
          <type>char</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="453" column="7" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="453" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1ae1e72b9944902d474be534d523d2f2d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>ilen</declname>
            <defname>ilen</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gambit::Fstring&lt; len &gt;::Fstring</definition>
        <argsstring>(const Fstring&lt; ilen &gt; &amp;in)</argsstring>
        <name>Fstring</name>
        <qualifiedname>Gambit::Fstring::Fstring</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref>&lt; ilen &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="455" column="7" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="455" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1a918578728b3c8614a4b2b8fd545aa1fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref> &amp;</type>
        <definition>Fstring &amp; Gambit::Fstring&lt; len &gt;::operator=</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>operator=</name>
        <qualifiedname>Gambit::Fstring::operator=</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="456" column="15" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="456" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1a901695ee9ef2b1e091c71e0b3a17683e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref> &amp;</type>
        <definition>Fstring &amp; Gambit::Fstring&lt; len &gt;::operator=</definition>
        <argsstring>(const char *in)</argsstring>
        <name>operator=</name>
        <qualifiedname>Gambit::Fstring::operator=</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="464" column="15" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="464" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1af6849ee212b4c1e9f2b2b04e8b803620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref> &amp;</type>
        <definition>Fstring &amp; Gambit::Fstring&lt; len &gt;::operator=</definition>
        <argsstring>(char in)</argsstring>
        <name>operator=</name>
        <qualifiedname>Gambit::Fstring::operator=</qualifiedname>
        <param>
          <type>char</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="472" column="15" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="472" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1a881be7d3ba102eb03f2163cba268587c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>ilen</declname>
            <defname>ilen</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref> &amp;</type>
        <definition>Fstring &amp; Gambit::Fstring&lt; len &gt;::operator=</definition>
        <argsstring>(const Fstring&lt; ilen &gt; &amp;in)</argsstring>
        <name>operator=</name>
        <qualifiedname>Gambit::Fstring::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref>&lt; ilen &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="482" column="15" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="482" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1aee88564991368fcf0312c79b987a8d9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gambit::Fstring&lt; len &gt;::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <qualifiedname>Gambit::Fstring::str</qualifiedname>
        <briefdescription>
<para>Get std::string copy of the <ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref>, including all trailing spaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="492" column="19" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1acf26e0b10f93346c336ca265a1f55f1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gambit::Fstring&lt; len &gt;::trimmed_str</definition>
        <argsstring>() const</argsstring>
        <name>trimmed_str</name>
        <qualifiedname>Gambit::Fstring::trimmed_str</qualifiedname>
        <briefdescription>
<para>Get std::string copy of the <ref refid="classGambit_1_1Fstring" kindref="compound">Fstring</ref> without trailing spaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="497" column="19" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="497" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Fstring_1a941f62ba594965be42099abc8ec5dea9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::Fstring&lt; len &gt;::operator==</definition>
        <argsstring>(std::string str)</argsstring>
        <name>operator==</name>
        <qualifiedname>Gambit::Fstring::operator==</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/include/gambit/Utils/util_types.hpp" line="508" column="12" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="508" bodyend="511"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classGambit_1_1Farray" kindref="compound">Farray</ref> specialization for Fortran strings. This is a 1-dimensional char array with indices 1 to len. It has assignment operators for standard string types, and accessors that return std::string objects. Strings longer than len will be truncated by the assignment operators, and shorter strings will be given trailing spaces. Syntax: Fstring&lt;[string length]&gt; DO NOT UNDER ANY CIRCUMSTANCE add new member variables to this class! </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Gambit::Farray&lt; char, 1, len &gt;</label>
        <link refid="classGambit_1_1Farray"/>
      </node>
      <node id="1">
        <label>Gambit::Fstring&lt; len &gt;</label>
        <link refid="classGambit_1_1Fstring"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Gambit::Farray&lt; char, 1, len &gt;</label>
        <link refid="classGambit_1_1Farray"/>
      </node>
      <node id="1">
        <label>Gambit::Fstring&lt; len &gt;</label>
        <link refid="classGambit_1_1Fstring"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Utils/include/gambit/Utils/util_types.hpp" line="447" column="3" bodyfile="Utils/include/gambit/Utils/util_types.hpp" bodystart="448" bodyend="512"/>
    <listofallmembers>
      <member refid="classGambit_1_1Farray_1a46d9df4eb54d188790013fecc938ac3f" prot="protected" virt="non-virtual"><scope>Gambit::Fstring</scope><name>allowed_types</name></member>
      <member refid="classGambit_1_1Farray_1a849324b7f9fa29ce47974de49681bb2b" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>array</name></member>
      <member refid="classGambit_1_1Farray_1a0ae42c7391346ef7f7564ca166bdba3b" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Farray</name></member>
      <member refid="classGambit_1_1Farray_1aa8b51a65396a6217a5d44ddf639114b1" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Farray</name></member>
      <member refid="classGambit_1_1Farray_1a16c9195a47a77383de807fcae5028cd2" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Farray</name></member>
      <member refid="classGambit_1_1Fstring_1a1b55ce65c5738fdedff58882b19bddb5" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Fstring</name></member>
      <member refid="classGambit_1_1Fstring_1a2d9bf9d1e0c7bde6376d9cc4f478f259" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Fstring</name></member>
      <member refid="classGambit_1_1Fstring_1ab963d1b6a1e3b2a85138e495d4102dac" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Fstring</name></member>
      <member refid="classGambit_1_1Fstring_1a7ffd47f9a42cf488958884cf3934c580" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Fstring</name></member>
      <member refid="classGambit_1_1Fstring_1ae1e72b9944902d474be534d523d2f2d5" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>Fstring</name></member>
      <member refid="classGambit_1_1Farray_1a34166dfe9dffd8946a28109f95bbfc43" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>nElem</name></member>
      <member refid="classGambit_1_1Farray_1a7054759b2be393aa5b9ef33f03fe0aec" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Farray_1a84ea5c4d720addfc615195f6525c8413" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Fstring_1a918578728b3c8614a4b2b8fd545aa1fd" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator=</name></member>
      <member refid="classGambit_1_1Fstring_1a901695ee9ef2b1e091c71e0b3a17683e" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator=</name></member>
      <member refid="classGambit_1_1Fstring_1af6849ee212b4c1e9f2b2b04e8b803620" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator=</name></member>
      <member refid="classGambit_1_1Fstring_1a881be7d3ba102eb03f2163cba268587c" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator=</name></member>
      <member refid="classGambit_1_1Farray_1a140ae55c4ca03140a2db78b68fef3b9b" prot="public" virt="non-virtual" ambiguityscope="Farray&lt; char, 1, len &gt;::"><scope>Gambit::Fstring</scope><name>operator=</name></member>
      <member refid="classGambit_1_1Fstring_1a941f62ba594965be42099abc8ec5dea9" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>operator==</name></member>
      <member refid="classGambit_1_1Fstring_1aee88564991368fcf0312c79b987a8d9f" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>str</name></member>
      <member refid="classGambit_1_1Fstring_1acf26e0b10f93346c336ca265a1f55f1d" prot="public" virt="non-virtual"><scope>Gambit::Fstring</scope><name>trimmed_str</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
