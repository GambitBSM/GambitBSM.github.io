<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1DRes_1_1DependencyResolver" kind="class" language="C++" prot="public">
    <compoundname>Gambit::DRes::DependencyResolver</compoundname>
    <includes refid="depresolver_8hpp" local="no">depresolver.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1ac59ab983a978be91cdb304959b99428a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Gambit::DRes::DependencyResolver::scanID</definition>
        <argsstring></argsstring>
        <name>scanID</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::scanID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="172" column="13" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a39f618ea4083bc3e8ddbcb02cfb4d910" prot="private" static="no" mutable="no">
        <type>const <ref refid="classGambit_1_1gambit__core" kindref="compound">gambit_core</ref> *</type>
        <definition>const gambit_core* Gambit::DRes::DependencyResolver::boundCore</definition>
        <argsstring></argsstring>
        <name>boundCore</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::boundCore</qualifiedname>
        <briefdescription>
<para>Core to which this dependency resolver is bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="239" column="27" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1aa2a23c1bf69c44d4e78cb2df80c330d5" prot="private" static="no" mutable="no">
        <type>const <ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref> *</type>
        <definition>const Models::ModelFunctorClaw* Gambit::DRes::DependencyResolver::boundClaw</definition>
        <argsstring></argsstring>
        <name>boundClaw</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::boundClaw</qualifiedname>
        <briefdescription>
<para>Model claw to which this dependency resolver is bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="242" column="40" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a1d3b191db63a8871a9c463a103c74eaa" prot="private" static="no" mutable="no">
        <type>const <ref refid="structGambit_1_1Utils_1_1type__equivalency" kindref="compound">Utils::type_equivalency</ref> *</type>
        <definition>const Utils::type_equivalency* Gambit::DRes::DependencyResolver::boundTEs</definition>
        <argsstring></argsstring>
        <name>boundTEs</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::boundTEs</qualifiedname>
        <briefdescription>
<para>Type equivalency object to which this dependency resolver is bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="245" column="39" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1abe449d5a9ac88a379fe77e64b41417f9" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref> *</type>
        <definition>Printers::BasePrinter* Gambit::DRes::DependencyResolver::boundPrinter</definition>
        <argsstring></argsstring>
        <name>boundPrinter</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::boundPrinter</qualifiedname>
        <briefdescription>
<para>Printer object to which this dependency resolver is bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="248" column="31" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1afced2e83d05e896ba224ac0fe3d90cc5" prot="private" static="no" mutable="no">
        <type>const <ref refid="classGambit_1_1IniParser_1_1IniFile" kindref="compound">IniParser::IniFile</ref> *</type>
        <definition>const IniParser::IniFile* Gambit::DRes::DependencyResolver::boundIniFile</definition>
        <argsstring></argsstring>
        <name>boundIniFile</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::boundIniFile</qualifiedname>
        <briefdescription>
<para>ini file to which this dependency resolver is bound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="251" column="34" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a54cf63bbddbd257da41fd99f8d7076b5" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="structGambit_1_1DRes_1_1Observable" kindref="compound">Observable</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Observable&gt;&amp; Gambit::DRes::DependencyResolver::obslikes</definition>
        <argsstring></argsstring>
        <name>obslikes</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::obslikes</qualifiedname>
        <briefdescription>
<para>ObsLike entries from the input yaml file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="254" column="27" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1ab569702dc67017aa98c082117a799337" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="structGambit_1_1DRes_1_1ModuleRule" kindref="compound">ModuleRule</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;ModuleRule&gt;&amp; Gambit::DRes::DependencyResolver::module_rules</definition>
        <argsstring></argsstring>
        <name>module_rules</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::module_rules</qualifiedname>
        <briefdescription>
<para>Module rules specified in the input yaml file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="257" column="27" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1ad11c99e05579481d5ab39c515d7a944c" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="structGambit_1_1DRes_1_1BackendRule" kindref="compound">BackendRule</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;BackendRule&gt;&amp; Gambit::DRes::DependencyResolver::backend_rules</definition>
        <argsstring></argsstring>
        <name>backend_rules</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::backend_rules</qualifiedname>
        <briefdescription>
<para>Backend rules specified in the input yaml file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="260" column="27" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1aafb733b5435af24173ac2ab8b01a8ec2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structGambit_1_1DRes_1_1OutputVertex" kindref="compound">OutputVertex</ref> &gt;</type>
        <definition>std::vector&lt;OutputVertex&gt; Gambit::DRes::DependencyResolver::outputVertices</definition>
        <argsstring></argsstring>
        <name>outputVertices</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::outputVertices</qualifiedname>
        <briefdescription>
<para>Output Vertex Infos. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="263" column="21" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a6c4a62f06402e0e5661e8afea860d6ca" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceGambit_1_1DRes_1ab3908c48a2c52ebf5d116d230ac62499" kindref="member">MasterGraphType</ref></type>
        <definition>MasterGraphType Gambit::DRes::DependencyResolver::masterGraph</definition>
        <argsstring></argsstring>
        <name>masterGraph</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::masterGraph</qualifiedname>
        <briefdescription>
<para>The central boost graph object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="266" column="25" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a6d889b9110f7daecc831ca4eb61c16ef" prot="private" static="no" mutable="no">
        <type>std::list&lt; VertexID &gt;</type>
        <definition>std::list&lt;VertexID&gt; Gambit::DRes::DependencyResolver::function_order</definition>
        <argsstring></argsstring>
        <name>function_order</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::function_order</qualifiedname>
        <briefdescription>
<para>Saved calling order for functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="269" column="19" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a352db59746b3705316402f18dc5f12b8" prot="private" static="no" mutable="no">
        <type>std::map&lt; VertexID, std::vector&lt; VertexID &gt; &gt;</type>
        <definition>std::map&lt;VertexID, std::vector&lt;VertexID&gt; &gt; Gambit::DRes::DependencyResolver::SortedParentVertices</definition>
        <argsstring></argsstring>
        <name>SortedParentVertices</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::SortedParentVertices</qualifiedname>
        <briefdescription>
<para>Saved calling order for functions required to compute single ObsLike entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="272" column="18" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a7b101c7ab69b2b20fe176a8d3a1a6d0b" prot="private" static="no" mutable="no">
        <type>std::map&lt; VertexID, std::set&lt; VertexID &gt; &gt;</type>
        <definition>std::map&lt;VertexID, std::set&lt;VertexID&gt; &gt; Gambit::DRes::DependencyResolver::loopManagerMap</definition>
        <argsstring></argsstring>
        <name>loopManagerMap</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::loopManagerMap</qualifiedname>
        <briefdescription>
<para>Temporary map for loop manager -&gt; list of nested functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="275" column="18" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a332cd7ec243f9df22054fbb1902fd2bb" prot="private" static="no" mutable="no">
        <type>std::map&lt; VertexID, std::set&lt; VertexID &gt; &gt;</type>
        <definition>std::map&lt;VertexID, std::set&lt;VertexID&gt; &gt; Gambit::DRes::DependencyResolver::edges_to_force_on_manager</definition>
        <argsstring></argsstring>
        <name>edges_to_force_on_manager</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::edges_to_force_on_manager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map from nested function -&gt; list of fulfilled dependencies that need to be passed on to its loop manager when it is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="279" column="18" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1aa7d98bbbfbea0b3c0025982a81eaae2b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;sspair&gt; &gt; Gambit::DRes::DependencyResolver::backendsRequired</definition>
        <argsstring></argsstring>
        <name>backendsRequired</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::backendsRequired</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="282" column="21" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1acec5a611ed5bc88af0d10d835deacefb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref> &gt;</type>
        <definition>std::vector&lt;str&gt; Gambit::DRes::DependencyResolver::citationKeys</definition>
        <argsstring></argsstring>
        <name>citationKeys</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::citationKeys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="285" column="21" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a9b5d8a393519f632ab075e4a4cc06ff8" prot="private" static="no" mutable="no">
        <type>IndexMap</type>
        <definition>IndexMap Gambit::DRes::DependencyResolver::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::index</qualifiedname>
        <briefdescription>
<para>Indices associated with graph vertices (used by printers to identify functors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="288" column="18" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1ab14e76b4b77ed47c635dc648c441be30" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>const str Gambit::DRes::DependencyResolver::activeFunctorGraphFile</definition>
        <argsstring></argsstring>
        <name>activeFunctorGraphFile</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::activeFunctorGraphFile</qualifiedname>
        <briefdescription>
<para>Output filename for graph of active functors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="291" column="19" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1aa276f86c57370bd816b2f34999ac9560" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::DRes::DependencyResolver::print_timing</definition>
        <argsstring></argsstring>
        <name>print_timing</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::print_timing</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Global flag for triggering printing of timing data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="294" column="14" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1DRes_1_1DependencyResolver_1a1ac39a333ea2e4416e4185e0d7301c66" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::DRes::DependencyResolver::print_unitcube</definition>
        <argsstring></argsstring>
        <name>print_unitcube</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::print_unitcube</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Global flag for triggering printing of unitCubeParameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="297" column="14" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a6426628265a7cffc30b7c9621482c13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::DRes::DependencyResolver::DependencyResolver</definition>
        <argsstring>(const gambit_core &amp;, const Models::ModelFunctorClaw &amp;, const IniParser::IniFile &amp;, const Utils::type_equivalency &amp;, Printers::BasePrinter &amp;)</argsstring>
        <name>DependencyResolver</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::DependencyResolver</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1gambit__core" kindref="compound">gambit_core</ref> &amp;</type>
          <defname>core</defname>
        </param>
        <param>
          <type>const <ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref> &amp;</type>
          <defname>claw</defname>
        </param>
        <param>
          <type>const <ref refid="classGambit_1_1IniParser_1_1IniFile" kindref="compound">IniParser::IniFile</ref> &amp;</type>
          <defname>iniFile</defname>
        </param>
        <param>
          <type>const <ref refid="structGambit_1_1Utils_1_1type__equivalency" kindref="compound">Utils::type_equivalency</ref> &amp;</type>
          <defname>equiv_classes</defname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref> &amp;</type>
          <defname>printer</defname>
        </param>
        <briefdescription>
<para>Constructor, provide module and backend functor lists. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="99" column="9" bodyfile="Core/src/depresolver.cpp" bodystart="213" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a72ed968a7e576f65eac2377c1801b92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::doResolution</definition>
        <argsstring>()</argsstring>
        <name>doResolution</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::doResolution</qualifiedname>
        <briefdescription>
<para>The dependency resolution. </para>
        </briefdescription>
        <detaileddescription>
<para>Main dependency resolution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="102" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="244" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a2241df7dab86fb7f4e94a0bc6446e948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::printFunctorList</definition>
        <argsstring>()</argsstring>
        <name>printFunctorList</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printFunctorList</qualifiedname>
        <briefdescription>
<para>Pretty print module functor information. </para>
        </briefdescription>
        <detaileddescription>
<para>List of masterGraph content. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="108" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="330" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1abdb053f6ac6f9897de0f92b7e7d17cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::printFunctorEvalOrder</definition>
        <argsstring>(bool toterminal=false)</argsstring>
        <name>printFunctorEvalOrder</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printFunctorEvalOrder</qualifiedname>
        <param>
          <type>bool</type>
          <declname>toterminal</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Pretty print function evaluation order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="111" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="360" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a0b980b6e419cef3ff5f91c5c6f0d58e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::printRequiredBackends</definition>
        <argsstring>()</argsstring>
        <name>printRequiredBackends</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printRequiredBackends</qualifiedname>
        <briefdescription>
<para>Print the list of required backends. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="114" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="484" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a3ea65bc392da1a56582ebed41a285e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::getCitationKeys</definition>
        <argsstring>()</argsstring>
        <name>getCitationKeys</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::getCitationKeys</qualifiedname>
        <briefdescription>
<para>Collect the citation keys for backends, modules, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="117" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="2328" bodyend="2390"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a8bafb4c67a0919b022f4fd0bf7f3601c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::printCitationKeys</definition>
        <argsstring>()</argsstring>
        <name>printCitationKeys</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printCitationKeys</qualifiedname>
        <briefdescription>
<para>Print citation keys. </para>
        </briefdescription>
        <detaileddescription>
<para>Print the <ref refid="classGambit_1_1BibTeX" kindref="compound">BibTeX</ref> citation keys. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="120" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="512" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a30d38ecda49b2f8262ec4b8eb233017d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; VertexID &gt;</type>
        <definition>std::vector&lt; VertexID &gt; Gambit::DRes::DependencyResolver::getObsLikeOrder</definition>
        <argsstring>()</argsstring>
        <name>getObsLikeOrder</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::getObsLikeOrder</qualifiedname>
        <briefdescription>
<para>Retrieve the order in which target vertices are to be evaluated. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns list of ObsLike vertices in order of runtime. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="123" column="21" bodyfile="Core/src/depresolver.cpp" bodystart="565" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1afa3088d2a077c242b828e88cca733a83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::calcObsLike</definition>
        <argsstring>(VertexID)</argsstring>
        <name>calcObsLike</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::calcObsLike</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <briefdescription>
<para>Calculate a single target vertex. </para>
        </briefdescription>
        <detaileddescription>
<para>Evaluates ObsLike vertex, and everything it depends on, and prints results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="126" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="610" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a74102627105fece2320a05e2f083a0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::printObsLike</definition>
        <argsstring>(VertexID, const int)</argsstring>
        <name>printObsLike</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printObsLike</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <param>
          <type>const int</type>
          <defname>pointID</defname>
        </param>
        <briefdescription>
<para>Print a single target vertex. </para>
        </briefdescription>
        <detaileddescription>
<para>Prints the results of an ObsLike vertex. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="129" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="637" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a94136ad1670eac56a068eb4b7dfee201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::DRes::DependencyResolver::printTiming</definition>
        <argsstring>()</argsstring>
        <name>printTiming</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printTiming</qualifiedname>
        <briefdescription>
<para>Getter for print_timing flag (used by LikelihoodContainer) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="132" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="667" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ae7e850a58e8b7f522d4cccb17b65b464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGambit_1_1functor" kindref="compound">functor</ref> *</type>
        <definition>functor * Gambit::DRes::DependencyResolver::get_functor</definition>
        <argsstring>(VertexID)</argsstring>
        <name>get_functor</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::get_functor</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>id</defname>
        </param>
        <briefdescription>
<para>Get the functor corresponding to a single VertexID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="135" column="17" bodyfile="Core/src/depresolver.cpp" bodystart="670" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1aba8e0e814c0d219e5cd54ca70e0a276a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::DRes::DependencyResolver::checkTypeMatch</definition>
        <argsstring>(VertexID, const str &amp;, const std::vector&lt; str &gt; &amp;)</argsstring>
        <name>checkTypeMatch</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::checkTypeMatch</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <param>
          <type>const <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref> &amp;</type>
          <defname>purpose</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref> &gt; &amp;</type>
          <defname>types</defname>
        </param>
        <briefdescription>
<para>Ensure that the type of a given vertex is equivalent to at least one of a provided list, and return the matching list entry. </para>
        </briefdescription>
        <detaileddescription>
<para>Ensure that the type of a given vertex is equivalent to at least one of a provided list, and return the match. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="138" column="13" bodyfile="Core/src/depresolver.cpp" bodystart="681" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1aafcaf0f503f0dd63b980a0e02382ef79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TYPE</type>
          </param>
        </templateparamlist>
        <type>TYPE</type>
        <definition>TYPE Gambit::DRes::DependencyResolver::getObsLike</definition>
        <argsstring>(VertexID vertex)</argsstring>
        <name>getObsLike</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::getObsLike</qualifiedname>
        <param>
          <type>VertexID</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Return the result of a functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="142" column="14" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="142" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ae98d6a0acb1b493cd84d82e11c68a951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref> &amp;</type>
        <definition>const str &amp; Gambit::DRes::DependencyResolver::getPurpose</definition>
        <argsstring>(VertexID)</argsstring>
        <name>getPurpose</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::getPurpose</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>v</defname>
        </param>
        <briefdescription>
<para>Return the purpose associated with a given functor. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the purpose associated with a given functor. Non-null only if the functor corresponds to an ObsLike entry in the ini file. </para>
        </detaileddescription>
        <inbodydescription>
<para>&apos;__no_purpose&apos; if the functor does not correspond to an ObsLike entry in the ini file.</para>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="159" column="19" bodyfile="Core/src/depresolver.cpp" bodystart="699" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a6653bbacfde4497a3d537ed353e71d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::invalidatePointAt</definition>
        <argsstring>(VertexID, bool)</argsstring>
        <name>invalidatePointAt</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::invalidatePointAt</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>isnan</defname>
        </param>
        <briefdescription>
<para>Tell functor that it invalidated the current point in model space (due to a large or NaN contribution to lnL) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="162" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="711" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ac6d8b3156d2eb33e1846ab464ffe630c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::resetAll</definition>
        <argsstring>()</argsstring>
        <name>resetAll</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::resetAll</qualifiedname>
        <briefdescription>
<para>Reset all active functors and delete existing results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="165" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="724" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1aa617b3ddd28fc765c34a00cae73fed66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::checkForUnusedRules</definition>
        <argsstring>()</argsstring>
        <name>checkForUnusedRules</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::checkForUnusedRules</qualifiedname>
        <briefdescription>
<para>Check for unused rules and options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="168" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="2124" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a11ddcda2378184e2377696c0f83fd5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::set_scanID</definition>
        <argsstring>()</argsstring>
        <name>set_scanID</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::set_scanID</qualifiedname>
        <briefdescription>
<para>Set the Scan ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="171" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="2305" bodyend="2325"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a22b6c7bfe8e050e1dc58a2d02b522c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1ae96b932df1a511063b912a23631f260b" kindref="member">map_str_str</ref></type>
        <definition>map_str_str Gambit::DRes::DependencyResolver::getMetadata</definition>
        <argsstring>()</argsstring>
        <name>getMetadata</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::getMetadata</qualifiedname>
        <briefdescription>
<para>Construct metadata information from used observables, rules and options. </para>
        </briefdescription>
        <detaileddescription>
<para>Construct metadata information from used observables, rules and options Note: No keys can be identical (or differing only by capitalisation) to those printed in the main file, otherwise the sqlite printer fails </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="175" column="21" bodyfile="Core/src/depresolver.cpp" bodystart="2184" bodyend="2267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a9353d0f8e20d2c95904c68da9941df0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1_1DRes_1ab3908c48a2c52ebf5d116d230ac62499" kindref="member">MasterGraphType</ref></type>
        <definition>static MasterGraphType Gambit::DRes::DependencyResolver::cullInactiveFunctors</definition>
        <argsstring>(MasterGraphType &amp;)</argsstring>
        <name>cullInactiveFunctors</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::cullInactiveFunctors</qualifiedname>
        <param>
          <type><ref refid="namespaceGambit_1_1DRes_1ab3908c48a2c52ebf5d116d230ac62499" kindref="member">MasterGraphType</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Helper function that returns a new graph with all inactive vertices removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="105" column="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a845d4fb7924dc0d4438c8a172e710f88" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::addFunctors</definition>
        <argsstring>()</argsstring>
        <name>addFunctors</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::addFunctors</qualifiedname>
        <briefdescription>
<para>Adds list of functor pointers to master graph. </para>
        </briefdescription>
        <detaileddescription>
<para>Add module and primary model functors in bound core to class-internal masterGraph object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="179" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="809" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1afc360e9cb7ee22c43e0b34f6c8efc71e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::DRes::DependencyResolver::printGenericFunctorList</definition>
        <argsstring>(const std::vector&lt; functor * &gt; &amp;, bool print_version=false)</argsstring>
        <name>printGenericFunctorList</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printGenericFunctorList</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classGambit_1_1functor" kindref="compound">functor</ref> * &gt; &amp;</type>
          <defname>functorList</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>print_version</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Pretty print backend functor information. </para>
        </briefdescription>
        <detaileddescription>
<para>Generic printer of the contents of a vector of functors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="182" column="13" bodyfile="Core/src/depresolver.cpp" bodystart="777" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a248deea5ab9ba68c7f84ca51fdfdb4fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::DRes::DependencyResolver::printGenericFunctorList</definition>
        <argsstring>(const std::vector&lt; VertexID &gt; &amp;, bool print_version=false)</argsstring>
        <name>printGenericFunctorList</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printGenericFunctorList</qualifiedname>
        <param>
          <type>const std::vector&lt; VertexID &gt; &amp;</type>
          <defname>vertexIDs</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>print_version</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Generic printer of the contents of a vector of functors as vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="183" column="13" bodyfile="Core/src/depresolver.cpp" bodystart="755" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a064894da4a8f97e25ef68143325bb83f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::DRes::DependencyResolver::printGenericFunctorList</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; functor *, bool &gt; &gt; &amp;, bool print_version=false)</argsstring>
        <name>printGenericFunctorList</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printGenericFunctorList</qualifiedname>
        <param>
          <type>const std::vector&lt; std::pair&lt; <ref refid="classGambit_1_1functor" kindref="compound">functor</ref> *, bool &gt; &gt; &amp;</type>
          <defname>vertexIDs</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>print_version</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Generic printer of the contents of a vector of functor, bool pairs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="184" column="13" bodyfile="Core/src/depresolver.cpp" bodystart="797" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a6f46e083ee2cc5263a6bb4bfae4fd2b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::DRes::DependencyResolver::printGenericFunctorList</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; &amp;, bool print_version=false)</argsstring>
        <name>printGenericFunctorList</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printGenericFunctorList</qualifiedname>
        <param>
          <type>const std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; &amp;</type>
          <defname>vertexIDs</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>print_version</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Generic printer of the contents of a vector of functor-as-vertex, bool pairs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="185" column="13" bodyfile="Core/src/depresolver.cpp" bodystart="766" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1af9c9b4963729c69e9d112b08683e32f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::DRes::DependencyResolver::printQuantityToBeResolved</definition>
        <argsstring>(const QueueEntry &amp;)</argsstring>
        <name>printQuantityToBeResolved</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::printQuantityToBeResolved</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1DRes_1_1QueueEntry" kindref="compound">QueueEntry</ref> &amp;</type>
          <defname>entry</defname>
        </param>
        <briefdescription>
<para>Print quantity to be resolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="188" column="13" bodyfile="Core/src/depresolver.cpp" bodystart="738" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ad3eb3b638d0eb0617dadf0e713b7ce03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::initialisePrinter</definition>
        <argsstring>()</argsstring>
        <name>initialisePrinter</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::initialisePrinter</qualifiedname>
        <briefdescription>
<para>Initialise the printer object with a list of functors for it to expect to be printed. </para>
        </briefdescription>
        <detaileddescription>
<para>Set up printer object (i.e. give it the list of functors that need printing) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="191" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="875" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a8ddd113fbc8f1d96087db4f6bb63aca7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::makeFunctorsModelCompatible</definition>
        <argsstring>()</argsstring>
        <name>makeFunctorsModelCompatible</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::makeFunctorsModelCompatible</qualifiedname>
        <briefdescription>
<para>Deactivate functors that are not allowed to be used with the model(s) being scanned. </para>
        </briefdescription>
        <detaileddescription>
<para>Activate functors that are allowed to be used with one or more of the models being scanned. Also activate the model-conditional dependencies and backend requirements of those functors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="194" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="836" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1afff92a3e72a68407aca51c7edcd26321" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::updateCandidates</definition>
        <argsstring>(bool, const VertexID &amp;, int, std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; &amp;, std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; &amp;)</argsstring>
        <name>updateCandidates</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::updateCandidates</qualifiedname>
        <param>
          <type>bool</type>
          <defname>match</defname>
        </param>
        <param>
          <type>const VertexID &amp;</type>
          <defname>v</defname>
        </param>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; &amp;</type>
          <defname>allowed</defname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; &amp;</type>
          <defname>disabled</defname>
        </param>
        <briefdescription>
<para>Helper function to update vertex candidate lists in resolveDependencyFromRules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="197" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="1056" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ac5f4063e0e2d20b0d0b9477cc8998d34" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; VertexID &gt;</type>
        <definition>std::vector&lt; VertexID &gt; Gambit::DRes::DependencyResolver::resolveDependencyFromRules</definition>
        <argsstring>(const QueueEntry &amp;, const std::vector&lt; VertexID &gt; &amp;)</argsstring>
        <name>resolveDependencyFromRules</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::resolveDependencyFromRules</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1DRes_1_1QueueEntry" kindref="compound">QueueEntry</ref> &amp;</type>
          <defname>entry</defname>
        </param>
        <param>
          <type>const std::vector&lt; VertexID &gt; &amp;</type>
          <defname>vertexCandidates</defname>
        </param>
        <briefdescription>
<para>Resolution of individual module function dependencies. </para>
        </briefdescription>
        <detaileddescription>
<para>Resolve dependencies by matching capability, type pair of input queue entry, ensuring consistency with all obslike entries and subjugate rules. As non-subjugate rules have global applicability, all (strong) instances are assumed to have already been applied before this function is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="200" column="21" bodyfile="Core/src/depresolver.cpp" bodystart="1086" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a2f71ae65171fbf27af4bf23d16c247bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGambit_1_1Options" kindref="compound">Options</ref></type>
        <definition>Options Gambit::DRes::DependencyResolver::collectIniOptions</definition>
        <argsstring>(const VertexID &amp;vertex)</argsstring>
        <name>collectIniOptions</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::collectIniOptions</qualifiedname>
        <param>
          <type>const VertexID &amp;</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Derive options from ini-entries. </para>
        </briefdescription>
        <detaileddescription>
<para>Collect ini options. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="203" column="17" bodyfile="Core/src/depresolver.cpp" bodystart="961" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1afc2c132e0d48ff3338eb71576b2ebefb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGambit_1_1Options" kindref="compound">Options</ref></type>
        <definition>Options Gambit::DRes::DependencyResolver::collectSubCaps</definition>
        <argsstring>(const VertexID &amp;vertex)</argsstring>
        <name>collectSubCaps</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::collectSubCaps</qualifiedname>
        <param>
          <type>const VertexID &amp;</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Collect sub-capabilities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="206" column="17" bodyfile="Core/src/depresolver.cpp" bodystart="1000" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a0f809fb676950644f6de04082fddbb55" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::generateTree</definition>
        <argsstring>(std::queue&lt; QueueEntry &gt; &amp;resolutionQueue)</argsstring>
        <name>generateTree</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::generateTree</qualifiedname>
        <param>
          <type>std::queue&lt; <ref refid="structGambit_1_1DRes_1_1QueueEntry" kindref="compound">QueueEntry</ref> &gt; &amp;</type>
          <declname>resolutionQueue</declname>
        </param>
        <briefdescription>
<para>Generate full dependency tree. </para>
        </briefdescription>
        <detaileddescription>
<para>Set up dependency tree. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="209" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="1339" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a71f45a068ac27882bcbe6e9a042fa413" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::fillResolutionQueue</definition>
        <argsstring>(std::queue&lt; QueueEntry &gt; &amp;resolutionQueue, VertexID vertex)</argsstring>
        <name>fillResolutionQueue</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::fillResolutionQueue</qualifiedname>
        <param>
          <type>std::queue&lt; <ref refid="structGambit_1_1DRes_1_1QueueEntry" kindref="compound">QueueEntry</ref> &gt; &amp;</type>
          <declname>resolutionQueue</declname>
        </param>
        <param>
          <type>VertexID</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Put module function dependencies into the resolution queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="212" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="1603" bodyend="1638"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a1c15541272fcad2ac2f0fbc6116a76d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; VertexID &gt;</type>
        <definition>std::list&lt; VertexID &gt; Gambit::DRes::DependencyResolver::run_topological_sort</definition>
        <argsstring>()</argsstring>
        <name>run_topological_sort</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::run_topological_sort</qualifiedname>
        <briefdescription>
<para>Topological sort. </para>
        </briefdescription>
        <detaileddescription>
<para>Boost lib topological sort. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="215" column="19" bodyfile="Core/src/depresolver.cpp" bodystart="1641" bodyend="1646"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ad6516ce548d30c52ac464d15d74c2720" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::resolveVertexBackend</definition>
        <argsstring>(VertexID, const std::vector&lt; functor * &gt; &amp;)</argsstring>
        <name>resolveVertexBackend</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::resolveVertexBackend</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classGambit_1_1functor" kindref="compound">functor</ref> * &gt; &amp;</type>
          <defname>backendFunctorCandidates</defname>
        </param>
        <briefdescription>
<para>Main function for resolution of backend requirements. </para>
        </briefdescription>
        <detaileddescription>
<para>Node-by-node backend resolution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="218" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="1649" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ae7c08617789f6791a5a671de4b809014" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::resolveVertexClassLoading</definition>
        <argsstring>(VertexID)</argsstring>
        <name>resolveVertexClassLoading</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::resolveVertexClassLoading</qualifiedname>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <briefdescription>
<para>Function for resolution of backends that need class loading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="221" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="2270" bodyend="2302"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1a8548dda963889772c2fa03c541c13f69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGambit_1_1functor" kindref="compound">functor</ref> *</type>
        <definition>functor * Gambit::DRes::DependencyResolver::solveRequirement</definition>
        <argsstring>(std::set&lt; sspair &gt;, VertexID, const std::vector&lt; functor * &gt; &amp;backendFunctorCandidates, std::vector&lt; functor * &gt;, bool, str group=&quot;none&quot;)</argsstring>
        <name>solveRequirement</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::solveRequirement</qualifiedname>
        <param>
          <type>std::set&lt; <ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref> &gt;</type>
          <defname>reqs</defname>
        </param>
        <param>
          <type>VertexID</type>
          <defname>toVertex</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classGambit_1_1functor" kindref="compound">functor</ref> * &gt; &amp;</type>
          <declname>backendFunctorCandidates</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classGambit_1_1functor" kindref="compound">functor</ref> * &gt;</type>
          <defname>previous_successes</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>allow_deferral</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <declname>group</declname>
          <defname>group_being_resolved</defname>
          <defval>&quot;none&quot;</defval>
        </param>
        <briefdescription>
<para>Find backend function matching any one of a number of capability-type pairs. </para>
        </briefdescription>
        <detaileddescription>
<para>Find a backend function that matches any one of a vector of capability-type pairs, ensuring consistency with all subjugate backend rules. As non-subjugate rules have global applicability, all instances are assumed to have already been applied before this function is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="224" column="17" bodyfile="Core/src/depresolver.cpp" bodystart="1761" bodyend="2067"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1ac7f5f458d34501bf0d448710f0c29db8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::DRes::DependencyResolver::resolveRequirement</definition>
        <argsstring>(functor *, VertexID)</argsstring>
        <name>resolveRequirement</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::resolveRequirement</qualifiedname>
        <param>
          <type><ref refid="classGambit_1_1functor" kindref="compound">functor</ref> *</type>
          <defname>func</defname>
        </param>
        <param>
          <type>VertexID</type>
          <defname>vertex</defname>
        </param>
        <briefdescription>
<para>Resolve a specific backend requirement. </para>
        </briefdescription>
        <detaileddescription>
<para>Resolve a backend requirement of a specific module function using a specific backend function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="228" column="14" bodyfile="Core/src/depresolver.cpp" bodystart="2070" bodyend="2077"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1DRes_1_1DependencyResolver_1af17b4b676ba50b2c019b3cbcd5fefd98" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; Gambit::DRes::DependencyResolver::closestCandidateForModel</definition>
        <argsstring>(std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt; candidates)</argsstring>
        <name>closestCandidateForModel</name>
        <qualifiedname>Gambit::DRes::DependencyResolver::closestCandidateForModel</qualifiedname>
        <param>
          <type>std::vector&lt; std::pair&lt; VertexID, bool &gt; &gt;</type>
          <declname>candidates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find candidate functions that are tailor made for models that are scanned over. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/include/gambit/Core/depresolver.hpp" line="232" column="21" bodyfile="Core/src/depresolver.cpp" bodystart="927" bodyend="958"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main dependency resolver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Core/include/gambit/Core/depresolver.hpp" line="95" column="5" bodyfile="Core/include/gambit/Core/depresolver.hpp" bodystart="96" bodyend="299"/>
    <listofallmembers>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ab14e76b4b77ed47c635dc648c441be30" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>activeFunctorGraphFile</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a845d4fb7924dc0d4438c8a172e710f88" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>addFunctors</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ad11c99e05579481d5ab39c515d7a944c" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>backend_rules</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aa7d98bbbfbea0b3c0025982a81eaae2b" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>backendsRequired</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aa2a23c1bf69c44d4e78cb2df80c330d5" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>boundClaw</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a39f618ea4083bc3e8ddbcb02cfb4d910" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>boundCore</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1afced2e83d05e896ba224ac0fe3d90cc5" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>boundIniFile</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1abe449d5a9ac88a379fe77e64b41417f9" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>boundPrinter</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a1d3b191db63a8871a9c463a103c74eaa" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>boundTEs</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1afa3088d2a077c242b828e88cca733a83" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>calcObsLike</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aa617b3ddd28fc765c34a00cae73fed66" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>checkForUnusedRules</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aba8e0e814c0d219e5cd54ca70e0a276a" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>checkTypeMatch</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1acec5a611ed5bc88af0d10d835deacefb" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>citationKeys</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1af17b4b676ba50b2c019b3cbcd5fefd98" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>closestCandidateForModel</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a2f71ae65171fbf27af4bf23d16c247bb" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>collectIniOptions</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1afc2c132e0d48ff3338eb71576b2ebefb" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>collectSubCaps</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a9353d0f8e20d2c95904c68da9941df0a" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>cullInactiveFunctors</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a6426628265a7cffc30b7c9621482c13a" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>DependencyResolver</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a72ed968a7e576f65eac2377c1801b92a" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>doResolution</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a332cd7ec243f9df22054fbb1902fd2bb" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>edges_to_force_on_manager</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a71f45a068ac27882bcbe6e9a042fa413" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>fillResolutionQueue</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a6d889b9110f7daecc831ca4eb61c16ef" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>function_order</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a0f809fb676950644f6de04082fddbb55" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>generateTree</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ae7e850a58e8b7f522d4cccb17b65b464" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>get_functor</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a3ea65bc392da1a56582ebed41a285e4b" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>getCitationKeys</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a22b6c7bfe8e050e1dc58a2d02b522c3d" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>getMetadata</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aafcaf0f503f0dd63b980a0e02382ef79" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>getObsLike</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a30d38ecda49b2f8262ec4b8eb233017d" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>getObsLikeOrder</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ae98d6a0acb1b493cd84d82e11c68a951" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>getPurpose</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a9b5d8a393519f632ab075e4a4cc06ff8" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>index</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ad3eb3b638d0eb0617dadf0e713b7ce03" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>initialisePrinter</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a6653bbacfde4497a3d537ed353e71d4b" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>invalidatePointAt</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a7b101c7ab69b2b20fe176a8d3a1a6d0b" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>loopManagerMap</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a8ddd113fbc8f1d96087db4f6bb63aca7" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>makeFunctorsModelCompatible</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a6c4a62f06402e0e5661e8afea860d6ca" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>masterGraph</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ab569702dc67017aa98c082117a799337" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>module_rules</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a54cf63bbddbd257da41fd99f8d7076b5" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>obslikes</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aafb733b5435af24173ac2ab8b01a8ec2" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>outputVertices</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1aa276f86c57370bd816b2f34999ac9560" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>print_timing</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a1ac39a333ea2e4416e4185e0d7301c66" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>print_unitcube</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a8bafb4c67a0919b022f4fd0bf7f3601c" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printCitationKeys</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1abdb053f6ac6f9897de0f92b7e7d17cc1" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printFunctorEvalOrder</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a2241df7dab86fb7f4e94a0bc6446e948" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printFunctorList</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1afc360e9cb7ee22c43e0b34f6c8efc71e" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printGenericFunctorList</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a248deea5ab9ba68c7f84ca51fdfdb4fc" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printGenericFunctorList</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a064894da4a8f97e25ef68143325bb83f" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printGenericFunctorList</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a6f46e083ee2cc5263a6bb4bfae4fd2b8" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printGenericFunctorList</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a74102627105fece2320a05e2f083a0bf" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printObsLike</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1af9c9b4963729c69e9d112b08683e32f1" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printQuantityToBeResolved</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a0b980b6e419cef3ff5f91c5c6f0d58e7" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printRequiredBackends</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a94136ad1670eac56a068eb4b7dfee201" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>printTiming</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ac6d8b3156d2eb33e1846ab464ffe630c" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>resetAll</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ac5f4063e0e2d20b0d0b9477cc8998d34" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>resolveDependencyFromRules</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ac7f5f458d34501bf0d448710f0c29db8" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>resolveRequirement</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ad6516ce548d30c52ac464d15d74c2720" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>resolveVertexBackend</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ae7c08617789f6791a5a671de4b809014" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>resolveVertexClassLoading</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a1c15541272fcad2ac2f0fbc6116a76d1" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>run_topological_sort</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1ac59ab983a978be91cdb304959b99428a" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>scanID</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a11ddcda2378184e2377696c0f83fd5d1" prot="public" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>set_scanID</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a8548dda963889772c2fa03c541c13f69" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>solveRequirement</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1a352db59746b3705316402f18dc5f12b8" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>SortedParentVertices</name></member>
      <member refid="classGambit_1_1DRes_1_1DependencyResolver_1afff92a3e72a68407aca51c7edcd26321" prot="private" virt="non-virtual"><scope>Gambit::DRes::DependencyResolver</scope><name>updateCandidates</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
