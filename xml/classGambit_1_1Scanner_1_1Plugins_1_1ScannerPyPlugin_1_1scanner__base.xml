<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</compoundname>
    <includes refid="py__module__scan_8hpp" local="no">py_module_scan.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a8b559f9a5f3e86cad384ae6f168fe3a6" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classGambit_1_1Scanner_1_1Function__Base" kindref="compound">Gambit::Scanner::Function_Base</ref>&lt; double(std::unordered_map&lt; std::string, double &gt; &amp;)&gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt;Gambit::Scanner::Function_Base&lt;double (std::unordered_map&lt;std::string, double&gt; &amp;)&gt; &gt; Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_ptr</definition>
        <argsstring></argsstring>
        <name>s_ptr</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="287" column="45" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a412cd6838a2b3e11a7166b3aa939725a" prot="public" static="no">
        <type><ref refid="classGambit_1_1Scanner_1_1Function__Base" kindref="compound">Gambit::Scanner::Function_Base</ref>&lt; double(std::unordered_map&lt; std::string, double &gt; &amp;)&gt;</type>
        <definition>typedef Gambit::Scanner::Function_Base&lt;double (std::unordered_map&lt;std::string, double&gt; &amp;)&gt; Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_func</definition>
        <argsstring></argsstring>
        <name>s_func</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="288" column="60" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a3fdd4d8b4b383d28c36034cf012f1ae2" prot="public" static="no">
        <type><ref refid="structGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1like__hypercube" kindref="compound">Gambit::Scanner::Plugins::ScannerPyPlugin::like_hypercube</ref></type>
        <definition>typedef Gambit::Scanner::Plugins::ScannerPyPlugin::like_hypercube Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_hyper_func</definition>
        <argsstring></argsstring>
        <name>s_hyper_func</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_hyper_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="289" column="87" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a38dac7555934757b34c2d50d47530362" prot="public" static="no">
        <type><ref refid="structGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1like__physical" kindref="compound">Gambit::Scanner::Plugins::ScannerPyPlugin::like_physical</ref></type>
        <definition>typedef Gambit::Scanner::Plugins::ScannerPyPlugin::like_physical Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_phys_func</definition>
        <argsstring></argsstring>
        <name>s_phys_func</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_phys_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="290" column="86" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a95f2a4b69360e552e66667eb122d0691" prot="public" static="no">
        <type><ref refid="structGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1like__prior__physical" kindref="compound">Gambit::Scanner::Plugins::ScannerPyPlugin::like_prior_physical</ref></type>
        <definition>typedef Gambit::Scanner::Plugins::ScannerPyPlugin::like_prior_physical Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_phys_pr_func</definition>
        <argsstring></argsstring>
        <name>s_phys_pr_func</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_phys_pr_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="291" column="92" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a52595cfedf34e61efc0025973ec4cd7a" prot="public" static="no">
        <type><ref refid="structGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1prior__physical" kindref="compound">Gambit::Scanner::Plugins::ScannerPyPlugin::prior_physical</ref></type>
        <definition>typedef Gambit::Scanner::Plugins::ScannerPyPlugin::prior_physical Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_pr_func</definition>
        <argsstring></argsstring>
        <name>s_pr_func</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::s_pr_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="292" column="87" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a0908475f5574a654c59ec27dbf79199f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::run</qualifiedname>
        <briefdescription>
<para>A method to run the scanner. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is intended to be overridden by derived classes. If not overridden, it will print an error message and return 1.</para>
<para><simplesect kind="return"><para>Returns 1 if the method is not overridden in a derived class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="301" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="301" bodyend="305"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1ac7d60fff7eb473ded62d7a30f6a025ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>py::list</type>
        <definition>static py::list Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::to_list</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vec)</argsstring>
        <name>to_list</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::to_list</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Converts a vector to a Python list. </para>
        </briefdescription>
        <detaileddescription>
<para>This static method is used to convert a standard C++ vector into a Python list. Each element of the vector is appended to the Python list.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements in the vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to be converted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a Python list containing the elements of the input vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="317" column="37" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="317" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a15bd9545661800fd6aed07953e985105" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>YAML::Node &amp;</type>
        <definition>static YAML::Node &amp; Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::getNode</definition>
        <argsstring>()</argsstring>
        <name>getNode</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::getNode</qualifiedname>
        <briefdescription>
<para>Retrieves the <ref refid="namespaceYAML" kindref="compound">YAML</ref> node. </para>
        </briefdescription>
        <detaileddescription>
<para>This static method is used to retrieve the <ref refid="namespaceYAML" kindref="compound">YAML</ref> node. If the node has not been initialized, it is set to the result of the <computeroutput>get_inifile_node</computeroutput> function.</para>
<para><simplesect kind="return"><para>Returns a reference to the <ref refid="namespaceYAML" kindref="compound">YAML</ref> node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="333" column="39" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="333" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a931220e2f5b21e89008d45d6ab822530" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classGambit_1_1Scanner_1_1Function__Base" kindref="compound">s_func</ref> &gt;</type>
        <definition>static std::shared_ptr&lt; s_func &gt; Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::getLike</definition>
        <argsstring>()</argsstring>
        <name>getLike</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::getLike</qualifiedname>
        <briefdescription>
<para>Retrieves the likelihood function. </para>
        </briefdescription>
        <detaileddescription>
<para>This static method is used to retrieve the likelihood function. If the function has not been initialized, it is set to the result of the <computeroutput>get_purpose</computeroutput> function with the &quot;like&quot; node from the <ref refid="namespaceYAML" kindref="compound">YAML</ref> node as the argument.</para>
<para><simplesect kind="return"><para>Returns a shared pointer to the likelihood function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="347" column="44" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="347" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a75c6d55709a1e9d90a975803ada87243" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::with_mpi</definition>
        <argsstring>()</argsstring>
        <name>with_mpi</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::with_mpi</qualifiedname>
        <briefdescription>
<para>Checks if MPI is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>This static method is used to check if MPI is enabled.</para>
<para><simplesect kind="return"><para>Returns false if MPI is not enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="401" column="33" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="401" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a4b4e3d9390b27b74ace1fdf016fbc092" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::rank</qualifiedname>
        <briefdescription>
<para>Retrieves the rank of the MPI process. </para>
        </briefdescription>
        <detaileddescription>
<para>This static method is used to retrieve the rank of the MPI process.</para>
<para><simplesect kind="return"><para>Returns 0 if MPI is not enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="410" column="32" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="410" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a1f751eee28360bb61bb7aeb9715c6fac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::numtasks</definition>
        <argsstring>()</argsstring>
        <name>numtasks</name>
        <qualifiedname>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base::numtasks</qualifiedname>
        <briefdescription>
<para>Retrieves the number of MPI processes. </para>
        </briefdescription>
        <detaileddescription>
<para>This static method is used to retrieve the number of MPI processes.</para>
<para><simplesect kind="return"><para>Returns 1 if MPI is not enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="419" column="32" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="419" bodyend="419"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A base class for scanner functionality. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides a base for scanner functionality. It defines several types related to the Gambit::Scanner namespace and can be extended by other classes to provide more specific functionality. </para>
    </detaileddescription>
    <location file="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" line="284" column="17" bodyfile="ScannerBit/include/gambit/ScannerBit/py_module_scan.hpp" bodystart="285" bodyend="421"/>
    <listofallmembers>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a931220e2f5b21e89008d45d6ab822530" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>getLike</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a15bd9545661800fd6aed07953e985105" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>getNode</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a1f751eee28360bb61bb7aeb9715c6fac" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>numtasks</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a4b4e3d9390b27b74ace1fdf016fbc092" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>rank</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a0908475f5574a654c59ec27dbf79199f" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>run</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a412cd6838a2b3e11a7166b3aa939725a" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>s_func</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a3fdd4d8b4b383d28c36034cf012f1ae2" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>s_hyper_func</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a38dac7555934757b34c2d50d47530362" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>s_phys_func</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a95f2a4b69360e552e66667eb122d0691" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>s_phys_pr_func</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a52595cfedf34e61efc0025973ec4cd7a" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>s_pr_func</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a8b559f9a5f3e86cad384ae6f168fe3a6" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>s_ptr</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1ac7d60fff7eb473ded62d7a30f6a025ab" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>to_list</name></member>
      <member refid="classGambit_1_1Scanner_1_1Plugins_1_1ScannerPyPlugin_1_1scanner__base_1a75c6d55709a1e9d90a975803ada87243" prot="public" virt="non-virtual"><scope>Gambit::Scanner::Plugins::ScannerPyPlugin::scanner_base</scope><name>with_mpi</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
