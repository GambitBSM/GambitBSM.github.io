<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="jswarm_8cpp" kind="file" language="C++">
    <compoundname>jswarm.cpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="jswarm_8hpp" local="yes">gambit/ScannerBit/scanners/jswarm/jswarm.hpp</includes>
    <incdepgraph>
      <node id="41">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="70">
        <label>gambit/Printers/basebaseprinter.hpp</label>
        <link refid="basebaseprinter_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gambit/Printers/baseprintermanager.hpp</label>
        <link refid="baseprintermanager_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>gambit/Printers/printer_id_tools.hpp</label>
        <link refid="printer__id__tools_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>gambit/ScannerBit/base_prior.hpp</label>
        <link refid="base__prior_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>gambit/ScannerBit/factory_defs.hpp</label>
        <link refid="factory__defs_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/ScannerBit/plugin_defs.hpp</label>
        <link refid="plugin__defs_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>gambit/ScannerBit/plugin_details.hpp</label>
        <link refid="plugin__details_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gambit/ScannerBit/plugin_loader.hpp</label>
        <link refid="plugin__loader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>gambit/ScannerBit/plugin_macros.hpp</label>
        <link refid="plugin__macros_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/ScannerBit/printable_types.hpp</label>
        <link refid="ScannerBit_2include_2gambit_2ScannerBit_2printable__types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>gambit/ScannerBit/printer_interface.hpp</label>
        <link refid="printer__interface_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>gambit/ScannerBit/scanner_plugin.hpp</label>
        <link refid="scanner__plugin_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gambit/ScannerBit/scanner_util_types.hpp</label>
        <link refid="scanner__util__types_8hpp"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>gambit/ScannerBit/scanner_utils.hpp</label>
        <link refid="scanner__utils_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/ScannerBit/scanners/jswarm/jswarm.hpp</label>
        <link refid="jswarm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>jswarm.cpp</label>
        <link refid="jswarm_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="18">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="42">
        <label>gambit/Utils/factory_registry.hpp</label>
        <link refid="factory__registry_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gambit/Utils/mpiwrapper.hpp</label>
        <link refid="mpiwrapper_8hpp"/>
      </node>
      <node id="75">
        <label>gambit/Utils/new_mpi_datatypes.hpp</label>
        <link refid="new__mpi__datatypes_8hpp"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>gambit/Utils/signal_handling.hpp</label>
        <link refid="signal__handling_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="76">
        <label>gambit/Utils/type_index.hpp</label>
        <link refid="type__index_8hpp"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>Eigen/Dense</label>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="51">
        <label>array</label>
      </node>
      <node id="84">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="83">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="32">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="27">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="16">
        <label>boost/iterator/zip_iterator.hpp</label>
      </node>
      <node id="38">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="37">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="26">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="36">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="39">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="40">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="71">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="35">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="17">
        <label>boost/range.hpp</label>
      </node>
      <node id="25">
        <label>boost/version.hpp</label>
      </node>
      <node id="46">
        <label>cassert</label>
      </node>
      <node id="15">
        <label>cctype</label>
      </node>
      <node id="82">
        <label>chrono</label>
      </node>
      <node id="62">
        <label>cmath</label>
      </node>
      <node id="56">
        <label>complex</label>
      </node>
      <node id="55">
        <label>cstring</label>
      </node>
      <node id="50">
        <label>deque</label>
      </node>
      <node id="21">
        <label>exception</label>
      </node>
      <node id="49">
        <label>forward_list</label>
      </node>
      <node id="45">
        <label>fstream</label>
      </node>
      <node id="77">
        <label>functional</label>
      </node>
      <node id="80">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="44">
        <label>iostream</label>
      </node>
      <node id="61">
        <label>limits</label>
      </node>
      <node id="48">
        <label>list</label>
      </node>
      <node id="19">
        <label>map</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="85">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="54">
        <label>omp.h</label>
      </node>
      <node id="11">
        <label>ostream</label>
      </node>
      <node id="5">
        <label>random</label>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="91">
        <label>setjmp.h</label>
      </node>
      <node id="90">
        <label>signal.h</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="66">
        <label>typeinfo</label>
      </node>
      <node id="23">
        <label>unistd.h</label>
      </node>
      <node id="13">
        <label>unordered_map</label>
      </node>
      <node id="47">
        <label>unordered_set</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="59">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="jswarm_8cpp_1a45bd835d61e8ca6f1969929ed8c976e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scanner_plugin</definition>
        <argsstring>(jswarm, version(1, 0, 0))</argsstring>
        <name>scanner_plugin</name>
        <param>
          <type>jswarm</type>
        </param>
        <param>
          <type>version(1, 0, 0)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/src/scanners/jswarm/jswarm.cpp" line="21" column="1" bodyfile="ScannerBit/src/scanners/jswarm/jswarm.cpp" bodystart="21" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>j-Swarm: particle swarm optimisation with meta-optimisation a la jDE.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pat.scott@uq.edu.au">pat.scott@uq.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Oct</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>j-Swarm:<sp/>particle<sp/>swarm<sp/>optimisation<sp/>with</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>meta-optimisation<sp/>a<sp/>la<sp/>jDE.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pat.scott@uq.edu.au)</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>Oct</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="jswarm_8hpp" kindref="compound">gambit/ScannerBit/scanners/jswarm/jswarm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">scanner_plugin(jswarm,<sp/>version(1,<sp/>0,<sp/>0))</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>jswarm<sp/>stuff<sp/>and<sp/>standard<sp/>Gambit<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Gambit::jswarm_1_0_0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>thrown<sp/>if<sp/>the<sp/>following<sp/>entries<sp/>are<sp/>not<sp/>present<sp/>in<sp/>the<sp/>inifile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="plugin__macros_8hpp_1af78b22cbfedf773b4f33f289273ca3d7" kindref="member">reqd_inifile_entries</ref>(</highlight><highlight class="stringliteral">&quot;NP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>new<sp/>particle<sp/>swarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm" kindref="compound">particle_swarm</ref><sp/>swarm;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Code<sp/>to<sp/>execute<sp/>when<sp/>the<sp/>plugin<sp/>is<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="plugin__macros_8hpp_1a4fd10504e6d4312d8cf422589cd2ec88" kindref="member">plugin_constructor</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>external<sp/>likelihood<sp/>calculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref><sp/>=<sp/><ref refid="py__module__scan_8hpp_1a71272e867e38e328024ae75d8c84eaa0" kindref="member">get_purpose</ref>(get_inifile_value&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;like&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref>-&gt;getRank()<sp/>==<sp/>0)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>j-Swarm<sp/>plugin<sp/>for<sp/>ScannerBit.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>external<sp/>printer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a99a46596d1e1754fe21d95fee60217ee" kindref="member">printer</ref><sp/>=<sp/>&amp;(<ref refid="py__module__obj_8hpp_1a4db5be61616f2b963ec1e5e404e96c30" kindref="member">get_printer</ref>());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>allow<sp/>GAMBIT&apos;s<sp/>own<sp/>likelihood<sp/>calculator<sp/>to<sp/>directly<sp/>shut<sp/>down<sp/>the<sp/>scan.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>j-Swarm<sp/>will<sp/>assume<sp/>responsibility<sp/>for<sp/>this<sp/>process,<sp/>triggered<sp/>externally<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;plugin_info.early_shutdown_in_progress()&apos;<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref>-&gt;disable_external_shutdown();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="plugin__macros_8hpp_1ae8aab4313bbf2ee1c1aee6e579a7a3c4" kindref="member">plugin_main</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>to<sp/>save<sp/>j-Swarm<sp/>samples,<sp/>resume<sp/>files,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>defpath<sp/>=<sp/>get_inifile_value&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;default_output_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>root<sp/>=<sp/>Utils::ensure_path_exists(get_inifile_value&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">,defpath+</highlight><highlight class="stringliteral">&quot;j-Swarm/native&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1aaba48f4da1c8e83e634a3434ac6cd7bb" kindref="member">path</ref><sp/>=<sp/>root;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>the<sp/>printer<sp/>if<sp/>this<sp/>is<sp/>a<sp/>resumed<sp/>run<sp/>or<sp/>not,<sp/>and<sp/>check<sp/>that<sp/>the<sp/>necessary<sp/>files<sp/>exist<sp/>if<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resume<sp/>=<sp/><ref refid="py__module__obj_8hpp_1a4db5be61616f2b963ec1e5e404e96c30" kindref="member">get_printer</ref>().<ref refid="classGambit_1_1Printers_1_1BasePrinterManager_1af088d15880482f31233ea03d98a3a0ec" kindref="member">resume_mode</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resume)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>good<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;str&gt;<sp/>names<sp/>=<sp/>initVector&lt;str&gt;(root+</highlight><highlight class="stringliteral">&quot;.settings.yaml&quot;</highlight><highlight class="normal">,<sp/>root+</highlight><highlight class="stringliteral">&quot;.lastgen&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>names.begin();<sp/>it<sp/>!=<sp/>names.end();<sp/>++it)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>file(*it);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>good<sp/>and<sp/>file.good()<sp/>and<sp/>(file.peek()<sp/>!=<sp/>std::ifstream::traits_type::eof());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>good)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="classGambit_1_1warning" kindref="compound">warning</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1warning" kindref="compound">warning</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>resume<sp/>previous<sp/>j-Swarm<sp/>run<sp/>because<sp/>one<sp/>or<sp/>all<sp/>of&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>names.begin();<sp/>it<sp/>!=<sp/>names.end();<sp/>++it)<sp/><ref refid="classGambit_1_1warning" kindref="compound">warning</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*it<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1warning" kindref="compound">warning</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>missing<sp/>or<sp/>empty.<sp/><sp/>This<sp/>is<sp/>probably<sp/>because<sp/>your<sp/>last<sp/>run<sp/>didn&apos;t<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;complete<sp/>even<sp/>one<sp/>generation.<sp/>j-Swarm<sp/>will<sp/>start<sp/>from<sp/>scratch,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;as<sp/>if<sp/>you<sp/>had<sp/>specified<sp/>-r.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref>-&gt;getRank()<sp/>==<sp/>0)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classGambit_1_1warning" kindref="compound">warning</ref>.str()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_warn<sp/>&lt;&lt;<sp/><ref refid="classGambit_1_1warning" kindref="compound">warning</ref>.str()<sp/>&lt;&lt;<sp/>scan_end;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resume<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a1666abaca7c08bc88c6536268e889870" kindref="member">resume</ref><sp/>=<sp/>resume;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>global<sp/>option<sp/>specifying<sp/>the<sp/>minimum<sp/>interesting<sp/>likelihood.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gl0<sp/>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;likelihood:<sp/>model_invalid_for_lnlike_below&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>global<sp/>option<sp/>specifying<sp/>the<sp/>likelihood<sp/>offset<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;likelihood:<sp/>lnlike_offset&quot;</highlight><highlight class="normal">,<sp/>1e-4*gl0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>likleihood<sp/>functor<sp/>knows<sp/>to<sp/>apply<sp/>the<sp/>offset<sp/>internally<sp/>in<sp/>ScannerBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref>-&gt;setPurposeOffset(offset);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>the<sp/>minimum<sp/>interesting<sp/>likelihood<sp/>by<sp/>the<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>gl0<sp/>=<sp/>gl0<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>j-Swarm<sp/>run<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1aefccb6eb1dc3fe1daf9b82ba25205d49" kindref="member">nPar</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="py__module__scan_8hpp_1a77a5ace4f7203e5822c626918993a14e" kindref="member">get_dimension</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dimensionality<sp/>of<sp/>the<sp/>parameter<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1ad5db2524959d803912ee9dfaa5e4f9ba" kindref="member">nDerived</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>derived<sp/>quantities<sp/>to<sp/>output<sp/>(GAMBIT<sp/>printers<sp/>handle<sp/>these).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a2998721cb42446f4c5ef815b2a8b62a7" kindref="member">nDiscrete</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;nDiscrete&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>parameters<sp/>that<sp/>are<sp/>to<sp/>be<sp/>treated<sp/>as<sp/>discrete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a19603e71ccbd360f0c8071ca58e384e8" kindref="member">maxgen</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;maxgen&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5000);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>generations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a8d6fa63fb3fd1aa6e8c7de75d4ee029e" kindref="member">NP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;NP&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Population<sp/>size<sp/>(individuals<sp/>per<sp/>generation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a268939522e122929c487c65a8c26f258" kindref="member">omega</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;omega&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7298);<sp/></highlight><highlight class="comment">//<sp/>Inertial<sp/>weight<sp/>(default<sp/>is<sp/>Constriction<sp/>Coefficient<sp/>PSO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a3cb5b8a41d76210d52b4fb060ee5e4f2" kindref="member">phi1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;phi1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.5);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cognitive<sp/>weight<sp/>(default<sp/>is<sp/>Constriction<sp/>Coefficient<sp/>PSO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a35fa8aa163445ad9d8a67aad4f149263" kindref="member">phi2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;phi2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.5);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Social<sp/>weight<sp/>(default<sp/>is<sp/>Constriction<sp/>Coefficient<sp/>PSO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a287d1e3b250a5862ee57f7136f31a43f" kindref="member">bndry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;bndry&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Boundary<sp/>constraint:<sp/>1=brick<sp/>wall,<sp/>2=random<sp/>re-initialization,<sp/>3=reflection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a1a2a88be7c2c8ec9bf98452699aecd62" kindref="member">adapt_phi</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;bool&gt;<sp/><sp/>(</highlight><highlight class="stringliteral">&quot;adaptive_phi&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>self-optimising<sp/>adaptive<sp/>choices<sp/>for<sp/>phi1<sp/>and<sp/>phi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1aa66cf9176c2096de2916e3e20953043e" kindref="member">adapt_omega</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;bool&gt;<sp/><sp/>(</highlight><highlight class="stringliteral">&quot;adaptive_omega&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>self-optimising<sp/>adaptive<sp/>choices<sp/>for<sp/>omega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a72c44f2ebda3d672bb8e45166694d4ff" kindref="member">convthresh</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;convthresh&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.e-3);<sp/><sp/></highlight><highlight class="comment">//<sp/>Threshold<sp/>for<sp/>gen-level<sp/>convergence:<sp/>smoothed<sp/>fractional<sp/>improvement<sp/>in<sp/>the<sp/>mean<sp/>personal<sp/>best<sp/>population<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acda37e8f11678ba74a8f4f288d605b42" kindref="member">convsteps</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;convsteps&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>steps<sp/>to<sp/>smooth<sp/>over<sp/>when<sp/>checking<sp/>convergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a2ec65ab69ab0129e7862733482d4d984" kindref="member">savecount</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;savecount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>progress<sp/>every<sp/>savecount<sp/>generations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1ac71129d9d94d8026a2accf67f7d6f032" kindref="member">init_pop_strategy</ref><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;init_population_strategy&quot;</highlight><highlight class="normal">,<sp/>2);</highlight><highlight class="comment">//<sp/>Initialisation<sp/>strategy:<sp/>0=one<sp/>shot,<sp/>1=n-shot,<sp/>2=n-shot<sp/>with<sp/>error<sp/>if<sp/>no<sp/>valid<sp/>vectors<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a7538299024744af1e37b8797d1eed058" kindref="member">init_stationary</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;bool&gt;<sp/><sp/>(</highlight><highlight class="stringliteral">&quot;init_stationary&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>particle<sp/>velocities<sp/>to<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1aab9cfead1c206d1d8772f1acd14474aa" kindref="member">max_ini_attempts</ref><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_initialisation_attempts&quot;</highlight><highlight class="normal">,<sp/>10000);<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>times<sp/>to<sp/>try<sp/>to<sp/>find<sp/>a<sp/>valid<sp/>vector<sp/>for<sp/>each<sp/>slot<sp/>in<sp/>the<sp/>initial<sp/>population.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1ab071d6326a87c3bf71a219260bc6af62" kindref="member">min_acceptable_value</ref>=<sp/>get_inifile_value&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;min_acceptable_value&quot;</highlight><highlight class="normal">,0.9999*gl0);<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>function<sp/>value<sp/>to<sp/>accept<sp/>for<sp/>the<sp/>initial<sp/>generation<sp/>if<sp/>init_population_strategy<sp/>&gt;<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a1b273a298d805f9b4de548d400628963" kindref="member">verbose</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;verbosity&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>verbosity:<sp/>0=only<sp/>error<sp/>messages,<sp/>1=basic<sp/>info,<sp/>2=generation-level<sp/>info,<sp/>3+=particle-level<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acf47987d841d4c7c5029844615928ef4" kindref="member">seed</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_inifile_value&lt;int&gt;<sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;seed&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>seed<sp/>for<sp/>random<sp/>number<sp/>generation;<sp/>non-positive<sp/>means<sp/>seed<sp/>from<sp/>the<sp/>system<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1ad34cf4a1394f4fa375405cfd500c07e0" kindref="member">allow_new_settings</ref><sp/><sp/>=<sp/>get_inifile_value&lt;bool&gt;<sp/><sp/>(</highlight><highlight class="stringliteral">&quot;allow_new_settings&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>settings<sp/>to<sp/>be<sp/>overridden<sp/>with<sp/>new<sp/>values<sp/>when<sp/>resuming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1ae07b325fab1014800ebc184d75ffbeb2" kindref="member">save_particles_natively</ref><sp/>=<sp/>get_inifile_value&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;save_particles_natively&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Save<sp/>full<sp/>particle<sp/>data<sp/>from<sp/>every<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>swarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a90e2ad0eb3c4a145558f65e48f5584ba" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unit<sp/>cube<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1aefccb6eb1dc3fe1daf9b82ba25205d49" kindref="member">nPar</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swarm.lowerbounds.at(i)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1ac834fe49e4cd8495b3327dbf68488fb1" kindref="member">upperbounds</ref>.at(i)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Discrete<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a2998721cb42446f4c5ef815b2a8b62a7" kindref="member">nDiscrete</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a6490b9d6c9eaee65fba71c924f5fe4ef" kindref="member">discrete</ref>.at(i)<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//Inidices<sp/>of<sp/>discrete<sp/>parameters<sp/>(C-style,<sp/>starting<sp/>at<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>Needs<sp/>to<sp/>be<sp/>set<sp/>automatically<sp/>somehow?<sp/><sp/>Not<sp/>yet<sp/>sure<sp/>how<sp/>to<sp/>deal<sp/>with<sp/>discrete<sp/>parameters<sp/>in<sp/>GAMBIT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>the<sp/>swarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref>-&gt;getRank()<sp/>==<sp/>0)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>j-Swarm<sp/>run...\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1a685ca1bcb13abfc67e70127f3dd36a2d" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swarm.<ref refid="classGambit_1_1jswarm__1__0__0_1_1particle__swarm_1acc5b679c66b7206256bf145cf6447b48" kindref="member">likelihood_function</ref>-&gt;getRank()<sp/>==<sp/>0)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;j-Swarm<sp/>run<sp/>finished!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ScannerBit/src/scanners/jswarm/jswarm.cpp"/>
  </compounddef>
</doxygen>
