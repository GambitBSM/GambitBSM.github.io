<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="SpecBit__MSSM__rollcall_8hpp" kind="file" language="C++">
    <compoundname>SpecBit_MSSM_rollcall.hpp</compoundname>
    <includes local="yes">gambit/Utils/slhaea_helpers.hpp</includes>
    <includedby refid="SpecBit__rollcall_8hpp" local="yes">SpecBit_rollcall.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>SpecBit_MSSM_rollcall.hpp</label>
        <link refid="SpecBit__MSSM__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="14">
        <label>SpecBit_examples.cpp</label>
        <link refid="SpecBit__examples_8cpp"/>
      </node>
      <node id="15">
        <label>SpecBit_tests.cpp</label>
        <link refid="examples_2SpecBit__tests_8cpp"/>
      </node>
      <node id="1">
        <label>SpecBit_MSSM_rollcall.hpp</label>
        <link refid="SpecBit__MSSM__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SpecBit_rollcall.hpp</label>
        <link refid="SpecBit__rollcall_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SpecBit.cpp</label>
        <link refid="SpecBit_8cpp"/>
      </node>
      <node id="5">
        <label>SpecBit_DMEFT.cpp</label>
        <link refid="SpecBit__DMEFT_8cpp"/>
      </node>
      <node id="6">
        <label>SpecBit_DiracSingletDM.cpp</label>
        <link refid="SpecBit__DiracSingletDM_8cpp"/>
      </node>
      <node id="7">
        <label>SpecBit_MDM.cpp</label>
        <link refid="SpecBit__MDM_8cpp"/>
      </node>
      <node id="8">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="9">
        <label>SpecBit_MajoranaSingletDM.cpp</label>
        <link refid="SpecBit__MajoranaSingletDM_8cpp"/>
      </node>
      <node id="10">
        <label>SpecBit_SM.cpp</label>
        <link refid="SpecBit__SM_8cpp"/>
      </node>
      <node id="11">
        <label>SpecBit_ScalarSingletDM.cpp</label>
        <link refid="SpecBit__ScalarSingletDM_8cpp"/>
      </node>
      <node id="12">
        <label>SpecBit_VS.cpp</label>
        <link refid="SpecBit__VS_8cpp"/>
      </node>
      <node id="13">
        <label>SpecBit_VectorSingletDM.cpp</label>
        <link refid="SpecBit__VectorSingletDM_8cpp"/>
      </node>
      <node id="16">
        <label>SpecBit_tests.cpp</label>
        <link refid="src_2SpecBit__tests_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>unimproved_MSSM_spectrum</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="53" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_SPheno</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="61" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_from_SLHAfile</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="193" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_from_SLHAstruct</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="203" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_as_SLHAea_SLHA1</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="210" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_as_SLHAea_SLHA2</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="216" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_from_postprocessor</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="222" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>MSSM_spectrum</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="231" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_MSSM_spectrum_as_map</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="234" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>unimproved_MSSM_spectrum</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="240" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_unimproved_MSSM_spectrum_as_map</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="242" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>SM_subspectrum</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="248" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_SM_SubSpectrum_from_MSSM_Spectrum</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="261" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>MSSMMasses</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="270" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>FeynHiggs_MSSMMasses</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="272" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>HiggsMasses</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="287" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>FeynHiggs_AllHiggsMasses</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="289" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>prec_mh</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="303" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>FeynHiggs_HiggsMass</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="306" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>SUSYHD_HiggsMass</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="313" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>prec_HeavyHiggsMasses</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="324" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>FeynHiggs_HeavyHiggsMasses</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="326" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>FH_Couplings_output</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="334" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>FeynHiggs_Couplings</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="336" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>Higgs_Couplings</initializer>
        <briefdescription>
<para>Functions to supply particle spectra in various forms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="349" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>MSSM_higgs_couplings_pwid</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="351" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>MSSM_higgs_couplings_FeynHiggs</initializer>
        <briefdescription>
<para>SPheno spectrum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Get MSSM spectrum from CMSSM boundary conditions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="365" column="13" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__MSSM__rollcall_8hpp_1a6e3d14a7041b144e9f59b1d6ab0a7f78" prot="public" static="no" mutable="no">
        <type></type>
        <definition>int int Farray&lt; fh_real, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_complex, 1, 2, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_real, 1, 6, 1, 5 &gt; Farray&lt; fh_complex, 1, 36, 1, 5 &gt; Farray&lt; fh_real, 1, 2 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_real, 1, 4 &gt; Farray&lt; fh_complex, 1, 16 &gt; fh_complex fh_real Farray&lt; fh_real, 1, 4 &gt; fh_real libfeynhiggs</definition>
        <argsstring></argsstring>
        <name>libfeynhiggs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="274" column="6" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__MSSM__rollcall_8hpp_1ac9c84fa68bbad002983e35ce3663c686" prot="public" static="no" mutable="no">
        <type></type>
        <definition>void</definition>
        <argsstring></argsstring>
        <name>void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="274" column="19" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__MSSM__rollcall_8hpp_1a8f99c9da06285a04469d0cf39ba76e7c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>MReal</definition>
        <argsstring></argsstring>
        <name>MReal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="317" column="7" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1aefa3b7b9aa4a2fe937ecacc79b537a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(SPheno_MSSMspectrum,(libSPheno), int,(Spectrum &amp;, const Finputs &amp;)) BACKEND_OPTION((SPheno</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>SPheno_MSSMspectrum</type>
        </param>
        <param>
          <type>(libSPheno)</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>(Spectrum &amp;, const Finputs &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1a2e218472f6818e015791c2293bf8bde8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEPENDENCY</definition>
        <argsstring>(unimproved_MSSM_spectrum, Spectrum) DEPENDENCY(unimproved_MSSM_spectrum</argsstring>
        <name>DEPENDENCY</name>
        <param>
          <type>unimproved_MSSM_spectrum</type>
        </param>
        <param>
          <type>Spectrum</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="212" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1a4fc366db4546e7d086e2690d0b9e9534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ALLOW_MODELS</definition>
        <argsstring>(MSSM63atMGUT, MSSM63atMGUT_mA, MSSM63atQ, MSSM63atQ_mA) DEPENDENCY(SMINPUTS</argsstring>
        <name>ALLOW_MODELS</name>
        <param>
          <type>MSSM63atMGUT</type>
        </param>
        <param>
          <type>MSSM63atMGUT_mA</type>
        </param>
        <param>
          <type>MSSM63atQ</type>
        </param>
        <param>
          <type>MSSM63atQ_mA</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="224" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1ad1ec3c4c2097a4cfe824accdc724188f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>START_FUNCTION</definition>
        <argsstring>(map_str_dbl) START_FUNCTION(map_str_dbl) START_CAPABILITY START_CAPABILITY BACKEND_REQ(FHGetPara</argsstring>
        <name>START_FUNCTION</name>
        <param>
          <type>map_str_dbl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="235" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1adbc733221f5d90457938761ba58ea992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int int Farray&lt; fh_real, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_complex, 1, 2, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_real, 1, 6, 1, 5 &gt; Farray&lt; fh_complex, 1, 36, 1, 5 &gt; Farray&lt; fh_real, 1, 2 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_real, 1, 4 &gt; Farray&lt; fh_complex, 1, 16 &gt; fh_complex fh_real Farray&lt; fh_real, 1, 4 &gt; fh_real &amp;</type>
        <definition>int int Farray&lt; fh_real, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_complex, 1, 2, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_real, 1, 6, 1, 5 &gt; Farray&lt; fh_complex, 1, 36, 1, 5 &gt; Farray&lt; fh_real, 1, 2 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_real, 1, 4 &gt; Farray&lt; fh_complex, 1, 16 &gt; fh_complex fh_real Farray&lt; fh_real, 1, 4 &gt; fh_real &amp; BACKEND_OPTION</definition>
        <argsstring>((FeynHiggs),(libfeynhiggs)) START_CAPABILITY BACKEND_REQ(FHHiggsCorr</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(FeynHiggs)</type>
        </param>
        <param>
          <type>(libfeynhiggs)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="281" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1a69dd4ef5aa57c707f38475ac3a952786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int int Farray&lt; fh_real, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_complex, 1, 2, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_real, 1, 6, 1, 5 &gt; Farray&lt; fh_complex, 1, 36, 1, 5 &gt; Farray&lt; fh_real, 1, 2 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_real, 1, 4 &gt; Farray&lt; fh_complex, 1, 16 &gt; fh_complex fh_real Farray&lt; fh_real, 1, 4 &gt; fh_real int Farray&lt; fh_real, 1, 4 &gt; fh_complex Farray&lt; fh_complex, 1, 3, 1, 3 &gt; Farray&lt; fh_complex, 1, 3, 1, 3 &gt; &amp;</type>
        <definition>int int Farray&lt; fh_real, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_complex, 1, 2, 1, 2, 1, 5, 1, 3 &gt; Farray&lt; fh_real, 1, 6, 1, 5 &gt; Farray&lt; fh_complex, 1, 36, 1, 5 &gt; Farray&lt; fh_real, 1, 2 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_complex, 1, 4 &gt; Farray&lt; fh_real, 1, 4 &gt; Farray&lt; fh_complex, 1, 16 &gt; fh_complex fh_real Farray&lt; fh_real, 1, 4 &gt; fh_real int Farray&lt; fh_real, 1, 4 &gt; fh_complex Farray&lt; fh_complex, 1, 3, 1, 3 &gt; Farray&lt; fh_complex, 1, 3, 1, 3 &gt; &amp; BACKEND_REQ</definition>
        <argsstring>(FHUncertainties,(libfeynhiggs), void,(int &amp;, Farray&lt; fh_real, 1, 4 &gt; &amp;, fh_complex &amp;, Farray&lt; fh_complex, 1, 3, 1, 3 &gt; &amp;, Farray&lt; fh_complex, 1, 3, 1, 3 &gt; &amp;)) BACKEND_OPTION((FeynHiggs)</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>FHUncertainties</type>
        </param>
        <param>
          <type>(libfeynhiggs)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(int &amp;, Farray&lt; fh_real, 1, 4 &gt; &amp;, fh_complex &amp;, Farray&lt; fh_complex, 1, 3, 1, 3 &gt; &amp;, Farray&lt; fh_complex, 1, 3, 1, 3 &gt; &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="294" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1adb8b616ec2dbe43153661a30cb05e623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(SUSYHD_MHiggs,(), MReal,(const MList&lt; MReal &gt; &amp;)) BACKEND_REQ(SUSYHD_DeltaMHiggs</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>SUSYHD_MHiggs</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>MReal</type>
        </param>
        <param>
          <type>(const MList&lt; MReal &gt; &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="316" column="5"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__MSSM__rollcall_8hpp_1a4fdabb83e6b6adc252ae547454c8bbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(FHSelectUZ,(libfeynhiggs), void,(int &amp;, int &amp;, int &amp;, int &amp;)) BACKEND_REQ(FHCouplings</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>FHSelectUZ</type>
        </param>
        <param>
          <type>(libfeynhiggs)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(int &amp;, int &amp;, int &amp;, int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp" line="338" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Rollcall declarations for module functions contained in <ref refid="SpecBit__MSSM_8cpp" kindref="compound">SpecBit_MSSM.cpp</ref></para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Sep - Dec, 2015 Jan - Mar</para>
</simplesect>
<simplesect kind="author"><para>Christopher Rogan (<ulink url="mailto:christophersrogan@gmail.com">christophersrogan@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Apr</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:t.e.gonzalo@fys.uio.no">t.e.gonzalo@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Jue, 2017 Jan</para>
</simplesect>
<hruler/>
</para>
<para>SPECIAL NOTE: Since FlexibleSUSY cannot yet be backended via BOSS, we need some special preprocessor directives in here to &quot;manually&quot; remove GAMBIT functions which depend on various FlexibleSUSY models existing, in the case where GAMBIT was configured to build without those models. These take the form of simple #ifndef guards, e.g.</para>
<para>#if(FS_MODEL_MSSMatMGUT_IS_BUILT) &lt;compile this stuff&gt; #endif</para>
<para>This stuff should be removed when FlexibleSUSY becomes a &quot;real&quot; backend. The preprocessor variables are created automatically in cmake/contrib.cmake as part of the FlexibleSUSY configuration process. Note that these <ref refid="DarkSUSY__MSSM__6__2__5_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" kindref="member">if</ref> checks are in both this header AND these source files which define the corresponding module functions. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Rollcall<sp/>declarations<sp/>for<sp/>module<sp/>functions</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>contained<sp/>in<sp/>SpecBit_MSSM.cpp</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/><sp/><sp/>\date<sp/>2014<sp/>Sep<sp/>-<sp/>Dec,<sp/>2015<sp/>Jan<sp/>-<sp/>Mar</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\author<sp/>Christopher<sp/>Rogan</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(christophersrogan@gmail.com)</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Apr</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t.e.gonzalo@fys.uio.no)</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Jue,<sp/>2017<sp/>Jan</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>SPECIAL<sp/>NOTE:<sp/>Since<sp/>FlexibleSUSY<sp/>cannot<sp/>yet<sp/>be<sp/>backended<sp/>via<sp/>BOSS,<sp/>we</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/>need<sp/>some<sp/>special<sp/>preprocessor<sp/>directives<sp/>in<sp/>here<sp/>to<sp/>&quot;manually&quot;<sp/>remove</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>GAMBIT<sp/>functions<sp/>which<sp/>depend<sp/>on<sp/>various<sp/>FlexibleSUSY<sp/>models<sp/>existing,</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>in<sp/>the<sp/>case<sp/>where<sp/>GAMBIT<sp/>was<sp/>configured<sp/>to<sp/>build<sp/>without<sp/>those<sp/>models.</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///<sp/><sp/>These<sp/>take<sp/>the<sp/>form<sp/>of<sp/>simple<sp/>#ifndef<sp/>guards,<sp/>e.g.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/>#if(FS_MODEL_MSSMatMGUT_IS_BUILT)</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/><sp/>&lt;compile<sp/>this<sp/>stuff&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///<sp/><sp/>#endif</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///</highlight></codeline>
<codeline lineno="36"><highlight class="comment">///<sp/><sp/>This<sp/>stuff<sp/>should<sp/>be<sp/>removed<sp/>when<sp/>FlexibleSUSY<sp/>becomes<sp/>a<sp/>&quot;real&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="comment">///<sp/><sp/>backend.<sp/>The<sp/>preprocessor<sp/>variables<sp/>are<sp/>created<sp/>automatically<sp/>in</highlight></codeline>
<codeline lineno="38"><highlight class="comment">///<sp/><sp/>cmake/contrib.cmake<sp/>as<sp/>part<sp/>of<sp/>the<sp/>FlexibleSUSY<sp/>configuration<sp/>process.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">///<sp/><sp/>Note<sp/>that<sp/>these<sp/>#if<sp/>checks<sp/>are<sp/>in<sp/>both<sp/>this<sp/>header<sp/>AND<sp/>these</highlight></codeline>
<codeline lineno="40"><highlight class="comment">///<sp/><sp/>source<sp/>files<sp/>which<sp/>define<sp/>the<sp/>corresponding<sp/>module<sp/>functions.</highlight></codeline>
<codeline lineno="41"><highlight class="comment">///</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>__SpecBit_MSSM_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SpecBit_MSSM_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>this<sp/>here<sp/>so<sp/>that<sp/>typedef<sp/>for<sp/>SLHAstruct<sp/>gets<sp/>passed<sp/>on<sp/>to<sp/>standalone<sp/>codes<sp/>which<sp/>use<sp/>these<sp/>module<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/slhaea_helpers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>///<sp/>@{<sp/>Functions<sp/>to<sp/>supply<sp/>particle<sp/>spectra<sp/>in<sp/>various<sp/>forms</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>capability<sp/>supplies<sp/>the<sp/>physical<sp/>mass<sp/>spectrum<sp/>of<sp/>the<sp/>MSSM<sp/>plus<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>in<sp/>the<sp/>DRbar<sp/>scheme.<sp/>This<sp/>can<sp/>be<sp/>generated<sp/>by<sp/>many<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constrained<sp/>models<sp/>with<sp/>various<sp/>boundary<sp/>conditions,<sp/>or<sp/>defined<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>unimproved_MSSM_spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GUT<sp/>MSSM<sp/>parameterisations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(CMSSM<sp/>and<sp/>its<sp/>various<sp/>non-universal<sp/>generalisations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>SPheno<sp/>spectrum<sp/>function</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_SPheno</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(CMSSM,<sp/>MSSM63atMGUT,<sp/>MSSM63atQ)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(SPheno_MSSMspectrum,<sp/>(libSPheno),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(Spectrum&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Finputs&amp;)<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_OPTION((SPheno,<sp/>3.3.8,<sp/>4.0.3),<sp/>(libSPheno))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>MSSM<sp/>spectrum<sp/>from<sp/>CMSSM<sp/>boundary<sp/>conditions</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>The<sp/>type,<sp/>(const)<sp/>Spectrum,<sp/>is<sp/>a<sp/>class<sp/>containing<sp/>two<sp/>SubSpectrum*<sp/>members<sp/>and<sp/>an<sp/>SMInputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>member.<sp/>The<sp/>SubSpectrum*<sp/>members<sp/>point<sp/>to<sp/>a<sp/>&quot;UV&quot;<sp/>Spectrum<sp/>object<sp/>(the<sp/>MSSM)<sp/>and<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&quot;LE&quot;<sp/>(low<sp/>energy)<sp/>Spectrum<sp/>object<sp/>(an<sp/>effective<sp/>Standard<sp/>Model<sp/>description),<sp/>while<sp/>SMInputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>contains<sp/>the<sp/>information<sp/>in<sp/>the<sp/>SMINPUTS<sp/>block<sp/>defined<sp/>by<sp/>SLHA2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_CMSSM_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_CMSSM_spectrum_FS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(CMSSM)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FlexibleSUSY<sp/>compatible<sp/>maximal<sp/>CMSSM<sp/>generalisation<sp/>(MSSM<sp/>with<sp/>GUT<sp/>boundary<sp/>conditions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMatMGUT_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatMGUT_spectrum_FS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMGUT)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>with<sp/>input<sp/>at<sp/>(user-defined)<sp/>scale<sp/>Q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSM_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatQ_spectrum_FS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mA<sp/>and<sp/>mu<sp/>(instead<sp/>of<sp/>mHu2<sp/>and<sp/>mHd2)<sp/>at<sp/>(user-defined)<sp/>scale<sp/>Q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSM_mAmu_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatQ_mA_spectrum_FS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ_mA)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mA<sp/>and<sp/>mu<sp/>(instead<sp/>of<sp/>mHu2<sp/>and<sp/>mHd2)<sp/>at<sp/>GUT<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMatMGUT_mAmu_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatMGUT_mA_spectrum_FS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMGUT_mA)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>at<sp/>GUT<sp/>scale<sp/>with<sp/>EFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMatMGUTEFTHiggs_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatMGUT_spectrum_FlexibleEFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMGUT)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mA<sp/>and<sp/>mu<sp/>(instead<sp/>of<sp/>mHu2<sp/>and<sp/>mHd2)<sp/>at<sp/>GUT<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>EFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMatMGUTEFTHiggs_mAmu_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatMGUT_mA_spectrum_FlexibleEFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMGUT_mA)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mA<sp/>and<sp/>mu<sp/>(instead<sp/>of<sp/>mHu2<sp/>and<sp/>mHd2)<sp/>at<sp/>SUSY<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMatMSUSY_mAmu_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatMSUSY_mA_spectrum_FS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMSUSY_mA)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mA<sp/>and<sp/>mu<sp/>(instead<sp/>of<sp/>mHu2<sp/>and<sp/>mHd2)<sp/>at<sp/>SUSY<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>FlexibleEFTHiggs<sp/>(FlexibleSUSY<sp/>hybrid<sp/>EFT<sp/>/<sp/>Fixed<sp/>order<sp/>calculation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMatMSUSYEFTHiggs_mAmu_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatMSUSY_mA_spectrum_FlexibleEFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMSUSY_mA)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mHu2<sp/>and<sp/>mHd2<sp/>(instead<sp/>of<sp/>mu<sp/>and<sp/>Bmu)<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>chosen<sp/>scale<sp/>via<sp/>FlexibleEFTHiggs<sp/>(FlexibleSUSY<sp/>hybrid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EFT<sp/>/<sp/>Fixed<sp/>order<sp/>calculation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMEFTHiggs_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatQ_spectrum_FlexibleEFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================<sp/>MSSM<sp/>parameterised<sp/>by<sp/>mA<sp/>and<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(instead<sp/>of<sp/>mHu2<sp/>and<sp/>mHd2)<sp/>at<sp/>user<sp/>chosen<sp/>scale<sp/>via</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FlexibleEFTHiggs<sp/>(FlexibleSUSY<sp/>hybrid<sp/>EFT<sp/>/<sp/>Fixed<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(FS_MODEL_MSSMEFTHiggs_mAmu_IS_BUILT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSMatQ_mA_spectrum_FlexibleEFTHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ_mA)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>set<sp/>up<sp/>spectrum<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>spectrum<sp/>retrieved<sp/>from<sp/>an<sp/>SLHA<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wraps<sp/>it<sp/>up<sp/>in<sp/>MSSMskeleton;<sp/>i.e.<sp/>no<sp/>RGE<sp/>running<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>mainly<sp/>for<sp/>testing<sp/>against<sp/>benchmark<sp/>points,<sp/>but<sp/>may<sp/>be<sp/>a<sp/>useful<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resort<sp/>for<sp/>interacting<sp/>with<sp/>&quot;difficult&quot;<sp/>spectrum<sp/>generators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_from_SLHAfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Technically<sp/>doesn&apos;t<sp/>need<sp/>a<sp/>Model<sp/>to<sp/>work...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Could<sp/>add<sp/>some<sp/>kind<sp/>of<sp/>dependency<sp/>here,<sp/>like<sp/>on<sp/>the<sp/>input<sp/>filename,<sp/>to<sp/>allow<sp/>dependency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resolver<sp/>to<sp/>ignore<sp/>it<sp/>most<sp/>of<sp/>the<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSSM<sp/>spectrum<sp/>constructed<sp/>from<sp/>an<sp/>SLHAstruct<sp/>(SLHAea::Coll).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>use<sp/>as<sp/>an<sp/>improvement<sp/>upon<sp/>creating<sp/>a<sp/>Spectrum<sp/>object<sp/>from<sp/>an<sp/>SLHA<sp/>file<sp/>(avoids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disk<sp/>access),<sp/>but<sp/>without<sp/>going<sp/>to<sp/>a<sp/>full<sp/>SubSpectrum<sp/>wrapper<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_from_SLHAstruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>SLHAstruct)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>unimproved<sp/>MSSM<sp/>spectrum<sp/>as<sp/>an<sp/>SLHAea<sp/>object,<sp/>in<sp/>SLHA1<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_as_SLHAea_SLHA1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SLHAstruct)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>a<sp/>Spectrum<sp/>object<sp/>and<sp/>returns<sp/>an<sp/>SLHAstruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>unimproved<sp/>MSSM<sp/>spectrum<sp/>as<sp/>an<sp/>SLHAea<sp/>object,<sp/>in<sp/>SLHA2<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_as_SLHAea_SLHA2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SLHAstruct)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>a<sp/>Spectrum<sp/>object<sp/>and<sp/>returns<sp/>an<sp/>SLHAstruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>MSSM<sp/>spectrum<sp/>from<sp/>previous<sp/>GAMBIT<sp/>output<sp/>via<sp/>the<sp/>postprocessor<sp/>scanner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_from_postprocessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(Spectrum)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atMGUT,MSSM63atMGUT_mA,MSSM63atQ,MSSM63atQ_mA)<sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>for<sp/>tanbeta(mZ)_DRbar<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)<sp/></highlight><highlight class="comment">//<sp/>Need<sp/>SLHA2<sp/>SMINPUTS<sp/>to<sp/>create<sp/>full<sp/>Spectrum<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>MSSM_spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>an<sp/>MSSM_spectrum<sp/>into<sp/>a<sp/>standard<sp/>map<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>printed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_MSSM_spectrum_as_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(map_str_dbl)<sp/></highlight><highlight class="comment">//<sp/>Just<sp/>a<sp/>string<sp/>to<sp/>double<sp/>map.<sp/>Can&apos;t<sp/>have<sp/>commas<sp/>in<sp/>macro<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>unimproved_MSSM_spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>above,<sp/>but<sp/>works<sp/>with<sp/>unimproved<sp/>version<sp/>of<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_unimproved_MSSM_spectrum_as_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(map_str_dbl)<sp/></highlight><highlight class="comment">//<sp/>Just<sp/>a<sp/>string<sp/>to<sp/>double<sp/>map.<sp/>Can&apos;t<sp/>have<sp/>commas<sp/>in<sp/>macro<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>SM_subspectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>NOTE!<sp/>I<sp/>removed<sp/>this<sp/>because<sp/>currently<sp/>the<sp/>string<sp/>names<sp/>don&apos;t<sp/>quite<sp/>match<sp/>correctly<sp/>and<sp/>the<sp/>MSSM<sp/>version<sp/>doesn&apos;t<sp/>provide<sp/>all<sp/>the<sp/>Standard<sp/>Model<sp/>pole<sp/>masses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>#define<sp/>FUNCTION<sp/>convert_MSSM_to_SM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>START_FUNCTION(Spectrum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/>etc.<sp/>for<sp/>other<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>appropriate<sp/>SubSpectrum*<sp/>from<sp/>Spectrum<sp/>struct,<sp/>starting<sp/>from<sp/>MSSM_spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_SM_SubSpectrum_from_MSSM_Spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum*)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FeynHiggs<sp/>SUSY<sp/>masses<sp/>and<sp/>mixings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>MSSMMasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>FeynHiggs_MSSMMasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(fh_MSSMMassObs_container)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(FHGetPara,<sp/>(libfeynhiggs),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;fh_real,<sp/>1,2,<sp/>1,5,<sp/>1,3&gt;&amp;,<sp/>Farray&lt;fh_complex,<sp/>1,2,<sp/>1,2,<sp/>1,5,<sp/>1,3&gt;&amp;,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;fh_real,<sp/>1,6,<sp/>1,5&gt;&amp;,<sp/>Farray&lt;fh_complex,<sp/>1,36,<sp/>1,5&gt;&amp;,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_real,1,2&gt;&amp;,<sp/>Farray&lt;<sp/>fh_complex,1,4&gt;&amp;,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_complex,1,4&gt;&amp;,<sp/>Farray&lt;<sp/>fh_real,1,4&gt;&amp;,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_complex,1,16&gt;&amp;,<sp/>fh_complex&amp;,<sp/>fh_real&amp;,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_real,1,4&gt;&amp;,<sp/>fh_real&amp;))</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_OPTION(<sp/>(FeynHiggs),<sp/>(libfeynhiggs)<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Higgs<sp/>masses<sp/>and<sp/>mixings<sp/>with<sp/>theoretical<sp/>uncertainties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>HiggsMasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>FeynHiggs_AllHiggsMasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(fh_HiggsMassObs_container)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(FHHiggsCorr,<sp/>(libfeynhiggs),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>Farray&lt;<sp/>fh_real,1,4&gt;&amp;,<sp/>fh_complex&amp;,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;fh_complex,<sp/>1,3,<sp/>1,3&gt;&amp;,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;fh_complex,<sp/>1,3,<sp/>1,3&gt;&amp;))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(FHUncertainties,<sp/>(libfeynhiggs),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>Farray&lt;<sp/>fh_real,1,4&gt;&amp;,<sp/>fh_complex&amp;,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;fh_complex,<sp/>1,3,<sp/>1,3&gt;&amp;,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;fh_complex,<sp/>1,3,<sp/>1,3&gt;&amp;))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_OPTION(<sp/>(FeynHiggs),<sp/>(libfeynhiggs)<sp/>)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SM-like<sp/>Higgs<sp/>mass<sp/>with<sp/>theoretical<sp/>uncertainties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>prec_mh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>FeynHiggs_HiggsMass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(triplet&lt;double&gt;)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(HiggsMasses,<sp/>fh_HiggsMassObs_container)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SUSYHD_HiggsMass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(triplet&lt;double&gt;)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(SUSYHD_MHiggs,<sp/>(),<sp/>MReal,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MList&lt;MReal&gt;&amp;))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(SUSYHD_DeltaMHiggs,<sp/>(),<sp/>MReal,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MList&lt;MReal&gt;&amp;))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-SM-like,<sp/>charged<sp/>and<sp/>CP-odd<sp/>Higgs<sp/>masses<sp/>with<sp/>theoretical<sp/>uncertainties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>prec_HeavyHiggsMasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>FeynHiggs_HeavyHiggsMasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(map_int_triplet_dbl)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(unimproved_MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(HiggsMasses,<sp/>fh_HiggsMassObs_container)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Higgs<sp/>couplings<sp/>information<sp/>directly<sp/>computed<sp/>by<sp/>FeynHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="SpecBit__MSSM__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>FH_Couplings_output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="336" refid="SpecBit__MSSM__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>FeynHiggs_Couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(fh_Couplings_container)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(FHSelectUZ,<sp/>(libfeynhiggs),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ(FHCouplings,<sp/>(libfeynhiggs),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>Farray&lt;<sp/>fh_complex,1,681&gt;&amp;,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_complex,1,231&gt;&amp;,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_real,1,978&gt;&amp;,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Farray&lt;<sp/>fh_real,1,250&gt;&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_OPTION(<sp/>(FeynHiggs),<sp/>(libfeynhiggs)<sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generalised<sp/>Higgs<sp/>couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>Higgs_Couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>MSSM_higgs_couplings_pwid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(HiggsCouplingsTable)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Reference_SM_Higgs_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Reference_SM_other_Higgs_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Reference_SM_A0_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Higgs_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(h0_2_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(A0_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(H_plus_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(t_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>MSSM_higgs_couplings_FeynHiggs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(HiggsCouplingsTable)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Reference_SM_Higgs_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Reference_SM_other_Higgs_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Reference_SM_A0_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Higgs_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(h0_2_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(A0_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(H_plus_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(t_decay_rates,<sp/>DecayTable::Entry)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(FH_Couplings_output,<sp/>fh_Couplings_container)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="384"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="SpecBit/include/gambit/SpecBit/SpecBit_MSSM_rollcall.hpp"/>
  </compounddef>
</doxygen>
