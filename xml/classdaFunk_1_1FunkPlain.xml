<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdaFunk_1_1FunkPlain" kind="class" language="C++" prot="public">
    <compoundname>daFunk::FunkPlain</compoundname>
    <basecompoundref refid="classdaFunk_1_1FunkBase" prot="public" virt="non-virtual">daFunk::FunkBase</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdaFunk_1_1FunkPlain_1a60c1f09d9587ff9e7082d914f63aab8a" prot="private" static="no" mutable="no">
        <type>shared_ptr&lt; <ref refid="classdaFunk_1_1FunkBound" kindref="compound">FunkBound</ref> &gt;</type>
        <definition>shared_ptr&lt;FunkBound&gt; daFunk::FunkPlain::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>daFunk::FunkPlain::f</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="576" column="24" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdaFunk_1_1FunkPlain_1a31521275eab948b901190749b38803ac" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string daFunk::FunkPlain::arg1</definition>
        <argsstring></argsstring>
        <name>arg1</name>
        <qualifiedname>daFunk::FunkPlain::arg1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="577" column="25" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdaFunk_1_1FunkPlain_1add6a4f77e44cbdc0289a6e02501120ba" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string daFunk::FunkPlain::arg2</definition>
        <argsstring></argsstring>
        <name>arg2</name>
        <qualifiedname>daFunk::FunkPlain::arg2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="577" column="30" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdaFunk_1_1FunkPlain_1a58437ef2f267da1e06e36b755f751fb8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string daFunk::FunkPlain::arg3</definition>
        <argsstring></argsstring>
        <name>arg3</name>
        <qualifiedname>daFunk::FunkPlain::arg3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="577" column="35" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdaFunk_1_1FunkPlain_1acc904defebe60b6ad7586ea184a9fcba" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string daFunk::FunkPlain::arg4</definition>
        <argsstring></argsstring>
        <name>arg4</name>
        <qualifiedname>daFunk::FunkPlain::arg4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="577" column="40" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="577" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a4dce661663bfb36e0536fb667d740b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>daFunk::FunkPlain::FunkPlain</definition>
        <argsstring>(Funk fin, std::string arg1)</argsstring>
        <name>FunkPlain</name>
        <qualifiedname>daFunk::FunkPlain::FunkPlain</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>fin</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="516" column="13" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="516" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a241a624960c56b2a5e6081cab8661a75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>daFunk::FunkPlain::FunkPlain</definition>
        <argsstring>(Funk fin, std::string arg1, std::string arg2)</argsstring>
        <name>FunkPlain</name>
        <qualifiedname>daFunk::FunkPlain::FunkPlain</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>fin</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="517" column="13" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="517" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a06a4eedf91e7a487bd3ac2018fcbc421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>daFunk::FunkPlain::FunkPlain</definition>
        <argsstring>(Funk fin, std::string arg1, std::string arg2, std::string arg3)</argsstring>
        <name>FunkPlain</name>
        <qualifiedname>daFunk::FunkPlain::FunkPlain</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>fin</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="518" column="13" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="518" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a0fdd5003cb9503791787197c35c1681f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>daFunk::FunkPlain::FunkPlain</definition>
        <argsstring>(Funk fin, std::string arg1, std::string arg2, std::string arg3, std::string arg4)</argsstring>
        <name>FunkPlain</name>
        <qualifiedname>daFunk::FunkPlain::FunkPlain</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>fin</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="519" column="13" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="519" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a1dd1065be449e8064e70152f0c4437a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double daFunk::FunkPlain::value</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;args, size_t bindID)</argsstring>
        <name>value</name>
        <qualifiedname>daFunk::FunkPlain::value</qualifiedname>
        <reimplements refid="classdaFunk_1_1FunkBase_1a8646477e9ad3843343f86466b8a34f14">value</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bindID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="567" column="20" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="567" bodyend="573"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a069c22bc1e4f50de12bfdf121cea982c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain1p</definition>
        <argsstring>(double x1, void *ptr)</argsstring>
        <name>plain1p</name>
        <qualifiedname>daFunk::FunkPlain::plain1p</qualifiedname>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="521" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="521" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a25f0a88c72eb57675368646f95835adc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain2p</definition>
        <argsstring>(double x1, double x2, void *ptr)</argsstring>
        <name>plain2p</name>
        <qualifiedname>daFunk::FunkPlain::plain2p</qualifiedname>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="526" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="526" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a751dea120fd0b4ead0f6b1b04089497b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain3p</definition>
        <argsstring>(double x1, double x2, double x3, void *ptr)</argsstring>
        <name>plain3p</name>
        <qualifiedname>daFunk::FunkPlain::plain3p</qualifiedname>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="531" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="531" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a5041fa98975e7a976c5cd1d0bc885c5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain4p</definition>
        <argsstring>(double x1, double x2, double x3, double x4, void *ptr)</argsstring>
        <name>plain4p</name>
        <qualifiedname>daFunk::FunkPlain::plain4p</qualifiedname>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x4</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="536" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="536" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a0bd86131661c75d9b553d18cae6e1052" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain1</definition>
        <argsstring>(double &amp;x1)</argsstring>
        <name>plain1</name>
        <qualifiedname>daFunk::FunkPlain::plain1</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="543" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="543" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a7b111c8c2a8ecd8cb10e8a55618a9d4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain2</definition>
        <argsstring>(double &amp;x1, double &amp;x2)</argsstring>
        <name>plain2</name>
        <qualifiedname>daFunk::FunkPlain::plain2</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="549" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="549" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a48c7b802028774d732fe62d0464e7f8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain3</definition>
        <argsstring>(double &amp;x1, double &amp;x2, double &amp;x3)</argsstring>
        <name>plain3</name>
        <qualifiedname>daFunk::FunkPlain::plain3</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="555" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkPlain_1a127462431a6465b594b832d103729ff0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double daFunk::FunkPlain::plain4</definition>
        <argsstring>(double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)</argsstring>
        <name>plain4</name>
        <qualifiedname>daFunk::FunkPlain::plain4</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="561" column="27" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="561" bodyend="565"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>enable_shared_from_this&lt; FunkBase &gt;</label>
      </node>
      <node id="2">
        <label>daFunk::FunkBase</label>
        <link refid="classdaFunk_1_1FunkBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>daFunk::FunkPlain</label>
        <link refid="classdaFunk_1_1FunkPlain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>enable_shared_from_this&lt; FunkBase &gt;</label>
      </node>
      <node id="2">
        <label>daFunk::FunkBase</label>
        <link refid="classdaFunk_1_1FunkBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>daFunk::FunkPlain</label>
        <link refid="classdaFunk_1_1FunkPlain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Elements/include/gambit/Elements/daFunk.hpp" line="513" column="5" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="514" bodyend="578"/>
    <listofallmembers>
      <member refid="classdaFunk_1_1FunkPlain_1a31521275eab948b901190749b38803ac" prot="private" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>arg1</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1add6a4f77e44cbdc0289a6e02501120ba" prot="private" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>arg2</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a58437ef2f267da1e06e36b755f751fb8" prot="private" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>arg3</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1acc904defebe60b6ad7586ea184a9fcba" prot="private" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>arg4</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a73ec0ca81fe7249e7ee09b67a59e471b" prot="protected" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>arguments</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a679402022fce75370ad30477b92f502d" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>assert_args</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ad7ab386a6519b1ef6cba6ac0b391e431" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>bind</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ab80524b8e5c7a60570f18df12af05ae8" prot="protected" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>datalen</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a60c1f09d9587ff9e7082d914f63aab8a" prot="private" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>f</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a020c9ed50ea915133590d9dd8a8731be" prot="protected" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>functions</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a7a657dce4094e02dbc3d8b135a260181" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>FunkBase</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a4dce661663bfb36e0536fb667d740b6a" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>FunkPlain</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a241a624960c56b2a5e6081cab8661a75" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>FunkPlain</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a06a4eedf91e7a487bd3ac2018fcbc421" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>FunkPlain</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a0fdd5003cb9503791787197c35c1681f" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>FunkPlain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a0d349a5a4c0bedb82e59e884d06cd605" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>getArgs</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a674bc7d66557067d147143f0d33f4c96" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>getNArgs</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a37d346d0ce8455da5181eac03b1ec086" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>getSingl</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a696c3b38624a384adb3964bc46b6daab" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>gsl_integration</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a11d7ff51370a518e5ce71973084ee762" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>hasArg</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ac95b8e5d3310cca11d0ac66b0f3bd3c2" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>hasArgs</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ab858b68aa634343727b8937f40975b1f" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>help</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a310cde28ae9265ee10ff7a971483a71f" prot="protected" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>indices</name></member>
      <member refid="classdaFunk_1_1FunkBase_1abd4786ace406ae301e73c792576d46e4" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a1a35ec40bfe8cacc5db1bf1702b26b23" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a014b761207f78de72402ffe2ac9574b7" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1acb8abf10f25053ecd960cca112d62079" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a9a13d87e37788d771820668138e510d8" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1acd7b36586f8c1d403ab328d3f45bcdb2" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ae740382c4e301e4b263848036d8878d5" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a8765d42b92b146d43005f5768ddc2d4e" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a0bd86131661c75d9b553d18cae6e1052" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain1</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a069c22bc1e4f50de12bfdf121cea982c" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain1p</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a7b111c8c2a8ecd8cb10e8a55618a9d4e" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain2</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a25f0a88c72eb57675368646f95835adc" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain2p</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a48c7b802028774d732fe62d0464e7f8a" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain3</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a751dea120fd0b4ead0f6b1b04089497b" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain3p</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a127462431a6465b594b832d103729ff0" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain4</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a5041fa98975e7a976c5cd1d0bc885c5d" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>plain4p</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a8b0a5b7c978dfa79238cb6f4632c5ff4" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>print</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a7bcba52829e2cd811df21971a8fcae0b" prot="public" virt="virtual"><scope>daFunk::FunkPlain</scope><name>resolve</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a59ef787d56af732ab2249a94f07bb52b" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1aae15a3e1d861fef9e58201d90290a833" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a91ad28e40caf2b14207f6b52481a08fe" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a0aa7469b732ce5e6770bad99613d4dd2" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ac626df236aa4854e90958246de82305a" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a4a1d787379bf836b29d2d0c6e4a4cad6" prot="public" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>set_singularity</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a004962513ef67993ce7e66870073fab7" prot="protected" virt="non-virtual"><scope>daFunk::FunkPlain</scope><name>singularities</name></member>
      <member refid="classdaFunk_1_1FunkPlain_1a1dd1065be449e8064e70152f0c4437a8" prot="public" virt="virtual"><scope>daFunk::FunkPlain</scope><name>value</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a874043a27bdbd03c118c22c179f58b32" prot="public" virt="virtual"><scope>daFunk::FunkPlain</scope><name>~FunkBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
