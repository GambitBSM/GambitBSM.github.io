<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Printers_1_1HDF5Printer" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Printers::HDF5Printer</compoundname>
    <basecompoundref refid="classGambit_1_1Printers_1_1BasePrinter" prot="public" virt="non-virtual">Gambit::Printers::BasePrinter</basecompoundref>
    <includes refid="hdf5printer_8hpp" local="no">hdf5printer.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a0f3b5bc394a6b3ce08a9c6785967f53d" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(int)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(int )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_int</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_int</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_int</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="200" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a8e3fb1065803a58839cb92e451f9325d" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(uint)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(uint )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_uint</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_uint</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_uint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="201" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1aa45d4e66ba8454b32d25a25d93bf3718" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(long)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(long )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_long</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_long</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_long</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="202" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ae8004853768ccd018101853dba425a94" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(ulong)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(ulong )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_ulong</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_ulong</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_ulong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="203" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a28cfe513687e93eaa49b2d759570a7b5" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(longlong)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(longlong )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_longlong</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_longlong</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_longlong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="204" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a11315221e6ac6c9dfc148462aaa44ec9" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(ulonglong)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(ulonglong)&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_ulonglong</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_ulonglong</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_ulonglong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="205" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a646d9941d00245be41bc76313b5ea1d9" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(float)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(float )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_float</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_float</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="206" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1aafbe81f29eeabcc13ee2addbe8d0af45" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(double)&gt;</type>
        <definition>H5P_LocalBufferManager&lt;BT(double )&gt; Gambit::Printers::HDF5Printer::hdf5_localbufferman_double</definition>
        <argsstring></argsstring>
        <name>hdf5_localbufferman_double</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::hdf5_localbufferman_double</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="207" column="32" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1adda2ff058c51f04b80988377f582708a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Printer::is_stream_managed</definition>
        <argsstring>(VBIDpair &amp;key) const</argsstring>
        <name>is_stream_managed</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::is_stream_managed</qualifiedname>
        <param>
          <type><ref refid="structGambit_1_1Printers_1_1VBIDpair" kindref="compound">VBIDpair</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>HDF5Printer-specific functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if an output stream is already managed by some buffer in any printer.</para>
<para>Check if an output stream is already managed by some buffer in some printer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="178" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1127" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a62f0a6c84c7ff6fd5e37309ec3bd9572" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::get_location</definition>
        <argsstring>() const</argsstring>
        <name>get_location</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_location</qualifiedname>
        <briefdescription>
<para>Retrieve pointer to HDF5 location to which datasets are added. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="181" column="15" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1093" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a0cf8744f47e356d624909533d5d54f3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::get_RA_location</definition>
        <argsstring>() const</argsstring>
        <name>get_RA_location</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_RA_location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="182" column="15" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1104" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a8b7673bb2dfa1a9040d98760c998ce7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::insert_buffer</definition>
        <argsstring>(VBIDpair &amp;key, VertexBufferBase &amp;newbuffer)</argsstring>
        <name>insert_buffer</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::insert_buffer</qualifiedname>
        <param>
          <type><ref refid="structGambit_1_1Printers_1_1VBIDpair" kindref="compound">VBIDpair</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1Printers_1_1VertexBufferBase" kindref="compound">VertexBufferBase</ref> &amp;</type>
          <declname>newbuffer</declname>
        </param>
        <briefdescription>
<para>Add a pointer to a new buffer to the global list. </para>
        </briefdescription>
        <detaileddescription>
<para>Add a pointer to a new buffer to the global list for this printer and also register it with the list global to all printers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="185" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1117" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1ad85baf4e95d49dc93a614a3cf65c0cce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Gambit::Printers::HDF5Printer::get_sync_pos</definition>
        <argsstring>() const</argsstring>
        <name>get_sync_pos</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_sync_pos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of pointIDs know to this printer (should correspond to the number of &quot;appends&quot; each active buffer has received) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="189" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a534f85b53056d6519373acb2e94ea0c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt; <ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(T)&gt; &amp;</type>
        <definition>H5P_LocalBufferManager&lt; BT(T)&gt; &amp; Gambit::Printers::HDF5Printer::get_mybuffermanager</definition>
        <argsstring>(ulong, uint)</argsstring>
        <name>get_mybuffermanager</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_mybuffermanager</qualifiedname>
        <param>
          <type>ulong</type>
        </param>
        <param>
          <type>uint</type>
        </param>
        <briefdescription>
<para>Function used by print functions to retrieve their local buffer manager object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="211" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1add59236a4848f0d1476fe9470f82edc0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::add_PPID_to_list</definition>
        <argsstring>(const PPIDpair &amp;)</argsstring>
        <name>add_PPID_to_list</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::add_PPID_to_list</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &amp;</type>
          <defname>ppid</defname>
        </param>
        <briefdescription>
<para>Add <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> to global index list. </para>
        </briefdescription>
        <detaileddescription>
<para>Add <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> to global index list In this version of the <ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref>, this list applies only to RA points. Synchronised writes are not tracked. UPDATE! Due to memory issues with tracking many RA points, we now only track the last 10*BUFFERLENGTH points. When the PPID list gets &quot;full&quot; we do a flush, and then start tracking again, with the new list getting assigned only indices above the highest in the previous list. This means that the output will potentially have duplicate RA write commands, so the post-processing should be sure to preferrentially take the latest commands over earlier ones. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="215" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1147" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a51690cc5510d3d6f876dd9e7ae5bc09d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::reset_PPID_lists</definition>
        <argsstring>()</argsstring>
        <name>reset_PPID_lists</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::reset_PPID_lists</qualifiedname>
        <briefdescription>
<para>Completely reset the PPIDlists (e.g. used when printer is reset) </para>
        </briefdescription>
        <detaileddescription>
<para>Completely reset the PPIDlists. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="218" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1196" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a91a7d9b08560e339cdf392bd18fee4e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Printer::seen_PPID_before</definition>
        <argsstring>(const PPIDpair &amp;ppid)</argsstring>
        <name>seen_PPID_before</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::seen_PPID_before</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &amp;</type>
          <declname>ppid</declname>
        </param>
        <briefdescription>
<para>Check if <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> exists in global index list. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the printer for the highest ID number known for a given rank process (needed for resuming, so the scanner can resume assigning point ID from this value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="227" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1204" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a15a24d1fcfdb8fb920cc80f2550c7f47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::synchronise_buffers</definition>
        <argsstring>()</argsstring>
        <name>synchronise_buffers</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::synchronise_buffers</qualifiedname>
        <briefdescription>
<para>Function to ensure buffers are all synchronised to the same absolute position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="230" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1237" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1ab55e47c17ad8e714c4dad1fbaa25b05c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::check_sync</definition>
        <argsstring>(const std::string &amp;label, const int sync_type, bool checkall)</argsstring>
        <name>check_sync</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::check_sync</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>sync_type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkall</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For debugging: check that buffers are synced correctly Flag sets whether &quot;perfect&quot; sync is required, or whether some buffers can be ahead by one slot (due to having performed prints that other buffers have not yet done)</para>
<para>For debugging: check that buffers are synced correctly Flag sets whether &quot;perfect&quot; sync is required, or whether some buffers can be ahead by one slot (due to having performed prints that other buffers have not yet done) If checkall=true, then all_buffers is checked, not just all_my_buffers. Only primary printer can do this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="236" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1421" bodyend="1502"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1ab79898b49eee9f56a56b6dff7f03cf2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::empty_sync_buffers</definition>
        <argsstring>(bool force=false)</argsstring>
        <name>empty_sync_buffers</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::empty_sync_buffers</qualifiedname>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the buffers are full and waiting to be emptied By default this only empties buffers if they are full. Use flag to force the flush for the finalise buffer dumps. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="247" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1289" bodyend="1328"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a9e2379d473e99604613a74acc230a33a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::check_for_new_point</definition>
        <argsstring>(const PPIDpair &amp;)</argsstring>
        <name>check_for_new_point</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::check_for_new_point</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &amp;</type>
          <defname>candidate_newpoint</defname>
        </param>
        <briefdescription>
<para>Check whether printing to a new parameter space point is about to occur. </para>
        </briefdescription>
        <detaileddescription>
<para>Check whether printing to a new parameter space point is about to occur and perform adjustments needed to prepare the printer. </para>
        </detaileddescription>
        <inbodydescription>
<para>TODO: Ok currently cannot both print them here and in the scanner plugins. Need to deal with duplicate print attempts better.</para>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="251" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1507" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1ab476edaf5c2bdf2e995e67fe2f857037" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Gambit::Printers::HDF5Printer::get_global_index</definition>
        <argsstring>(const ulong pointID, const uint mpirank)</argsstring>
        <name>get_global_index</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_global_index</qualifiedname>
        <param>
          <type>const ulong</type>
          <declname>pointID</declname>
        </param>
        <param>
          <type>const uint</type>
          <declname>mpirank</declname>
        </param>
        <briefdescription>
<para>Retrieve index from global lookup table, with error checking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="254" column="23" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1213" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a51a58115c23ccacba79f600c453c4b21" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gambit::Printers::HDF5Printer::get_printer_name</definition>
        <argsstring>()</argsstring>
        <name>get_printer_name</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_printer_name</qualifiedname>
        <briefdescription>
<para>Get the name of this printer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="257" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1ad7fb360ce982caad71268207df365019" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Gambit::Printers::HDF5Printer::get_N_RApointIDs</definition>
        <argsstring>()</argsstring>
        <name>get_N_RApointIDs</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_N_RApointIDs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of RA write locations known to the primary printer NOTE: the meaning of this has changed slightly; it is the number of queued up RA write commands that should exist in the output datasets. The primary printer no longer tracks all of the IDs for every RA write command. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="263" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a9320f905d2f28ed02efb0c62a113a537" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::increment_sync_pos</definition>
        <argsstring>()</argsstring>
        <name>increment_sync_pos</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::increment_sync_pos</qualifiedname>
        <briefdescription>
<para>Move head dataset sync position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="266" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a5c316295641b9cfad7a11db77101f369" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::clear_previous_points</definition>
        <argsstring>()</argsstring>
        <name>clear_previous_points</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::clear_previous_points</qualifiedname>
        <briefdescription>
<para>Clear previous points list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="269" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a5e064cd3b03291c73cdc10c426abaec3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::prepare_and_combine_tmp_files</definition>
        <argsstring>()</argsstring>
        <name>prepare_and_combine_tmp_files</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::prepare_and_combine_tmp_files</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scan for existing temporary files, in preparation for combining them Should only do this if scan is resuming, and if we are process rank 0. </para>
        </detaileddescription>
        <inbodydescription>
<para>Check if temporary combined hdf5 file exists (from previous resume!) and can be opened in read/write mode</para>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="273" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="700" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a24ca1d25979638239173db79a5d772da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; unsigned long, unsigned long long int &gt;</type>
        <definition>std::map&lt; unsigned long, unsigned long long int &gt; Gambit::Printers::HDF5Printer::get_highest_PPID_from_HDF5</definition>
        <argsstring>(hid_t group_id)</argsstring>
        <name>get_highest_PPID_from_HDF5</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::get_highest_PPID_from_HDF5</qualifiedname>
        <param>
          <type>hid_t</type>
          <declname>group_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="276" column="18" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="174" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a34e24908e450e15afdb976d5b3269af3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; Gambit::Printers::HDF5Printer::find_temporary_files</definition>
        <argsstring>(const bool error_if_inconsistent=false)</argsstring>
        <name>find_temporary_files</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::find_temporary_files</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>error_if_inconsistent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Search the output directory for temporary files (pre-combination) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Already have a routine to do the work</para>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="279" column="21" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="678" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a0f7fd173be6a077d0b9674d4f70cbfe7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::combine_output_py</definition>
        <argsstring>(const std::vector&lt; std::string &gt; tmp_files, const bool finalcombine)</argsstring>
        <name>combine_output_py</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::combine_output_py</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt;</type>
          <declname>tmp_files</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>finalcombine</declname>
        </param>
        <briefdescription>
<para>Combine temporary hdf5 output files from each process into a single coherent hdf5 file. </para>
        </briefdescription>
        <detaileddescription>
<para>Combine temporary hdf5 output files from each process into a single coherent hdf5 file This version operates via the python script &apos;combine_hdf5.py&apos; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="282" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="975" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a2fc056b8ecec36c64f8fea1920e0c056" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::combine_output</definition>
        <argsstring>(const std::vector&lt; std::string &gt; tmp_files, const bool finalcombine)</argsstring>
        <name>combine_output</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::combine_output</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt;</type>
          <declname>tmp_files</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>finalcombine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combine temporary hdf5 output files from each process into a single coherent hdf5 file This version operates via Greg&apos;s C++ routines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="283" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1046" bodyend="1089"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a66ef433b191ed0a0eb092cce9c09fc9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::Printers::HDF5Printer::HDF5Printer</definition>
        <argsstring>(const Options &amp;, BasePrinter *const primary=NULL)</argsstring>
        <name>HDF5Printer</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::HDF5Printer</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <defname>options</defname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">BasePrinter</ref> *const</type>
          <declname>primary</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructor (for construction via inifile options) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref> member functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="140" column="9" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="308" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a9f04b780d15414e1c231f5ba29f7319d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::common_constructor</definition>
        <argsstring>(const Options &amp;)</argsstring>
        <name>common_constructor</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::common_constructor</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <defname>options</defname>
        </param>
        <briefdescription>
<para>Tasks common to the various constructors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check if combined output file exists</para>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="143" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="334" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1adc6a983b9217ed5a5be723a4d377fe47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::Printers::HDF5Printer::~HDF5Printer</definition>
        <argsstring>()</argsstring>
        <name>~HDF5Printer</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::~HDF5Printer</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="147" column="9" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="812" bodyend="815"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a5fc68fd41e63749711758ede8b25ce21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::initialise</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>initialise</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::initialise</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1BasePrinter_1afb115e9770b0b87a65e727554c7d899c">initialise</reimplements>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Initialisation function. </para>
        </briefdescription>
        <detaileddescription>
<para>Virtual function overloads: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="154" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="805" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1af4e33f85ace326238c5137b75438a850" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::flush</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1BasePrinter_1aeb68299b8d3c7c2c796751884d7241ba">flush</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Empty all the buffers to disk Note: Empty sync buffers will not get flushed, to avoid writing extra buffer-lengths at the end of scan. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="155" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1333" bodyend="1356"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1a8ff9e522536209f310a435eb0b8bcf0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::reset</definition>
        <argsstring>(bool force=false)</argsstring>
        <name>reset</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::reset</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1BaseBasePrinter_1aa0e06c38d025f5825b11572766387018">reset</reimplements>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalidate all data on disk which has been printed by this printer so far, and reset all the buffers to write back to the first data slots. This is only allowed if this is an auxilliary printer with global=true, or if &quot;force=true&quot; is specified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="156" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="1362" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1aa829f36d631d7f20e0499d633944f830" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::finalise</definition>
        <argsstring>(bool abnormal=false)</argsstring>
        <name>finalise</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::finalise</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1BaseBasePrinter_1abf3164e5e5d9a7de6a7df11c0f419ae7">finalise</reimplements>
        <param>
          <type>bool</type>
          <declname>abnormal</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Perform final cleanup and write tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Double-check that all the buffers are empty.</para>
<para>BEGIN DATA COMBINATION</para>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="157" column="14" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="818" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1aa2596b9ec27932edf20115f82aed98ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGambit_1_1Options" kindref="compound">Options</ref></type>
        <definition>Options Gambit::Printers::HDF5Printer::resume_reader_options</definition>
        <argsstring>()</argsstring>
        <name>resume_reader_options</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::resume_reader_options</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1BasePrinter_1a90408a18507c3c27ae5fc774765fcba8">resume_reader_options</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="161" column="17" bodyfile="Printers/src/printers/hdf5printer/hdf5printer.cpp" bodystart="323" bodyend="332"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1acec290abd094f645c538be69aa1928cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gambit::Printers::BaseBasePrinter::_print</definition>
        <argsstring>(T const &amp;, const std::string &amp;label, const int vertexID, const uint, const ulong)</argsstring>
        <name>_print</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::_print</qualifiedname>
        <param>
          <type>T const &amp;</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>vertexID</declname>
        </param>
        <param>
          <type>const</type>
          <declname>uint</declname>
        </param>
        <param>
          <type>const</type>
          <declname>ulong</declname>
        </param>
        <briefdescription>
<para>Print functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="166" column="9" bodyfile="Printers/include/gambit/Printers/basebaseprinter.hpp" bodystart="171" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a27774f0bfc36c207d9df396190bd47a8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gambit::Printers::HDF5Printer::tmp_comb_file</definition>
        <argsstring></argsstring>
        <name>tmp_comb_file</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::tmp_comb_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="324" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a340790bc0fefa32b47644efadc35efa7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gambit::Printers::HDF5Printer::tmpfile</definition>
        <argsstring></argsstring>
        <name>tmpfile</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::tmpfile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="325" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a034222f26b9d804f9a38de1b095f8f30" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gambit::Printers::HDF5Printer::finalfile</definition>
        <argsstring></argsstring>
        <name>finalfile</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::finalfile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="326" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a89aeceb2b5a663824b1ee7f418fe6008" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gambit::Printers::HDF5Printer::group</definition>
        <argsstring></argsstring>
        <name>group</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::group</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="327" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1af5973a00fd1f1286d8c29fcd842a9f12" prot="private" static="no" mutable="no">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::file_id</definition>
        <argsstring></argsstring>
        <name>file_id</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::file_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="330" column="15" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a3001f53eeb08d99243d7f60aea7e7394" prot="private" static="no" mutable="no">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::group_id</definition>
        <argsstring></argsstring>
        <name>group_id</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::group_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="331" column="15" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1aed63e7f6bbf2e19e13516cfda9ab302c" prot="private" static="no" mutable="no">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::RA_group_id</definition>
        <argsstring></argsstring>
        <name>RA_group_id</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::RA_group_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="332" column="15" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ad1204d18022efa17529e8681b4e47728" prot="private" static="no" mutable="no">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::location_id</definition>
        <argsstring></argsstring>
        <name>location_id</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::location_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="336" column="15" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a096c6f27dcb31fa7f730c65da985e12b" prot="private" static="no" mutable="no">
        <type>hid_t</type>
        <definition>hid_t Gambit::Printers::HDF5Printer::RA_location_id</definition>
        <argsstring></argsstring>
        <name>RA_location_id</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::RA_location_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="337" column="15" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a347247124b27a025591f95cc371feff8" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref> *</type>
        <definition>HDF5Printer* Gambit::Printers::HDF5Printer::primary_printer</definition>
        <argsstring></argsstring>
        <name>primary_printer</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::primary_printer</qualifiedname>
        <initializer>= this</initializer>
        <briefdescription>
<para>Pointer to the primary printer object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="341" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1adeb2cdddd86c4ebd6641c11e5239762c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Printer::is_primary_printer</definition>
        <argsstring></argsstring>
        <name>is_primary_printer</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::is_primary_printer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Flag to specify if this is the primary printer or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="344" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a6493b8a0b6fdbb20f3040c1f935c6be0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Printer::disable_combine_routines</definition>
        <argsstring></argsstring>
        <name>disable_combine_routines</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::disable_combine_routines</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Flag to disable combination of hdf5 output (user will have to run the combination routines manually) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="347" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ae6a6e2e6d5339b22b0406c6fc45616c8" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceGambit_1_1Printers_1a19d26e29eabb434b05e434343aadba6b" kindref="member">BaseBufferMap</ref></type>
        <definition>BaseBufferMap Gambit::Printers::HDF5Printer::all_my_buffers</definition>
        <argsstring></argsstring>
        <name>all_my_buffers</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::all_my_buffers</qualifiedname>
        <briefdescription>
<para>Map containing pointers to all VertexBuffers contained in this printer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="351" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1abec5fac5f310d402cb7708811af86558" prot="private" static="no" mutable="no">
        <type><ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref></type>
        <definition>PPIDpair Gambit::Printers::HDF5Printer::lastPointID</definition>
        <argsstring></argsstring>
        <name>lastPointID</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::lastPointID</qualifiedname>
        <briefdescription>
<para>ID of the point that this printer is currently working on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="355" column="18" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1aafcfedca0c47438e7a9a1557dd1ad53d" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Gambit::Printers::HDF5Printer::current_dset_position</definition>
        <argsstring></argsstring>
        <name>current_dset_position</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::current_dset_position</qualifiedname>
        <briefdescription>
<para>Current absolute dataset index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="359" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ae01c10d8c661066aee9983a512b1b2f3" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>, unsigned long &gt;</type>
        <definition>std::map&lt;PPIDpair, unsigned long&gt; Gambit::Printers::HDF5Printer::global_index_lookup</definition>
        <argsstring></argsstring>
        <name>global_index_lookup</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::global_index_lookup</qualifiedname>
        <briefdescription>
<para>Map from pointID,thread pairs to absolute dataset indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="363" column="18" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a8d0e220513ecbec51ef05dbcf6e0b48c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &gt;</type>
        <definition>std::vector&lt;PPIDpair&gt; Gambit::Printers::HDF5Printer::reverse_global_index_lookup</definition>
        <argsstring></argsstring>
        <name>reverse_global_index_lookup</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::reverse_global_index_lookup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="366" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ab5c4ab1382663b7fb76e0dff9d25627c" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Gambit::Printers::HDF5Printer::RA_dset_offset</definition>
        <argsstring></argsstring>
        <name>RA_dset_offset</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::RA_dset_offset</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Offset needed to be added to the reverse lookup in order for it to match the output dataset position correctly </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="370" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a0f668e3ad097cabd7df041d46e9b52cc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gambit::Printers::HDF5Printer::printer_name</definition>
        <argsstring></argsstring>
        <name>printer_name</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::printer_name</qualifiedname>
        <briefdescription>
<para>Label for printer, mostly for more helpful error messages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="373" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a05c7751cb5f3ae2f151537b756c1ebdb" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gambit::Printers::HDF5Printer::myRank</definition>
        <argsstring></argsstring>
        <name>myRank</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::myRank</qualifiedname>
        <briefdescription>
<para>MPI rank and size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="376" column="22" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ac94b124207b287d65854f1190b424ab5" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gambit::Printers::HDF5Printer::mpiSize</definition>
        <argsstring></argsstring>
        <name>mpiSize</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::mpiSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="377" column="22" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a9b8e6615a2cbc92c4dae361af345108d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Printer::synchronised</definition>
        <argsstring></argsstring>
        <name>synchronised</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::synchronised</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag to specify whether all buffers created by this printer should be synchronised and iterated along with the <ref refid="namespaceGambit" kindref="compound">Gambit</ref> scanner iterations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="386" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1af75c4561b7c290d0fa6477827591f99b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Printer::global</definition>
        <argsstring></argsstring>
        <name>global</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::global</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Flag to trigger &quot;global&quot; write mode for printer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="392" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1a79c8b4bcd2e17a56d077d34e416e2b28" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Gambit::Printers::HDF5Printer::sync_pos</definition>
        <argsstring></argsstring>
        <name>sync_pos</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::sync_pos</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Write position to which output buffers should be synchronised. </para>
        </briefdescription>
        <detaileddescription>
<para>Position to start writing new output. Should be zero unless we are in resume mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="399" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1ac6f769bc7328b2ca3c1423f41b80fbbe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &gt;</type>
        <definition>std::vector&lt;PPIDpair&gt; Gambit::Printers::HDF5Printer::previous_points</definition>
        <argsstring></argsstring>
        <name>previous_points</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::previous_points</qualifiedname>
        <briefdescription>
<para>In resume mode: storage for PPIDpairs harvested from previous scan data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="402" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="402" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Printer_1add6f6338f4020db4bf6fe4a7595757a6" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceGambit_1_1Printers_1a19d26e29eabb434b05e434343aadba6b" kindref="member">BaseBufferMap</ref></type>
        <definition>BaseBufferMap Gambit::Printers::HDF5Printer::all_buffers</definition>
        <argsstring></argsstring>
        <name>all_buffers</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::all_buffers</qualifiedname>
        <briefdescription>
<para>Things which other printers need access to. </para>
        </briefdescription>
        <detaileddescription>
<para>Map containing pointers to all VertexBuffers, across all printers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="409" column="23" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Printer_1afada45994b553b0af3fcc0eda1616b9c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Printer::template_print</definition>
        <argsstring>(T const &amp;value, const std::string &amp;label, const int IDcode, const unsigned int mpirank, const unsigned long pointID)</argsstring>
        <name>template_print</name>
        <qualifiedname>Gambit::Printers::HDF5Printer::template_print</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>IDcode</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>mpirank</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>pointID</declname>
        </param>
        <briefdescription>
<para>Helper print functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="292" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="292" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The main printer class for output to HDF5 format. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Gambit::Printers::BaseBasePrinter</label>
        <link refid="classGambit_1_1Printers_1_1BaseBasePrinter"/>
      </node>
      <node id="2">
        <label>Gambit::Printers::BasePrinter</label>
        <link refid="classGambit_1_1Printers_1_1BasePrinter"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Gambit::Printers::HDF5Printer</label>
        <link refid="classGambit_1_1Printers_1_1HDF5Printer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Gambit::Printers::BaseBasePrinter</label>
        <link refid="classGambit_1_1Printers_1_1BaseBasePrinter"/>
      </node>
      <node id="2">
        <label>Gambit::Printers::BasePrinter</label>
        <link refid="classGambit_1_1Printers_1_1BasePrinter"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Gambit::Printers::HDF5Printer</label>
        <link refid="classGambit_1_1Printers_1_1HDF5Printer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="136" column="5" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="137" bodyend="411"/>
    <listofallmembers>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1acec290abd094f645c538be69aa1928cd" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>_print</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1add59236a4848f0d1476fe9470f82edc0" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>add_PPID_to_list</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1afd407cfc481a665be9f397ae5a129ca2" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>addToPrintList</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1add6f6338f4020db4bf6fe4a7595757a6" prot="protected" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>all_buffers</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ae6a6e2e6d5339b22b0406c6fc45616c8" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>all_my_buffers</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1abbb4a0a52992af14c237ab78f5542eff" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>auxilliary_init</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a2d9abf4185ec718116c88fc0bebaff59" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>BaseBasePrinter</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a303cab0f271b974f290434243a65de1f" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>BasePrinter</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a19ec58e978725c2725c0bdbac6c5558d" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>BasePrinter</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a9e2379d473e99604613a74acc230a33a" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>check_for_new_point</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ab55e47c17ad8e714c4dad1fbaa25b05c" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>check_sync</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a5c316295641b9cfad7a11db77101f369" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>clear_previous_points</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a2fc056b8ecec36c64f8fea1920e0c056" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>combine_output</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a0f7fd173be6a077d0b9674d4f70cbfe7" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>combine_output_py</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a9f04b780d15414e1c231f5ba29f7319d" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>common_constructor</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1aafcfedca0c47438e7a9a1557dd1ad53d" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>current_dset_position</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1ab7d07ee8005b51b9bdefa1a05d1f3c64" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>disable</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a6493b8a0b6fdbb20f3040c1f935c6be0" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>disable_combine_routines</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ab79898b49eee9f56a56b6dff7f03cf2f" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>empty_sync_buffers</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1ac855bf2aff788f01f4eb182e722fc3e4" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>enable</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1af5973a00fd1f1286d8c29fcd842a9f12" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>file_id</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a034222f26b9d804f9a38de1b095f8f30" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>finalfile</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1aa829f36d631d7f20e0499d633944f830" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>finalise</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a34e24908e450e15afdb976d5b3269af3" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>find_temporary_files</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1af4e33f85ace326238c5137b75438a850" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>flush</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ab476edaf5c2bdf2e995e67fe2f857037" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_global_index</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a24ca1d25979638239173db79a5d772da" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_highest_PPID_from_HDF5</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a62f0a6c84c7ff6fd5e37309ec3bd9572" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_location</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a534f85b53056d6519373acb2e94ea0c7" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_mybuffermanager</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ad7fb360ce982caad71268207df365019" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_N_RApointIDs</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a3c21c16334ad0912a2443439bdbbf790" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_primary_printer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a51a58115c23ccacba79f600c453c4b21" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_printer_name</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a98dc6998a27123d8ee29f3cd16d6d3fe" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_printUnitcube</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a0cf8744f47e356d624909533d5d54f3a" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_RA_location</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1ada3792f8bf867bae00819ed58e98a244" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_resume</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ad85baf4e95d49dc93a614a3cf65c0cce" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>get_sync_pos</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1ac18745eebd15f76851a7573601359312" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>getPrintList</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a8f7e69489c1a83b4208c3ca0237bf823" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>getRank</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1af75c4561b7c290d0fa6477827591f99b" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>global</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ae01c10d8c661066aee9983a512b1b2f3" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>global_index_lookup</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a89aeceb2b5a663824b1ee7f418fe6008" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>group</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a3001f53eeb08d99243d7f60aea7e7394" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>group_id</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1aafbe81f29eeabcc13ee2addbe8d0af45" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_double</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a646d9941d00245be41bc76313b5ea1d9" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_float</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a0f3b5bc394a6b3ce08a9c6785967f53d" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_int</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1aa45d4e66ba8454b32d25a25d93bf3718" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_long</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a28cfe513687e93eaa49b2d759570a7b5" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_longlong</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a8e3fb1065803a58839cb92e451f9325d" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_uint</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ae8004853768ccd018101853dba425a94" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_ulong</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a11315221e6ac6c9dfc148462aaa44ec9" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>hdf5_localbufferman_ulonglong</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a66ef433b191ed0a0eb092cce9c09fc9a" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>HDF5Printer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a9320f905d2f28ed02efb0c62a113a537" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>increment_sync_pos</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a5fc68fd41e63749711758ede8b25ce21" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>initialise</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a8b7673bb2dfa1a9040d98760c998ce7b" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>insert_buffer</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a85233c1edaf646bcdf14a18d7bd90179" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>is_auxilliary_printer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1adeb2cdddd86c4ebd6641c11e5239762c" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>is_primary_printer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1adda2ff058c51f04b80988377f582708a" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>is_stream_managed</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1abec5fac5f310d402cb7708811af86558" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>lastPointID</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ad1204d18022efa17529e8681b4e47728" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>location_id</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ac94b124207b287d65854f1190b424ab5" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>mpiSize</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a05c7751cb5f3ae2f151537b756c1ebdb" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>myRank</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a5e064cd3b03291c73cdc10c426abaec3" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>prepare_and_combine_tmp_files</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ac6f769bc7328b2ca3c1423f41b80fbbe" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>previous_points</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a347247124b27a025591f95cc371feff8" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>primary_printer</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a4ba4d6be89e5d91a2cc1a14e75acb6ce" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>print</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a1dfc2af5fc27c500b751bb7b57cbe0d9" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>print</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1af405d35cb40f9d88543b1376f18d7643" prot="protected" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>printer_cooldown</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a38cea919f04f4c6b544b4a71aeca79db" prot="protected" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>printer_enabled</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a0f668e3ad097cabd7df041d46e9b52cc" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>printer_name</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1ab5c4ab1382663b7fb76e0dff9d25627c" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>RA_dset_offset</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1aed63e7f6bbf2e19e13516cfda9ab302c" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>RA_group_id</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a096c6f27dcb31fa7f730c65da985e12b" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>RA_location_id</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a8ff9e522536209f310a435eb0b8bcf0c" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>reset</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a51690cc5510d3d6f876dd9e7ae5bc09d" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>reset_PPID_lists</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1aa2596b9ec27932edf20115f82aed98ab" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>resume_reader_options</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a8d0e220513ecbec51ef05dbcf6e0b48c" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>reverse_global_index_lookup</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a91a7d9b08560e339cdf392bd18fee4e4" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>seen_PPID_before</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1afee2494a6631283d92afbb05df5f6eb8" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>set_as_aux</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1ac4f9bfbde0b4d732e84d8048d8218e38" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>set_printUnitcube</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a960832ce5b23a9857bf7f9a0422ca5e5" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>set_resume</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a4f76c50756bb1c2587475c5dd0e9fa4b" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>setPrintList</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a77a5a48ab7dcaeb974031792ae9bc7bc" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>setRank</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a79c8b4bcd2e17a56d077d34e416e2b28" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>sync_pos</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a15a24d1fcfdb8fb920cc80f2550c7f47" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>synchronise_buffers</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a9b8e6615a2cbc92c4dae361af345108d" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>synchronised</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1afada45994b553b0af3fcc0eda1616b9c" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>template_print</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a27774f0bfc36c207d9df396190bd47a8" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>tmp_comb_file</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1a340790bc0fefa32b47644efadc35efa7" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>tmpfile</name></member>
      <member refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a83d0212117486681e069d53ed1368405" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>~BaseBasePrinter</name></member>
      <member refid="classGambit_1_1Printers_1_1BasePrinter_1a4d7f0232eec2f4a884e22b82a8111f51" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>~BasePrinter</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Printer_1adc6a983b9217ed5a5be723a4d377fe47" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Printer</scope><name>~HDF5Printer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
