<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Priors_1_1MultiPriors" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Priors::MultiPriors</compoundname>
    <basecompoundref refid="classGambit_1_1Priors_1_1BasePrior" prot="public" virt="non-virtual">Gambit::Priors::BasePrior</basecompoundref>
    <includes refid="fixed__same__as_8hpp" local="no">fixed_same_as.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1MultiPriors_1af8ee9a053da6e4828e3ea0ef2dcbb851" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gambit::Priors::MultiPriors::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>Gambit::Priors::MultiPriors::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="113" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1MultiPriors_1a871bbb8bd6d50b9d37846f56f1986edd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gambit::Priors::MultiPriors::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>Gambit::Priors::MultiPriors::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="114" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1MultiPriors_1aa1a0f831a09167f7ee1a34cc76ee89a7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gambit::Priors::MultiPriors::shift</definition>
        <argsstring></argsstring>
        <name>shift</name>
        <qualifiedname>Gambit::Priors::MultiPriors::shift</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="114" column="31" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Priors_1_1MultiPriors_1af3c4dc7031ead07c75dea258ffddfc0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::MultiPriors::MultiPriors</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;param, const Options &amp;options)</argsstring>
        <name>MultiPriors</name>
        <qualifiedname>Gambit::Priors::MultiPriors::MultiPriors</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const <ref refid="classGambit_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="117" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="117" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1MultiPriors_1a8e0f6d813336a2794bc434b745086e94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::MultiPriors::MultiPriors</definition>
        <argsstring>(std::string name_in, std::unordered_map&lt; std::string, std::pair&lt; double, double &gt; &gt; &amp;map_in)</argsstring>
        <name>MultiPriors</name>
        <qualifiedname>Gambit::Priors::MultiPriors::MultiPriors</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name_in</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, std::pair&lt; double, double &gt; &gt; &amp;</type>
          <declname>map_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="141" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="141" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1MultiPriors_1af5a3de26d78d61e1f873da09b0ba5090" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; Gambit::Priors::MultiPriors::getShownParameters</definition>
        <argsstring>() const override</argsstring>
        <name>getShownParameters</name>
        <qualifiedname>Gambit::Priors::MultiPriors::getShownParameters</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1a6e59882ac88444b03d95ecd3607ec986">getShownParameters</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="167" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1MultiPriors_1ac61f7b43b139175a56e6e26c76ff8c2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Priors::MultiPriors::transform</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;, std::unordered_map&lt; std::string, double &gt; &amp;outputMap) const override</argsstring>
        <name>transform</name>
        <qualifiedname>Gambit::Priors::MultiPriors::transform</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1adaf214a4f7aa4e9c4c3fa7daebc32903">transform</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Transform from unit hypercube to parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="169" column="18" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="169" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1MultiPriors_1a29b3ab7e38c3e5130b7cafbe1f56b837" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; Gambit::Priors::MultiPriors::inverse_transform</definition>
        <argsstring>(const std::unordered_map&lt; std::string, double &gt; &amp;physical) const override</argsstring>
        <name>inverse_transform</name>
        <qualifiedname>Gambit::Priors::MultiPriors::inverse_transform</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1a5ae0c15c2fb6c0ad555ff3b230b26352">inverse_transform</reimplements>
        <param>
          <type>const std::unordered_map&lt; std::string, double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Transform from parameter back to unit hypercube. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="180" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="180" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A parameter that is fixed to a different parameter. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Gambit::Priors::BasePrior</label>
        <link refid="classGambit_1_1Priors_1_1BasePrior"/>
      </node>
      <node id="1">
        <label>Gambit::Priors::MultiPriors</label>
        <link refid="classGambit_1_1Priors_1_1MultiPriors"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Gambit::Priors::BasePrior</label>
        <link refid="classGambit_1_1Priors_1_1BasePrior"/>
      </node>
      <node id="1">
        <label>Gambit::Priors::MultiPriors</label>
        <link refid="classGambit_1_1Priors_1_1MultiPriors"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="110" column="9" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="111" bodyend="198"/>
    <listofallmembers>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a839ff7a9704898c967f03add67950b05" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aefa66cd74f99ecf7d29dcb9c608ed202" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a55ba5474027bb858c3561600aeb39dbb" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a421fbf213a5d7b1734ff5190cc27ff6a" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aaf6a0098f19105d7e11b5e7a8b74a873" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>getParameters</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1af5a3de26d78d61e1f873da09b0ba5090" prot="public" virt="virtual"><scope>Gambit::Priors::MultiPriors</scope><name>getShownParameters</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1a29b3ab7e38c3e5130b7cafbe1f56b837" prot="public" virt="virtual"><scope>Gambit::Priors::MultiPriors</scope><name>inverse_transform</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1af3c4dc7031ead07c75dea258ffddfc0f" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>MultiPriors</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1a8e0f6d813336a2794bc434b745086e94" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>MultiPriors</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1af8ee9a053da6e4828e3ea0ef2dcbb851" prot="private" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>name</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a6b502e586d6c964a9dfe2935b630a2d3" prot="public" virt="virtual"><scope>Gambit::Priors::MultiPriors</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab54eef4c7b0188cc43c60e10f77fac3d" prot="protected" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>param_names</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1a871bbb8bd6d50b9d37846f56f1986edd" prot="private" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>scale</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab79d2df1f9c6350ed69a76e5d123de39" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>setSize</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1aa1a0f831a09167f7ee1a34cc76ee89a7" prot="private" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>shift</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a9c476b07daa0abd7259573e5825c3d48" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>size</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a58e160ebd0cc101bf53e65cf4e6eb94a" prot="public" virt="non-virtual"><scope>Gambit::Priors::MultiPriors</scope><name>sizeRef</name></member>
      <member refid="classGambit_1_1Priors_1_1MultiPriors_1ac61f7b43b139175a56e6e26c76ff8c2f" prot="public" virt="virtual"><scope>Gambit::Priors::MultiPriors</scope><name>transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1af23c343daddeab5deb668909eff4d918" prot="public" virt="virtual"><scope>Gambit::Priors::MultiPriors</scope><name>~BasePrior</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
