<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Elements_2include_2gambit_2Elements_2ini__functions_8hpp" kind="file" language="C++">
    <compoundname>Elements/include/gambit/Elements/ini_functions.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="util__types_8hpp" local="yes">gambit/Utils/util_types.hpp</includes>
    <includedby refid="Elements_2src_2ini__functions_8cpp" local="yes">ini_functions.cpp</includedby>
    <includedby refid="model__macros_8hpp" local="yes">model_macros.hpp</includedby>
    <includedby refid="module__macros__incore__defs_8hpp" local="yes">module_macros_incore_defs.hpp</includedby>
    <includedby refid="mssm__slhahelp_8cpp" local="yes">mssm_slhahelp.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>ini_functions.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="13">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="30">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="20">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="11">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>array</label>
      </node>
      <node id="21">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="16">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="17">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="26">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="15">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="25">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="23">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="24">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="14">
        <label>boost/version.hpp</label>
      </node>
      <node id="39">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>complex</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="44">
        <label>deque</label>
      </node>
      <node id="32">
        <label>exception</label>
      </node>
      <node id="43">
        <label>forward_list</label>
      </node>
      <node id="37">
        <label>fstream</label>
      </node>
      <node id="36">
        <label>iostream</label>
      </node>
      <node id="42">
        <label>list</label>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="7">
        <label>omp.h</label>
      </node>
      <node id="31">
        <label>set</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="38">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
      <node id="40">
        <label>unordered_map</label>
      </node>
      <node id="41">
        <label>unordered_set</label>
      </node>
      <node id="33">
        <label>utility</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="36">
        <label>backend_macros.hpp</label>
        <link refid="backend__macros_8hpp"/>
      </node>
      <node id="39">
        <label>DarkBit_standalone_MSSM.cpp</label>
        <link refid="DarkBit__standalone__MSSM_8cpp"/>
      </node>
      <node id="40">
        <label>DarkBit_standalone_ScalarSingletDM_Z2.cpp</label>
        <link refid="DarkBit__standalone__ScalarSingletDM__Z2_8cpp"/>
      </node>
      <node id="41">
        <label>DarkBit_standalone_WIMP.cpp</label>
        <link refid="DarkBit__standalone__WIMP_8cpp"/>
      </node>
      <node id="38">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="1">
        <label>ini_functions.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>module_macros_incore.hpp</label>
        <link refid="module__macros__incore_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>module_macros_incore_defs.hpp</label>
        <link refid="module__macros__incore__defs_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>standalone_module.hpp</label>
        <link refid="standalone__module_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ini_functions.cpp</label>
        <link refid="Elements_2src_2ini__functions_8cpp"/>
      </node>
      <node id="43">
        <label>mssm_slhahelp.cpp</label>
        <link refid="mssm__slhahelp_8cpp"/>
      </node>
      <node id="42">
        <label>ExampleBit_A_standalone_example.cpp</label>
        <link refid="ExampleBit__A__standalone__example_8cpp"/>
      </node>
      <node id="3">
        <label>model_macros.hpp</label>
        <link refid="model__macros_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Axions.cpp</label>
        <link refid="Models_2src_2models_2Axions_8cpp"/>
      </node>
      <node id="5">
        <label>CMSSM.cpp</label>
        <link refid="CMSSM_8cpp"/>
      </node>
      <node id="6">
        <label>MSSM10atQ.cpp</label>
        <link refid="MSSM10atQ_8cpp"/>
      </node>
      <node id="7">
        <label>MSSM10atQ_mA.cpp</label>
        <link refid="MSSM10atQ__mA_8cpp"/>
      </node>
      <node id="8">
        <label>MSSM10batQ.cpp</label>
        <link refid="MSSM10batQ_8cpp"/>
      </node>
      <node id="9">
        <label>MSSM10batQ_mA.cpp</label>
        <link refid="MSSM10batQ__mA_8cpp"/>
      </node>
      <node id="10">
        <label>MSSM10catQ.cpp</label>
        <link refid="MSSM10catQ_8cpp"/>
      </node>
      <node id="11">
        <label>MSSM10catQ_mA.cpp</label>
        <link refid="MSSM10catQ__mA_8cpp"/>
      </node>
      <node id="12">
        <label>MSSM11atQ.cpp</label>
        <link refid="MSSM11atQ_8cpp"/>
      </node>
      <node id="13">
        <label>MSSM11atQ_mA.cpp</label>
        <link refid="MSSM11atQ__mA_8cpp"/>
      </node>
      <node id="14">
        <label>MSSM15atQ.cpp</label>
        <link refid="MSSM15atQ_8cpp"/>
      </node>
      <node id="15">
        <label>MSSM15atQ_mA.cpp</label>
        <link refid="MSSM15atQ__mA_8cpp"/>
      </node>
      <node id="16">
        <label>MSSM16atQ.cpp</label>
        <link refid="MSSM16atQ_8cpp"/>
      </node>
      <node id="17">
        <label>MSSM16atQ_mA.cpp</label>
        <link refid="MSSM16atQ__mA_8cpp"/>
      </node>
      <node id="18">
        <label>MSSM19atQ.cpp</label>
        <link refid="MSSM19atQ_8cpp"/>
      </node>
      <node id="19">
        <label>MSSM19atQ_mA.cpp</label>
        <link refid="MSSM19atQ__mA_8cpp"/>
      </node>
      <node id="20">
        <label>MSSM20atX.cpp</label>
        <link refid="MSSM20atX_8cpp"/>
      </node>
      <node id="21">
        <label>MSSM24atQ.cpp</label>
        <link refid="MSSM24atQ_8cpp"/>
      </node>
      <node id="22">
        <label>MSSM24atQ_mA.cpp</label>
        <link refid="MSSM24atQ__mA_8cpp"/>
      </node>
      <node id="23">
        <label>MSSM7atQ.cpp</label>
        <link refid="MSSM7atQ_8cpp"/>
      </node>
      <node id="24">
        <label>MSSM7atQ_mA.cpp</label>
        <link refid="MSSM7atQ__mA_8cpp"/>
      </node>
      <node id="25">
        <label>MSSM9atQ.cpp</label>
        <link refid="MSSM9atQ_8cpp"/>
      </node>
      <node id="26">
        <label>MSSM9atQ_mA.cpp</label>
        <link refid="MSSM9atQ__mA_8cpp"/>
      </node>
      <node id="27">
        <label>MSSM9batQ.cpp</label>
        <link refid="MSSM9batQ_8cpp"/>
      </node>
      <node id="28">
        <label>MSSM9batQ_mA.cpp</label>
        <link refid="MSSM9batQ__mA_8cpp"/>
      </node>
      <node id="29">
        <label>NUHM1.cpp</label>
        <link refid="NUHM1_8cpp"/>
      </node>
      <node id="30">
        <label>NUHM2.cpp</label>
        <link refid="NUHM2_8cpp"/>
      </node>
      <node id="31">
        <label>RightHandedNeutrinos_diff.cpp</label>
        <link refid="RightHandedNeutrinos__diff_8cpp"/>
      </node>
      <node id="32">
        <label>StandardModel_mNudiff.cpp</label>
        <link refid="StandardModel__mNudiff_8cpp"/>
      </node>
      <node id="33">
        <label>mSUGRA.cpp</label>
        <link refid="mSUGRA_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1slhahelp">Gambit::slhahelp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions for triggering initialisation code.</para>
<para><hruler/>
</para>
<sect1 id="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1autotoc_md27">
<title>Authors</title>
<para>(add name and date if you modify)</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Feb</para>
</simplesect>
<simplesect kind="author"><para>Peter Athron (<ulink url="mailto:peter.athron@coepp.org.au">peter.athron@coepp.org.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:t.e.gonzalo@fys.uio.no">t.e.gonzalo@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Sep</para>
</simplesect>
<hruler/>
 </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Functions<sp/>for<sp/>triggering<sp/>initialisation<sp/>code.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>=======</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Feb</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Peter<sp/>Athron</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(peter.athron@coepp.org.au)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\date<sp/>2015</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t.e.gonzalo@fys.uio.no)</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Sep</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ini_functions_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ini_functions_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__types_8hpp" kindref="compound">gambit/Utils/util_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>///<sp/>Forward<sp/>declarations</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">module_functor_common;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">model_functor;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Options;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>///<sp/>Helper<sp/>function<sp/>for<sp/>adding<sp/>a<sp/>type<sp/>equivalency<sp/>at<sp/>initialisation</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a582df32493393e5c5a14f7d64131cbbf" kindref="member">add_equivrelation</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>///<sp/>Helper<sp/>function<sp/>for<sp/>passing<sp/>default<sp/>backend<sp/>information<sp/>at<sp/>initialisation</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2b32cf7ddc654f2d4a8cfe250ccb74f6" kindref="member">pass_default_to_backendinfo</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>///<sp/>Runtime<sp/>addition<sp/>of<sp/>model<sp/>to<sp/>GAMBIT<sp/>model<sp/>database</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2b4e1ea4c0602d28d8d87a1ef51d00bd" kindref="member">add_model</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>///<sp/>Add<sp/>a<sp/>new<sp/>parameter<sp/>to<sp/>a<sp/>primary<sp/>model<sp/>functor</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aad155d8146087ec0f7b176b1b961cf0d" kindref="member">add_parameter</ref>(model_functor&amp;,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>///<sp/>Set<sp/>the<sp/>model<sp/>name<sp/>in<sp/>a<sp/>primary<sp/>model<sp/>functor</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ad081b37eac94f086abb8e2fa818f1394" kindref="member">set_model_name</ref>(model_functor&amp;,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>///<sp/>Tell<sp/>a<sp/>model<sp/>functor<sp/>to<sp/>take<sp/>its<sp/>parameter<sp/>definition<sp/>from<sp/>another<sp/>model<sp/>functor.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a7ad47ef01ccf52dec72fcef1cc03ef34" kindref="member">copy_parameters</ref>(model_functor&amp;,<sp/>model_functor&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model<sp/>functor.</highlight></codeline>
<codeline lineno="61" refid="namespaceGambit_1a8e25c9781fd44fc6fd5c41d2f9b381fd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a8e25c9781fd44fc6fd5c41d2f9b381fd" kindref="member">register_model_functor</ref>(std::map&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(*)()&gt;,<sp/>std::map&lt;str,<sp/>str&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(*)(),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>///<sp/>Create<sp/>a<sp/>log<sp/>tag<sp/>for<sp/>a<sp/>new<sp/>module.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a1191fc24dcb64db06bb338f872c86f69" kindref="member">register_module_with_log</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>function<sp/>with<sp/>a<sp/>module.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a13f769ff48058ee7907ceef8362e1cfb" kindref="member">register_function</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;bool&gt;</ref>*,<sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;Options&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr</ref>&lt;std::set&lt;sspair&gt;&gt;&amp;,<sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;Options&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>the<sp/>fact<sp/>that<sp/>a<sp/>module<sp/>function<sp/>needs<sp/>to<sp/>run<sp/>nested</highlight></codeline>
<codeline lineno="71"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ac0af463f99cf94f7031edf01c00567f4" kindref="member">register_function_nesting</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/><ref refid="classGambit_1_1omp__safe__ptr" kindref="compound">omp_safe_ptr&lt;long long&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>that<sp/>a<sp/>module<sp/>function<sp/>is<sp/>compatible<sp/>with<sp/>a<sp/>single<sp/>model</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1afe79d6f5ae97aafc17cdeb7c7123ba10" kindref="member">register_model_singly</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model<sp/>group<sp/>with<sp/>a<sp/>functor</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a7b28bc19fdc1b365e38057b551e31ba1" kindref="member">register_model_group</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>backend<sp/>requirement<sp/>for<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1adb92c5bae3f37d5ef41330000b0aac89" kindref="member">register_backend_requirement</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>combination<sp/>of<sp/>models<sp/>as<sp/>allowed<sp/>with<sp/>a<sp/>functor</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ab7746d989ab7116134034cf4734b15d1" kindref="member">register_model_combination</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a68c91a85d23d8614a46f658e4f506c10" kindref="member">register_dependency</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>conditional<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ad10912f63f7aaf426d82da8f399b9482" kindref="member">register_conditional_dependency</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model<sp/>parameters<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a4d7f20c689e7cc9e23761bcb2c582199" kindref="member">register_model_parameter_dependency</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*resolver)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model-conditional<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="98"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a8ad07692725311cd166ad5ca485e0202" kindref="member">register_model_conditional_dependency</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>backend-conditional<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="102"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a74484fe5684440c139a6cecf165dd23c" kindref="member">register_backend_conditional_dependency</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/>///<sp/>Apply<sp/>a<sp/>backend-matching<sp/>rule</highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ac7e076479f2c71cd91b638340449fcca" kindref="member">apply_backend_matching_rule</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>///<sp/>Apply<sp/>a<sp/>backend<sp/>option<sp/>rule</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a17c3ce0893730ccc8c28454b03cc458f" kindref="member">apply_backend_option_rule</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">slhahelp</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Typedefs<sp/>for<sp/>pairs<sp/>that<sp/>we<sp/>will<sp/>use<sp/>in<sp/>maps</highlight></codeline>
<codeline lineno="116" refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a815827acea00e9417a2c1d28d3e8de94" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int,str&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a815827acea00e9417a2c1d28d3e8de94" kindref="member">p_int_string</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/>pair_ints;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;str,pair_ints&gt;<sp/>pair_string_ints;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;str,str&gt;<sp/>pair_strings;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>gauge<sp/>eigenstate<sp/>strings<sp/>to<sp/>string,<sp/>index<sp/>pairs</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>p_int_string&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a907d4a521e709ad333b40354e0337de4" kindref="member">init_gauge_label_to_index_type</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>mass<sp/>eigenstate<sp/>strings<sp/>to<sp/>string,<sp/>index<sp/>pairs</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>p_int_string&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a6f201d86d2f579a3756c0251dfce422d" kindref="member">init_mass_label_to_index_type</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>to<sp/>extract<sp/>info<sp/>from<sp/>family<sp/>state</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>pair_string_ints&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a71a7b97d68dfcc495002f75abade80d0" kindref="member">init_familystate_label</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>///map<sp/>to<sp/>obtain<sp/>left_right<sp/>gauge_pairs<sp/>from<sp/>state<sp/>info</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>helps<sp/>us<sp/>reuse<sp/>other<sp/>routiones<sp/>with<sp/>string<sp/>arguments</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;p_int_string,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1af39f4cde76f9b808205a113350168fe2" kindref="member">init_type_family_to_gauge_states</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>maps<sp/>directly<sp/>from<sp/>family<sp/>string<sp/>to<sp/>left_right<sp/>gauge_pairs</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>helps<sp/>us<sp/>reuse<sp/>other<sp/>routines<sp/>that<sp/>take<sp/>string<sp/>arguments</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a2a92030a1d0d2096b79b2a578b03c77f" kindref="member">init_family_state_to_gauge_state</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/>///maps<sp/>directly<sp/>from<sp/>gauge_es<sp/>string<sp/>to<sp/>familystates</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>helps<sp/>us<sp/>reuse<sp/>other<sp/>routines<sp/>that<sp/>take<sp/>string<sp/>arguments</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a97ee6ef1971e290a481a15bfe3c67834" kindref="member">init_gauge_es_to_family_states</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>string<sp/>representing<sp/>type<sp/>(ie<sp/>up-squarks,<sp/>down-squarks<sp/>or</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>charged<sp/>sleptons)<sp/>to<sp/>appropriate<sp/>set<sp/>of<sp/>mass<sp/>eigenstates</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1aeba1b829b60d4d1bef9ea801b7ec92c7" kindref="member">init_type_to_vec_of_mass_es</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>string<sp/>representing<sp/>type<sp/>(ie<sp/>up-squarks,<sp/>down-squarks<sp/>or</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>charged<sp/>sleptons)<sp/>to<sp/>appropriate<sp/>set<sp/>of<sp/>gauge<sp/>eigenstates</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a236436a2ec54995573da0cff78ee2f0e" kindref="member">init_type_to_vec_of_gauge_es</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#defined<sp/>__ini_functions_hpp__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Elements/include/gambit/Elements/ini_functions.hpp"/>
  </compounddef>
</doxygen>
