<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="QedQcdWrapper_8hpp" kind="file" language="C++">
    <compoundname>QedQcdWrapper.hpp</compoundname>
    <includes refid="sminputs_8hpp" local="yes">gambit/Elements/sminputs.hpp</includes>
    <includes refid="spec_8hpp" local="yes">gambit/Elements/spec.hpp</includes>
    <includes refid="RegisteredSpectra_8hpp" local="yes">gambit/Models/SpectrumContents/RegisteredSpectra.hpp</includes>
    <includes local="yes">lowe.h</includes>
    <includedby refid="QedQcdWrapper_8cpp" local="yes">QedQcdWrapper.cpp</includedby>
    <includedby refid="SpecBit__DMEFT_8cpp" local="yes">SpecBit_DMEFT.cpp</includedby>
    <includedby refid="SpecBit__DiracSingletDM_8cpp" local="yes">SpecBit_DiracSingletDM.cpp</includedby>
    <includedby refid="SpecBit__MDM_8cpp" local="yes">SpecBit_MDM.cpp</includedby>
    <includedby refid="SpecBit__MSSM_8cpp" local="yes">SpecBit_MSSM.cpp</includedby>
    <includedby refid="SpecBit__MajoranaSingletDM_8cpp" local="yes">SpecBit_MajoranaSingletDM.cpp</includedby>
    <includedby refid="SpecBit__SM_8cpp" local="yes">SpecBit_SM.cpp</includedby>
    <includedby refid="SpecBit__ScalarSingletDM_8cpp" local="yes">SpecBit_ScalarSingletDM.cpp</includedby>
    <includedby refid="SpecBit__VS_8cpp" local="yes">SpecBit_VS.cpp</includedby>
    <includedby refid="SpecBit__VectorSingletDM_8cpp" local="yes">SpecBit_VectorSingletDM.cpp</includedby>
    <incdepgraph>
      <node id="63">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gambit/Elements/spec.hpp</label>
        <link refid="spec_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>gambit/Elements/spec_fptrfinder.hpp</label>
        <link refid="spec__fptrfinder_8hpp"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gambit/Elements/spec_head.hpp</label>
        <link refid="spec__head_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="68">
        <label>gambit/Models/SpectrumContents/RegisteredSpectra.hpp</label>
        <link refid="RegisteredSpectra_8hpp"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>QedQcdWrapper.hpp</label>
        <link refid="QedQcdWrapper_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="25">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="14">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="3">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="57">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="47">
        <label>array</label>
      </node>
      <node id="61">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="60">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="16">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="10">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="22">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="11">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="9">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="20">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="23">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="24">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="18">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="19">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="49">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="8">
        <label>boost/version.hpp</label>
      </node>
      <node id="41">
        <label>cassert</label>
      </node>
      <node id="56">
        <label>cfloat</label>
      </node>
      <node id="58">
        <label>chrono</label>
      </node>
      <node id="51">
        <label>cmath</label>
      </node>
      <node id="36">
        <label>complex</label>
      </node>
      <node id="35">
        <label>cstring</label>
      </node>
      <node id="46">
        <label>deque</label>
      </node>
      <node id="28">
        <label>exception</label>
      </node>
      <node id="45">
        <label>forward_list</label>
      </node>
      <node id="39">
        <label>fstream</label>
      </node>
      <node id="59">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="38">
        <label>iostream</label>
      </node>
      <node id="44">
        <label>list</label>
      </node>
      <node id="69">
        <label>lowe.h</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="62">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="34">
        <label>omp.h</label>
      </node>
      <node id="27">
        <label>set</label>
      </node>
      <node id="33">
        <label>sstream</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="40">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>unistd.h</label>
      </node>
      <node id="42">
        <label>unordered_map</label>
      </node>
      <node id="43">
        <label>unordered_set</label>
      </node>
      <node id="30">
        <label>utility</label>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>QedQcdWrapper.hpp</label>
        <link refid="QedQcdWrapper_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QedQcdWrapper.cpp</label>
        <link refid="QedQcdWrapper_8cpp"/>
      </node>
      <node id="3">
        <label>SpecBit_DMEFT.cpp</label>
        <link refid="SpecBit__DMEFT_8cpp"/>
      </node>
      <node id="4">
        <label>SpecBit_DiracSingletDM.cpp</label>
        <link refid="SpecBit__DiracSingletDM_8cpp"/>
      </node>
      <node id="5">
        <label>SpecBit_MDM.cpp</label>
        <link refid="SpecBit__MDM_8cpp"/>
      </node>
      <node id="6">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="7">
        <label>SpecBit_MajoranaSingletDM.cpp</label>
        <link refid="SpecBit__MajoranaSingletDM_8cpp"/>
      </node>
      <node id="8">
        <label>SpecBit_SM.cpp</label>
        <link refid="SpecBit__SM_8cpp"/>
      </node>
      <node id="9">
        <label>SpecBit_ScalarSingletDM.cpp</label>
        <link refid="SpecBit__ScalarSingletDM_8cpp"/>
      </node>
      <node id="10">
        <label>SpecBit_VS.cpp</label>
        <link refid="SpecBit__VS_8cpp"/>
      </node>
      <node id="11">
        <label>SpecBit_VectorSingletDM.cpp</label>
        <link refid="SpecBit__VectorSingletDM_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structGambit_1_1SpecTraits_3_01SpecBit_1_1QedQcdWrapper_01_4" prot="public">Gambit::SpecTraits&lt; SpecBit::QedQcdWrapper &gt;</innerclass>
    <innerclass refid="classGambit_1_1SpecBit_1_1QedQcdWrapper" prot="public">Gambit::SpecBit::QedQcdWrapper</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1SpecBit">Gambit::SpecBit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is used to wrap the QedQcd object used by SoftSUSY and FlexibleSUSY in a <ref refid="namespaceGambit" kindref="compound">Gambit</ref> SubSpectrum object. This is to enable access to the parameters of the SM defined as a low-energy effective theory (as opposed to correspending information defined in a UV model). Parameters defined this way are often used as input to a physics calculator.</para>
<para>This is one of the simplest wrappers possible, so it is useful as a guide for designing other SubSpectrum wrappers. To assist this, code is documented with the following markings to distinguish pieces that are essential for all wrappers from those which are specific to this wrapper: /<zwj/>***<zwj/>/ - Required by all wrappers. /*O*<zwj/>/ - Optional (e.g. unused maps fillers can be left undeclared) /*P*<zwj/>/ - Required if map fillers are protected, which is sensible.</para>
<para><hruler/>
</para>
<para>Authors:</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Mar</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>to<sp/>wrap<sp/>the<sp/>QedQcd<sp/>object<sp/>used<sp/>by<sp/>SoftSUSY</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>and<sp/>FlexibleSUSY<sp/>in<sp/>a<sp/>Gambit<sp/>SubSpectrum<sp/>object.<sp/>This<sp/>is<sp/>to<sp/>enable</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>access<sp/>to<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>SM<sp/>defined<sp/>as<sp/>a<sp/>low-energy<sp/>effective<sp/>theory</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>(as<sp/>opposed<sp/>to<sp/>correspending<sp/>information<sp/>defined<sp/>in<sp/>a<sp/>UV<sp/>model).</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Parameters<sp/>defined<sp/>this<sp/>way<sp/>are<sp/>often<sp/>used<sp/>as<sp/>input<sp/>to<sp/>a<sp/>physics<sp/>calculator.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>This<sp/>is<sp/>one<sp/>of<sp/>the<sp/>simplest<sp/>wrappers<sp/>possible,<sp/>so<sp/>it<sp/>is<sp/>useful<sp/>as<sp/>a<sp/>guide</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>for<sp/>designing<sp/>other<sp/>SubSpectrum<sp/>wrappers.<sp/>To<sp/>assist<sp/>this,<sp/>code<sp/>is<sp/>documented</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>with<sp/>the<sp/>following<sp/>markings<sp/>to<sp/>distinguish<sp/>pieces<sp/>that<sp/>are<sp/>essential<sp/>for</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>all<sp/>wrappers<sp/>from<sp/>those<sp/>which<sp/>are<sp/>specific<sp/>to<sp/>this<sp/>wrapper:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>/***/<sp/>-<sp/>Required<sp/>by<sp/>all<sp/>wrappers.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>/*O*/<sp/>-<sp/>Optional<sp/>(e.g.<sp/>unused<sp/>maps<sp/>fillers<sp/>can<sp/>be<sp/>left<sp/>undeclared)</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>/*P*/<sp/>-<sp/>Required<sp/>if<sp/>map<sp/>fillers<sp/>are<sp/>protected,<sp/>which<sp/>is<sp/>sensible.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/>Authors:</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>&lt;!--<sp/>add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify<sp/>--&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Mar</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__QedQcdWrapper_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__QedQcdWrapper_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sminputs_8hpp" kindref="compound">gambit/Elements/sminputs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spec_8hpp" kindref="compound">gambit/Elements/spec.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="RegisteredSpectra_8hpp" kindref="compound">gambit/Models/SpectrumContents/RegisteredSpectra.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>horrible<sp/>hack<sp/>to<sp/>suppress<sp/>the<sp/>millions<sp/>of<sp/>warnings<sp/>that<sp/>get<sp/>generated<sp/>by<sp/>flexiblesusy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>basically<sp/>kills<sp/>all<sp/>warnings<sp/>from<sp/>the<sp/>entire<sp/>remainder<sp/>of<sp/>this<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>system_header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lowe.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///TODO:<sp/>wrap<sp/>using<sp/>BOSS<sp/>at<sp/>some<sp/>point,<sp/>i.e.<sp/>get<sp/>this<sp/>from<sp/>FlexibleSUSY<sp/>or<sp/>SoftSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SpecBit</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QedQcdWrapper;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>///<sp/>Specialisation<sp/>of<sp/>traits<sp/>class<sp/>needed<sp/>to<sp/>inform<sp/>base<sp/>spectrum<sp/>class<sp/>of<sp/>the<sp/>Model<sp/>and<sp/>Input<sp/>types</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="51" refid="structGambit_1_1SpecTraits_3_01SpecBit_1_1QedQcdWrapper_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1SpecTraits" kindref="compound">SpecTraits</ref>&lt;SpecBit::QedQcdWrapper&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>name()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;QedQcdWrapper&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SpectrumContents_1_1SM" kindref="compound">SpectrumContents::SM</ref><sp/><ref refid="structGambit_1_1SpectrumContents_1_1SM" kindref="compound">Contents</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>softsusy::QedQcd<sp/>Model;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">Input</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SpecBit</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61" refid="classGambit_1_1SpecBit_1_1QedQcdWrapper" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper" kindref="compound">QedQcdWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spec" kindref="compound">Spec</ref>&lt;QedQcdWrapper&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>copies<sp/>of<sp/>Model<sp/>and<sp/>Input<sp/>objects<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Model<sp/>qedqcd;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input<sp/>sminputs;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors/destructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1ac2cf2e7b7f82d75514cb54f5dfb1223c" kindref="member">QedQcdWrapper</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1ac2cf2e7b7f82d75514cb54f5dfb1223c" kindref="member">QedQcdWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>softsusy::QedQcd&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref>&amp;);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1ad64056aed16aaed976bbe159d823f8d9" kindref="member">~QedQcdWrapper</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>to<sp/>interface<sp/>Model<sp/>and<sp/>Input<sp/>objects<sp/>with<sp/>the<sp/>base<sp/>&apos;Spec&apos;<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Model&amp;<sp/>get_Model()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qedqcd;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input&amp;<sp/>get_Input()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sminputs;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Model&amp;<sp/>get_Model()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qedqcd;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Input&amp;<sp/>get_Input()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sminputs;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a5ca0b22201354c66013865bc17f9095e" kindref="member">get_numbers_stable_particles</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>QEDQCD<sp/>information<sp/>to<sp/>an<sp/>SLHAea<sp/>object</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a23971be82522088c0a9c103094a9abc4" kindref="member">add_to_SLHAea</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>slha)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>RunningPars<sp/>interface<sp/>overrides</highlight></codeline>
<codeline lineno="86"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a75ec41831d260ccdb5d1fbb34fcade20" kindref="member">GetScale</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a4fc95e683f112d87ef94481cf7271f9a" kindref="member">SetScale</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale);<sp/><sp/></highlight><highlight class="comment">/***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a94301713237c60855bc33444b2a90ef8" kindref="member">RunToScaleOverride</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Limits<sp/>for<sp/>running</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="92" refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a9ff766798d257b6ae9e8e08608d08d99" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a9ff766798d257b6ae9e8e08608d08d99" kindref="member">hardup</ref>;<sp/></highlight><highlight class="comment">//<sp/>Be<sp/>careful<sp/>of<sp/>order<sp/>in<sp/>constructor!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>softup;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>softlow;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hardlow;</highlight></codeline>
<codeline lineno="96" refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1afe348a1f910ef15ddccccfc52523c988" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1afe348a1f910ef15ddccccfc52523c988" kindref="member">hard_upper</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a9ff766798d257b6ae9e8e08608d08d99" kindref="member">hardup</ref>;}<sp/></highlight><highlight class="comment">/*O*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>soft_upper()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>softup;}<sp/></highlight><highlight class="comment">/*O*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>soft_lower()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>softlow;}</highlight><highlight class="comment">/*O*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hard_lower()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hardlow;}</highlight><highlight class="comment">/*O*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>fillers</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spec_1a46858e18ee3cb4193dbaee50b698e0b4" kindref="member">GetterMaps</ref><sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1affab2781176aad96cf7f0882ad898cad" kindref="member">fill_getter_maps</ref>();<sp/></highlight><highlight class="comment">/*O*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SetterMaps<sp/><ref refid="classGambit_1_1SpecBit_1_1QedQcdWrapper_1a528430adf23019978385c72a76bcee89" kindref="member">fill_setter_maps</ref>();<sp/></highlight><highlight class="comment">/*O*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>SpecBit<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>Gambit<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="SpecBit/include/gambit/SpecBit/QedQcdWrapper.hpp"/>
  </compounddef>
</doxygen>
