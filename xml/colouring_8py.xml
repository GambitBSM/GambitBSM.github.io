<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="colouring_8py" kind="file" language="Python">
    <compoundname>colouring.py</compoundname>
    <innernamespace refid="namespacecolouring">colouring</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#*********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>\file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>The<sp/>GAMBIT<sp/>Colouring-in<sp/>Book</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>A<sp/>script<sp/>for<sp/>priming<sp/>pippi<sp/>runs<sp/>and<sp/>patching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>together<sp/>their<sp/>outputs.<sp/>Designed<sp/>to<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>one<sp/>to<sp/>highlight<sp/>specific<sp/>regions<sp/>of<sp/>preferred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>parameter<sp/>space,<sp/>and<sp/>then<sp/>overplot<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>(e.g.<sp/>relic<sp/>density<sp/>mechanisms).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#*********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>\date<sp/>2017<sp/>Feb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#*********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yaml</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>stat</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cpu_count</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Global<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">verbose<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">default_contour<sp/>=<sp/>95.4</highlight></codeline>
<codeline lineno="37"><highlight class="normal">default_contour_style<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Solid&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">default_contour_width<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="39"><highlight class="normal">default_colour<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">default_n_contours<sp/>=<sp/>150</highlight></codeline>
<codeline lineno="41"><highlight class="normal">n_threads<sp/>=<sp/>cpu_count()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Checks<sp/>for<sp/>the<sp/>presence<sp/>of<sp/>one<sp/>or<sp/>more<sp/>keys<sp/>in<sp/>a<sp/>YAML<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_node(node,<sp/>name,<sp/>keys):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>is_ok<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(keys,<sp/>basestring):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Region<sp/>\&quot;&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>must<sp/>have<sp/>key<sp/>\&quot;&quot;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(keys)+</highlight><highlight class="stringliteral">&quot;\&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>is_ok<sp/>=<sp/>(keys<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Region<sp/>\&quot;&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>must<sp/>have<sp/>at<sp/>least<sp/>one<sp/>of<sp/>the<sp/>keys<sp/>&quot;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(keys)+</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>keys:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>is_ok:<sp/>sys.exit(error)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">usage():</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>sys.exit(</highlight><highlight class="stringliteral">&apos;\n<sp/><sp/>Usage:<sp/>colouring<sp/>[prime/combine]<sp/>file1<sp/>file2\n<sp/><sp/>where<sp/>file1<sp/>is<sp/>a<sp/>YAML<sp/>file<sp/>that<sp/>defines<sp/>the<sp/>regions<sp/>you<sp/>want<sp/>to<sp/>find.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file2<sp/>is<sp/>the<sp/>pip<sp/>file<sp/>that<sp/>defines<sp/>the<sp/>pippi<sp/>run<sp/>to<sp/>modify.\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="gambit_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(arguments):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#Starting<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>commandLineOptions<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&apos;prime&apos;</highlight><highlight class="normal">:prime,<sp/></highlight><highlight class="stringliteral">&apos;combine&apos;</highlight><highlight class="normal">:combine<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len(arguments)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>4):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Print<sp/>usage<sp/>info<sp/>and<sp/>quit<sp/>if<sp/>pippi<sp/>is<sp/>invoked<sp/>without<sp/>an<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>usage()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Check<sp/>if<sp/>colouring<sp/>has<sp/>been<sp/>invoked<sp/>with<sp/>one<sp/>of<sp/>the<sp/>two<sp/>known<sp/>specific<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>commandLineOptions[arguments[1]]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command(arguments[2],<sp/>arguments[3])</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Unrecognised<sp/>colouring<sp/>mode:<sp/>&apos;</highlight><highlight class="normal">+arguments[1]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usage()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>sys.exit()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Prepare<sp/>separate<sp/>pippi<sp/>runs<sp/>for<sp/>each<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">prime(region_file,<sp/>pip_file):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>up<sp/>the<sp/>regions<sp/>from<sp/>the<sp/>yaml<sp/>file,<sp/>and<sp/>the<sp/>template<sp/>for<sp/>pippi<sp/>runs<sp/>from<sp/>the<sp/>pip<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>yaml_loader<sp/>=<sp/>yaml.full_load<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(yaml,<sp/></highlight><highlight class="stringliteral">&apos;full_load&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>yaml.load</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>regions<sp/>=<sp/>yaml_loader(file(region_file,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>pip<sp/>=<sp/>file(pip_file,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">).read()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>drawing<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>regions[</highlight><highlight class="stringliteral">&quot;drawing_order&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>drawing_order<sp/>=<sp/>regions[</highlight><highlight class="stringliteral">&quot;drawing_order&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit(</highlight><highlight class="stringliteral">&apos;ERROR:<sp/>No<sp/>drawing_order<sp/>specified<sp/>in<sp/>&apos;</highlight><highlight class="normal">+region_file)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>the<sp/>best<sp/>fit<sp/>in<sp/>the<sp/>base<sp/>scan.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#First<sp/>work<sp/>out<sp/>where<sp/>the<sp/>best<sp/>fit<sp/>file<sp/>is.<sp/><sp/>Start<sp/>with<sp/>the<sp/>dir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>parse_dir<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">&apos;parse_dir\s*=\s*(&quot;(.*)&quot;|\&apos;(.*)\&apos;)&apos;</highlight><highlight class="normal">,<sp/>pip)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>parse_dir<sp/>=<sp/>parse_dir.group(2<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>parse_dir.group(2)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>3)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>infer<sp/>the<sp/>filename<sp/>from<sp/>the<sp/>chain<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>chain_name<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">&apos;main_chain\s*=\s*(&quot;(.*)&quot;|\&apos;(.*)\&apos;)&apos;</highlight><highlight class="normal">,<sp/>pip)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>chain_name<sp/>=<sp/>chain_name.group(2<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>chain_name.group(2)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>3)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>chain_name<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;.*/|\..?.?.?$&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>chain_name)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>best_filename<sp/>=<sp/>parse_dir+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+chain_name+</highlight><highlight class="stringliteral">&quot;.best&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>open<sp/>the<sp/>file<sp/>and<sp/>read<sp/>in<sp/>the<sp/>best<sp/>fit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>best_file<sp/>=<sp/>file(best_filename,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>best_file.readlines():</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>x.split(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bestFit<sp/>=<sp/>float(parts[1])</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>over<sp/>the<sp/>regions<sp/>defined<sp/>in<sp/>the<sp/>yaml<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>drawing_order:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbose):<sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Priming<sp/>pippi<sp/>run<sp/>for<sp/>extracting<sp/>region:<sp/>&quot;</highlight><highlight class="normal">+name</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>mechanism<sp/>=<sp/>regions[name]</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>the<sp/>mechanism<sp/>is<sp/>sufficiently<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>check_node(mechanism,<sp/>name,<sp/>[</highlight><highlight class="stringliteral">&quot;extra_1D_plots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;extra_2D_plots&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>check_node(mechanism,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;datastream&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>check_node(mechanism,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;cut&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>check_node(mechanism,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>new<sp/>pip<sp/>file<sp/>for<sp/>this<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>copy.deepcopy(pip)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Replace<sp/>the<sp/>necessary<sp/>parts<sp/>of<sp/>it,<sp/>starting<sp/>with<sp/>the<sp/>common<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>contour<sp/>=<sp/>default_contour</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;contour_levels&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mechanism):<sp/>contour<sp/>=<sp/>mechanism[</highlight><highlight class="stringliteral">&quot;contour_levels&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;contour_levels\s*=.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;contour_levels<sp/>=<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(contour)+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;extra_1D_plots&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mechanism):<sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;oneD_plot_quantities\s*=\s*&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;oneD_plot_quantities<sp/>=<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(mechanism[</highlight><highlight class="stringliteral">&quot;extra_1D_plots&quot;</highlight><highlight class="normal">])+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;extra_2D_plots&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mechanism):<sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;twoD_plot_quantities\s*=\s*&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;twoD_plot_quantities<sp/>=<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(mechanism[</highlight><highlight class="stringliteral">&quot;extra_2D_plots&quot;</highlight><highlight class="normal">])+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&quot;bf_lnlike_for_profile_like\s*=\s*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bf_lnlike_for_profile_like<sp/>=<sp/>&quot;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(bestFit)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>the<sp/>parse<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;parse_dir\s*=.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;parse_dir<sp/>=<sp/>\&apos;parse_&apos;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&apos;\&apos;\n&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;data_ranges\s*=\s*&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;data_ranges<sp/>=<sp/>&apos;</highlight><highlight class="normal">+mechanism[</highlight><highlight class="stringliteral">&quot;cut&quot;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;preamble&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mechanism):<sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;preamble\s*=.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;preamble<sp/>=<sp/>\&apos;&apos;</highlight><highlight class="normal">+mechanism[</highlight><highlight class="stringliteral">&quot;preamble&quot;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&apos;\&apos;\n&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;assign_to_pippi_datastream\s*=\s*&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;assign_to_pippi_datastream<sp/>=<sp/><sp/><sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>+mechanism[</highlight><highlight class="stringliteral">&quot;datastream&quot;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&apos;<sp/>\\\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;quantity_labels\s*=\s*&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;quantity_labels<sp/>=<sp/><sp/><sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>+mechanism[</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&apos;<sp/>\\\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>the<sp/>script<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;script_dir\s*=.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;script_dir<sp/>=<sp/>\&apos;scripts_&apos;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&apos;\&apos;\n&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>colour<sp/>=<sp/>default_colour</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;colour&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mechanism):<sp/>colour<sp/>=<sp/>mechanism[</highlight><highlight class="stringliteral">&quot;colour&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;colour_scheme\s*=.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;colour_scheme<sp/>=<sp/>Blockshading_&apos;</highlight><highlight class="normal">+colour+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>the<sp/>plot<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>newpip<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;plot_dir\s*=.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;plot_dir<sp/>=<sp/>\&apos;plots_&apos;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&apos;\&apos;\n&apos;</highlight><highlight class="normal">,<sp/>newpip)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output<sp/>the<sp/>new<sp/>pip<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>os.path.splitext(pip_file)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>filename[0]+</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">+name+filename[1]</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(filename,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.write(newpip)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Generated<sp/>new<sp/>pip<sp/>file<sp/>&quot;</highlight><highlight class="normal">+filename</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">combine(region_file,<sp/>pip_file):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>up<sp/>the<sp/>regions<sp/>from<sp/>the<sp/>yaml<sp/>file,<sp/>and<sp/>the<sp/>template<sp/>for<sp/>pippi<sp/>runs<sp/>from<sp/>the<sp/>pip<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>regions<sp/>=<sp/>yaml.load(file(region_file,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>pip<sp/>=<sp/>file(pip_file,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">).read()</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>drawing<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>regions[</highlight><highlight class="stringliteral">&quot;drawing_order&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>drawing_order<sp/>=<sp/>regions[</highlight><highlight class="stringliteral">&quot;drawing_order&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit(</highlight><highlight class="stringliteral">&apos;ERROR:<sp/>No<sp/>drawing_order<sp/>specified<sp/>in<sp/>&apos;</highlight><highlight class="normal">+region_file)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>filenames<sp/>of<sp/>all<sp/>the<sp/>2D<sp/>profile<sp/>likelihood<sp/>scripts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>script_dir<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">&apos;script_dir\s*=\s*(&quot;(.*)&quot;|\&apos;(.*)\&apos;)&apos;</highlight><highlight class="normal">,<sp/>pip)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>script_dir<sp/>=<sp/>script_dir.group(2<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>script_dir.group(2)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>3)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>like2D_scripts<sp/>=<sp/>[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.listdir(script_dir)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;like2D&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x]</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>new<sp/>scripts<sp/>dir<sp/>for<sp/>the<sp/>combined<sp/>scripts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>combo_dir<sp/>=<sp/>script_dir+</highlight><highlight class="stringliteral">&apos;_combined&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(combo_dir):<sp/>os.mkdir(combo_dir)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>new<sp/>plots<sp/>dir<sp/>for<sp/>the<sp/>combined<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>plot_dir<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">&apos;plot_dir\s*=\s*(&quot;(.*)&quot;|\&apos;(.*)\&apos;)&apos;</highlight><highlight class="normal">,<sp/>pip)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>plot_dir<sp/>=<sp/>plot_dir.group(2<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>plot_dir.group(2)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>3)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>plot_combo_dir<sp/>=<sp/>plot_dir+</highlight><highlight class="stringliteral">&apos;_combined&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(plot_combo_dir):<sp/>os.mkdir(plot_combo_dir)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>bulk<sp/>script<sp/>that<sp/>calls<sp/>all<sp/>of<sp/>the<sp/>combined<sp/>plotting<sp/>scripts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>bulkscript_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;make_combined_&apos;</highlight><highlight class="normal">+re.sub(</highlight><highlight class="stringliteral">&apos;\.pip&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>pip_file)+</highlight><highlight class="stringliteral">&apos;_plots.bsh&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>bulkscript<sp/>=<sp/>file(bulkscript_name,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>bulkscript.write(</highlight><highlight class="stringliteral">&apos;cd<sp/>&apos;</highlight><highlight class="normal">+combo_dir+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>over<sp/>the<sp/>different<sp/>scripts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>script_index,<sp/>script_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(like2D_scripts):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>empty<sp/>lists<sp/>of<sp/>the<sp/>things<sp/>that<sp/>will<sp/>vary<sp/>with<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_commands<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>plot_commands<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_colours<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>contour_commands<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>min_contours<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>region_names<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>regional_script<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>over<sp/>all<sp/>the<sp/>regions<sp/>mentioned<sp/>in<sp/>the<sp/>drawing<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>drawing_order:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Open<sp/>the<sp/>script<sp/>file,<sp/>cycling<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fullname<sp/>=<sp/>script_dir+</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">+script_name</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isfile(fullname):<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regional_script<sp/>=<sp/>file(fullname,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">).read()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Save<sp/>the<sp/>name<sp/>of<sp/>the<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>region_names.append(name)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Save<sp/>the<sp/>line<sp/>style<sp/>for<sp/>the<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contour_style<sp/>=<sp/>regions[name][</highlight><highlight class="stringliteral">&quot;contour_style&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;contour_style&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>regions[name]<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>default_contour_style</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>the<sp/>marker<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker_command<sp/>=<sp/>re.findall(</highlight><highlight class="stringliteral">&apos;\s\s--draw-marker.*\n&apos;</highlight><highlight class="normal">,<sp/>regional_script)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>marker_command:<sp/>marker_commands.append(marker_command[0])</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>the<sp/>fill<sp/>colour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fill_colour<sp/>=<sp/>re.findall(</highlight><highlight class="stringliteral">&apos;--#...&apos;</highlight><highlight class="normal">,<sp/>regional_script)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fill_colours.append(fill_colour[1][2:])</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>the<sp/>plot<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plot_command<sp/>=<sp/>re.findall(</highlight><highlight class="stringliteral">&apos;\s\s--plot.*fill-transparency<sp/>1.*\n&apos;</highlight><highlight class="normal">,<sp/>regional_script)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plot_commands.append(plot_command[0])</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>the<sp/>contour<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contour_command_list<sp/>=<sp/>re.findall(</highlight><highlight class="stringliteral">&apos;\s\s--draw-contour.*\n&apos;</highlight><highlight class="normal">,<sp/>regional_script)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_contour<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(contour_command_list):</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contour_command_list[i]<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;width.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;width<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(default_contour_width)+</highlight><highlight class="stringliteral">&apos;\\\n&apos;</highlight><highlight class="normal">,<sp/>x)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contour_command_list[i]<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;style\s*.*?\s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;style<sp/>&apos;</highlight><highlight class="normal">+contour_style+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>contour_command_list[i])</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_contour<sp/>=<sp/>min(min_contour,<sp/>float(re.search(</highlight><highlight class="stringliteral">&apos;--draw-contour\s(.*?)\s&apos;</highlight><highlight class="normal">,<sp/>contour_command_list[i]).group(1)))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contour_commands.append(contour_command_list)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_contours.append(min_contour)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>this<sp/>script<sp/>is<sp/>not<sp/>present<sp/>for<sp/>any<sp/>of<sp/>the<sp/>regions,<sp/>go<sp/>on<sp/>to<sp/>the<sp/>next<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regional_script<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>the<sp/>axis<sp/>styles<sp/>from<sp/>the<sp/>last<sp/>regional<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>axis_styles<sp/>=<sp/>re.findall(</highlight><highlight class="stringliteral">&apos;\s\s--axis-style\s*[^y]*\n&apos;</highlight><highlight class="normal">,<sp/>regional_script)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>in<sp/>the<sp/>original<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>base_script<sp/>=<sp/>file(script_dir+</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">+script_name,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">).readlines()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>preamble<sp/>from<sp/>original<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>preamble<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>base_script[2:]:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>preamble<sp/>=<sp/>preamble+x</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>--xyz-map&apos;</highlight><highlight class="normal">):<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>textual<sp/>annotations<sp/>from<sp/>the<sp/>original<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>=<sp/>[re.sub(</highlight><highlight class="stringliteral">&apos;White&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Black&apos;</highlight><highlight class="normal">,x)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>base_script<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>--draw-text&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>--legend&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile<sp/>=<sp/>open(combo_dir+</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">+script_name,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile.write(</highlight><highlight class="stringliteral">&apos;#!/usr/bin/env<sp/>bash\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile.write(</highlight><highlight class="stringliteral">&apos;#<sp/>This<sp/>plot<sp/>script<sp/>created<sp/>by<sp/>the<sp/>pippi<sp/>scripter<sp/>\&apos;colouring\&apos;<sp/>on<sp/>&apos;</highlight><highlight class="normal">+datetime.datetime.now().strftime(</highlight><highlight class="stringliteral">&apos;%c&apos;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Write<sp/>the<sp/>number<sp/>of<sp/>fill<sp/>steps<sp/>to<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>region<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>region_names:<sp/>outfile.write(</highlight><highlight class="stringliteral">&apos;n_contours_&apos;</highlight><highlight class="normal">+re.sub(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">,region)+</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(default_n_contours)+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Write<sp/>the<sp/>fist<sp/>half<sp/>of<sp/>the<sp/>ctioga2<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile.write(preamble)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Draw<sp/>the<sp/>filled<sp/>regions,<sp/>using<sp/>many<sp/>closely-packed<sp/>contours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>region,<sp/>plot_command<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(plot_commands):</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>--color<sp/>\&apos;&apos;</highlight><highlight class="normal">+fill_colours[region]+</highlight><highlight class="stringliteral">&apos;\&apos;<sp/>\\\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.write(plot_command)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/>$(echo<sp/>$(for<sp/>((<sp/>i=0;<sp/>i&lt;$n_contours_&apos;</highlight><highlight class="normal">+re.sub(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">,region_names[region])+</highlight><highlight class="stringliteral">&apos;;<sp/>i++<sp/>));<sp/>do<sp/>echo<sp/>&quot;--draw-contour<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;$(echo<sp/>&quot;&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(min_contours[region])+</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(1.0-min_contours[region])+</highlight><highlight class="stringliteral">&apos;*$i/($n_contours_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+re.sub(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">,region_names[region])+</highlight><highlight class="stringliteral">&apos;-1)&quot;<sp/>|<sp/>bc<sp/>-l)<sp/>/style<sp/>Solid<sp/>/width<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(default_contour_width)+</highlight><highlight class="stringliteral">&apos;<sp/>&quot;;<sp/>done))<sp/>\\\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>--draw-contour<sp/>1.000<sp/>/style<sp/>Solid<sp/>/width<sp/>&apos;</highlight><highlight class="normal">+<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(default_contour_width)+</highlight><highlight class="stringliteral">&apos;\\\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Draw<sp/>the<sp/>actual<sp/>outline<sp/>contours<sp/>on<sp/>top<sp/>of<sp/>all<sp/>the<sp/>filled<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>region,<sp/>plot_command<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(plot_commands):</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.write(plot_command)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>contour_commands[region]:<sp/>outfile.write(x)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Draw<sp/>any<sp/>markers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>marker_command<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>marker_commands:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.write(marker_command)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Write<sp/>any<sp/>textual<sp/>annotations,<sp/>and<sp/>set<sp/>the<sp/>axes<sp/>up<sp/>in<sp/>the<sp/>manner<sp/>of<sp/>the<sp/>region<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>text:<sp/>outfile.write(x)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>axis_styles:<sp/>outfile.write(x)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>an<sp/>entry<sp/>to<sp/>the<sp/>bulk<sp/>plotting<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>pdf_name<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&quot;\.bsh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.pdf&quot;</highlight><highlight class="normal">,<sp/>script_name)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>bulkscript.write(</highlight><highlight class="stringliteral">&apos;(echo<sp/>&quot;./&apos;</highlight><highlight class="normal">+script_name+</highlight><highlight class="stringliteral">&apos;&quot;<sp/>&amp;&amp;<sp/>./&apos;</highlight><highlight class="normal"><sp/>+<sp/>script_name<sp/>+</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>&amp;&amp;<sp/>gs<sp/>-sDEVICE=pdfwrite<sp/>-dCompatibilityLevel=1.4<sp/>-dPDFSETTINGS=/screen<sp/>-dNOPAUSE<sp/>-dQUIET<sp/>-dBATCH<sp/>-sOutputFile=&apos;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;../&apos;</highlight><highlight class="normal"><sp/>+<sp/>plot_combo_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>pdf_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>pdf_name<sp/>+</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>&amp;&amp;<sp/>rm<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>pdf_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;)<sp/>&amp;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script_index%n_threads<sp/>==<sp/>n_threads<sp/>-<sp/>1<sp/>):<sp/>bulkscript.write(</highlight><highlight class="stringliteral">&apos;wait\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Done!<sp/><sp/>Close<sp/>the<sp/>new<sp/>script<sp/>file<sp/>and<sp/>make<sp/>it<sp/>executable<sp/>for<sp/>both<sp/>user<sp/>and<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile.close</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chmod(combo_dir+</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">+script_name,<sp/>stat.S_IRWXU<sp/>|<sp/>stat.S_IRWXG)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>over<sp/>red<sp/>rover.<sp/><sp/>Go<sp/>write<sp/>a<sp/>paper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>bulkscript.write(</highlight><highlight class="stringliteral">&apos;wait\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>bulkscript.write(</highlight><highlight class="stringliteral">&apos;echo<sp/>&quot;Generated<sp/>all<sp/>combined<sp/>plots.<sp/><sp/>Now<sp/>go<sp/>write<sp/>a<sp/>paper!&quot;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>bulkscript.close</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>os.chmod(bulkscript_name,<sp/>stat.S_IRWXU<sp/>|<sp/>stat.S_IRWXG)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">#Actual<sp/>program<sp/>launched<sp/>on<sp/>invocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="gambit_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(sys.argv)</highlight></codeline>
    </programlisting>
    <location file="Utils/scripts/colouring.py"/>
  </compounddef>
</doxygen>
