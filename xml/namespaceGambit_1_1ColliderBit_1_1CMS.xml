<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespaceGambit_1_1ColliderBit_1_1CMS" kind="namespace" language="C++">
    <compoundname>Gambit::ColliderBit::CMS</compoundname>
      <sectiondef kind="user-defined">
      <header>CMS detector efficiency functions</header>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a89a3847d536a96d290b7d4c81c00372d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyElectronTrackingEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; &amp;electrons)</argsstring>
        <name>applyElectronTrackingEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyElectronTrackingEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt; &amp;</type>
          <declname>electrons</declname>
        </param>
        <briefdescription>
<para>Randomly filter the supplied particle list by parameterised electron tracking efficiency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="50" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a21ef840d1b4329f3b773b9e77807b1af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyElectronEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; &amp;electrons)</argsstring>
        <name>applyElectronEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyElectronEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt; &amp;</type>
          <declname>electrons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Randomly filter the supplied particle list by parameterised electron efficiency <simplesect kind="note"><para>Should be applied after the electron energy smearing </para>
</simplesect>
<simplesect kind="note"><para>Eff values currently identical to those in <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref> (AB, 2016-01-24) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="64" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a373164680c6bca8d94b699b17e038a72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyMuonTrackEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; &amp;muons)</argsstring>
        <name>applyMuonTrackEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyMuonTrackEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt; &amp;</type>
          <declname>muons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Randomly filter the supplied particle list by parameterised muon tracking efficiency <simplesect kind="note"><para>Eff values currently identical to those in <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref> (AB, 2016-01-24) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="77" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="77" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1ab1505d12e0fe18877d8afa86e83df707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyMuonEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; &amp;muons)</argsstring>
        <name>applyMuonEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyMuonEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt; &amp;</type>
          <declname>muons</declname>
        </param>
        <briefdescription>
<para>Randomly filter the supplied particle list by parameterised muon efficiency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="89" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="89" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1adb68a1df2dfc3f8a8b30b95127834cb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyTauEfficiency</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; &amp;taus)</argsstring>
        <name>applyTauEfficiency</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyTauEfficiency</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt; &amp;</type>
          <declname>taus</declname>
        </param>
        <briefdescription>
<para>Randomly filter the supplied particle list by parameterised tau efficiency. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>No delete, because this should only ever be applied to copies of the Event Particle* vectors in <ref refid="classGambit_1_1ColliderBit_1_1Analysis" kindref="compound">Analysis</ref> routines </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="109" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a6e1e42a2d443facf5dc9e9558cd3cc53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::smearElectronEnergy</definition>
        <argsstring>(std::vector&lt; HEPUtils::Particle * &gt; &amp;electrons)</argsstring>
        <name>smearElectronEnergy</name>
        <qualifiedname>Gambit::ColliderBit::CMS::smearElectronEnergy</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Particle * &gt; &amp;</type>
          <declname>electrons</declname>
        </param>
        <briefdescription>
<para>Randomly smear the supplied electrons&apos; momenta by parameterised resolutions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function that mimics the DELPHES electron energy resolution. We need to smear E, then recalculate pT, then reset the 4-vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="119" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="119" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a5b468afca764b653736efbdde08caa9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::smearMuonMomentum</definition>
        <argsstring>(std::vector&lt; HEPUtils::Particle * &gt; &amp;muons)</argsstring>
        <name>smearMuonMomentum</name>
        <qualifiedname>Gambit::ColliderBit::CMS::smearMuonMomentum</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Particle * &gt; &amp;</type>
          <declname>muons</declname>
        </param>
        <briefdescription>
<para>Randomly smear the supplied muons&apos; momenta by parameterised resolutions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function that mimics the DELPHES muon momentum resolution. We need to smear pT, then recalculate E, then reset the 4-vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="165" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="165" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1aa82b5cc950fdb91e31c9bb3ac7d26d80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::smearJets</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;jets)</argsstring>
        <name>smearJets</name>
        <qualifiedname>Gambit::ColliderBit::CMS::smearJets</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <briefdescription>
<para>Randomly smear the supplied jets&apos; momenta by parameterised resolutions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function that mimics the DELPHES jet momentum resolution. We need to smear pT, then recalculate E, then reset the 4-vector</para>
<para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para>Update cf. Matthias study for <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000015"><xreftitle>Todo</xreftitle><xrefdescription><para>This is the <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref> number... I can&apos;t find values for the <ref refid="namespaceGambit_1_1ColliderBit_1_1CMS" kindref="compound">CMS</ref> parameterisation, cf. <ulink url="https://cds.cern.ch/record/1339945/files/JME-10-014-pas.pdf">https://cds.cern.ch/record/1339945/files/JME-10-014-pas.pdf</ulink> <ulink url="https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideJetResolution">https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideJetResolution</ulink> <ulink url="https://github.com/adrager/cmssw/blob/CMSSW_7_2_X/CondFormats/JetMETObjects/test/TestCorrections.C">https://github.com/adrager/cmssw/blob/CMSSW_7_2_X/CondFormats/JetMETObjects/test/TestCorrections.C</ulink> </para>
</xrefdescription></xrefsect></para>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="211" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="211" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1ac1abbb95c9de02059ac9b59bfdea20a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::smearTaus</definition>
        <argsstring>(std::vector&lt; HEPUtils::Particle * &gt; &amp;taus)</argsstring>
        <name>smearTaus</name>
        <qualifiedname>Gambit::ColliderBit::CMS::smearTaus</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Particle * &gt; &amp;</type>
          <declname>taus</declname>
        </param>
        <briefdescription>
<para>Randomly smear the supplied hadronic taus&apos; momenta by parameterised resolutions. </para>
        </briefdescription>
        <detaileddescription>
<para>We need to smear pT, then recalculate E, then reset the 4-vector. Same as for jets, but on a vector of particles. (?)</para>
<para><xrefsect id="todo_1_todo000016"><xreftitle>Todo</xreftitle><xrefdescription><para>Update cf. Matthias study for <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000017"><xreftitle>Todo</xreftitle><xrefdescription><para>Is this the best way to smear? Should we preserve the mean jet energy, or pT, or direction? </para>
</xrefdescription></xrefsect></para>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="248" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="248" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1ab8337314f862c7d52263076be261ceb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2MediumBtagEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply efficiency function to CSVv2 medium WP b-tagged jets <simplesect kind="note"><para>Numbers digitized from <ulink url="https://twiki.cern.ch/twiki/pub/CMSPublic/SUSMoriond2017ObjectsEfficiency/btag_eff_CSVv2_DeepCSV.pdf">https://twiki.cern.ch/twiki/pub/CMSPublic/SUSMoriond2017ObjectsEfficiency/btag_eff_CSVv2_DeepCSV.pdf</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="267" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="267" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1af88e55a4e5b449cc45d61871b7d50006" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEff</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2MediumBtagEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEff</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="287" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a8277e9316f0d53cee8cdfa6d5495e238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2LooseBtagEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply efficiency function to CSVv2 loose WP b-tagged jets <simplesect kind="note"><para>Numbers digitized from <ulink url="https://twiki.cern.ch/twiki/pub/CMSPublic/SUSMoriond2017ObjectsEfficiency/btag_eff_CSVv2_DeepCSV.pdf">https://twiki.cern.ch/twiki/pub/CMSPublic/SUSMoriond2017ObjectsEfficiency/btag_eff_CSVv2_DeepCSV.pdf</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="294" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="294" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a3852aa0043fb37cd2438df29898cdd40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEff</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2LooseBtagEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEff</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="314" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a199742cd6246e81a53a9da6e00249963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2TightBtagEff</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2TightBtagEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2TightBtagEff</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply efficiency function to CSVv2 tight WP b-tagged jets <simplesect kind="note"><para>Numbers digitized from <ulink url="https://twiki.cern.ch/twiki/pub/CMSPublic/SUSMoriond2017ObjectsEfficiency/btag_eff_CSVv2_DeepCSV.pdf">https://twiki.cern.ch/twiki/pub/CMSPublic/SUSMoriond2017ObjectsEfficiency/btag_eff_CSVv2_DeepCSV.pdf</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="321" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="321" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a251768d16baecb19d2a522d6b34117be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2TightBtagEff</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2TightBtagEff</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2TightBtagEff</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="341" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1adbbc313338a5a9746f6f1e1c05e1a200" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyBtagMisId</definition>
        <argsstring>(double mis_id_prob, std::vector&lt; const HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyBtagMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyBtagMisId</qualifiedname>
        <param>
          <type>double</type>
          <declname>mis_id_prob</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
<para>Apply user-specified b-tag misidentification rate (flat) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="347" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="347" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1abfe6a5c39fab54024a07af03c9f04262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyBtagMisId</definition>
        <argsstring>(double mis_id_prob, std::vector&lt; HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyBtagMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyBtagMisId</qualifiedname>
        <param>
          <type>double</type>
          <declname>mis_id_prob</declname>
        </param>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="357" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a7aff46ccc1e659340beecc2f6bc3fbd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2LooseBtagMisId</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2LooseBtagMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2LooseBtagMisId</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply b-tag misidentification rate for CSVv2 loose WP <simplesect kind="note"><para>Numbers from Table 2 in <ulink url="https://arxiv.org/pdf/1712.07158.pdf">https://arxiv.org/pdf/1712.07158.pdf</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="365" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="365" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1ae30d73d9612e4749ac8cb6f37a5cba0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2LooseBtagMisId</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2LooseBtagMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2LooseBtagMisId</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="374" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a9849c551a617d2d77d9beadbec937b9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEffAndMisId</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2LooseBtagEffAndMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEffAndMisId</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
<para>Apply both b-tag efficiency and misidentification rate for CSVv2 loose WP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="381" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="381" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1af275457546e63ff4c867bede23940e49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEffAndMisId</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2LooseBtagEffAndMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2LooseBtagEffAndMisId</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="390" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a3c45c10ae85d2a1a2c5174001f4e9a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2MediumBtagMisId</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2MediumBtagMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2MediumBtagMisId</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply b-tag misidentification rate for CSVv2 medium WP <simplesect kind="note"><para>Numbers from Table 2 in <ulink url="https://arxiv.org/pdf/1712.07158.pdf">https://arxiv.org/pdf/1712.07158.pdf</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="398" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="398" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a13da06b00f2f54fc9334d4596e94c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2MediumBtagMisId</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2MediumBtagMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2MediumBtagMisId</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="407" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a89082670e09757644ae97095dab97659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEffAndMisId</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; const HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2MediumBtagEffAndMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEffAndMisId</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
<para>Apply both b-tag efficiency and misidentification rate for CSVv2 medium WP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="414" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="414" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a9ad8e2fc85f72ff1b6970f5b17e8e87f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEffAndMisId</definition>
        <argsstring>(std::vector&lt; HEPUtils::Jet * &gt; &amp;jets, std::vector&lt; HEPUtils::Jet * &gt; &amp;bjets)</argsstring>
        <name>applyCSVv2MediumBtagEffAndMisId</name>
        <qualifiedname>Gambit::ColliderBit::CMS::applyCSVv2MediumBtagEffAndMisId</qualifiedname>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; HEPUtils::Jet * &gt; &amp;</type>
          <declname>bjets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="423" column="19" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="423" bodyend="426"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a5d0bcda50e48fa428214727217c6a768" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>, HEPUtils::BinnedFn2D&lt; double &gt; &gt;</type>
        <definition>const std::map&lt;str, HEPUtils::BinnedFn2D&lt;double&gt; &gt; Gambit::ColliderBit::CMS::eff2DEl</definition>
        <argsstring></argsstring>
        <name>eff2DEl</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DEl</qualifiedname>
        <initializer>=
      {
        {&quot;SUS_16_039&quot;, eff2DEl_SUS_16_039},
        {&quot;SUS_19_008&quot;, eff2DEl_SUS_19_008}
      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="517" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGambit_1_1ColliderBit_1_1CMS_1aed9938ae4928480aabd3dd6d4e8815eb" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>, HEPUtils::BinnedFn2D&lt; double &gt; &gt;</type>
        <definition>const std::map&lt;str, HEPUtils::BinnedFn2D&lt;double&gt; &gt; Gambit::ColliderBit::CMS::eff2DMu</definition>
        <argsstring></argsstring>
        <name>eff2DMu</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DMu</qualifiedname>
        <initializer>=
      {
        {&quot;SUS_16_039&quot;, eff2DMu_SUS_16_039},
        {&quot;SUS_19_008&quot;, eff2DMu_SUS_19_008}

      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="524" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGambit_1_1ColliderBit_1_1CMS_1ae5e1d6b9d287727b358c9ee8d25895e3" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>, HEPUtils::BinnedFn2D&lt; double &gt; &gt;</type>
        <definition>const std::map&lt;str, HEPUtils::BinnedFn2D&lt;double&gt; &gt; Gambit::ColliderBit::CMS::eff2DTau</definition>
        <argsstring></argsstring>
        <name>eff2DTau</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DTau</qualifiedname>
        <initializer>=
      {
        {&quot;SUS_16_039&quot;, eff2DTau_SUS_16_039}
      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="532" column="29" bodyfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" bodystart="532" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1aea40331f170d66d14a4c5eb462d0edc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const HEPUtils::BinnedFn2D&lt; double &gt;</type>
        <definition>static const HEPUtils::BinnedFn2D&lt; double &gt; Gambit::ColliderBit::CMS::eff2DEl_SUS_16_039</definition>
        <argsstring>({0., 0.8, 1.442, 1.556, 2., 2.5, DBL_MAX}, {0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}, { 0.0, 0.95, 0.507, 0.619, 0.682, 0.742, 0.798, 0.863, 0.0, 0.95, 0.429, 0.546, 0.619, 0.710, 0.734, 0.833, 0.0, 0.95, 0.256, 0.221, 0.315, 0.351, 0.373, 0.437, 0.0, 0.85, 0.249, 0.404, 0.423, 0.561, 0.642, 0.749, 0.0, 0.85, 0.195, 0.245, 0.380, 0.441, 0.533, 0.644, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 })</argsstring>
        <name>eff2DEl_SUS_16_039</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DEl_SUS_16_039</qualifiedname>
        <param>
          <type>{0., 0.8, 1.442, 1.556, 2., 2.5, DBL_MAX}</type>
        </param>
        <param>
          <type>{0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}</type>
        </param>
        <param>
          <type>{ 0.0, 0.95, 0.507, 0.619, 0.682, 0.742, 0.798, 0.863, 0.0, 0.95, 0.429, 0.546, 0.619, 0.710, 0.734, 0.833, 0.0, 0.95, 0.256, 0.221, 0.315, 0.351, 0.373, 0.437, 0.0, 0.85, 0.249, 0.404, 0.423, 0.561, 0.642, 0.749, 0.0, 0.85, 0.195, 0.245, 0.380, 0.441, 0.533, 0.644, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Representative Muon and Electron efficiencies for the WPs of the identification techniques used in SUSY analyses From <ulink url="https://twiki.cern.ch/twiki/bin/view/CMSPublic/SUSMoriond2017ObjectsEfficiency">https://twiki.cern.ch/twiki/bin/view/CMSPublic/SUSMoriond2017ObjectsEfficiency</ulink> {@ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="440" column="41" declfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" declline="440" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1abd1dcd9da0311b92e7f544a6df8455ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const HEPUtils::BinnedFn2D&lt; double &gt;</type>
        <definition>static const HEPUtils::BinnedFn2D&lt; double &gt; Gambit::ColliderBit::CMS::eff2DMu_SUS_16_039</definition>
        <argsstring>({0., 0.9, 1.2, 2.1, 2.4, DBL_MAX}, {0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}, { 0.0, 0.704, 0.797, 0.855, 0.880, 0.906, 0.927, 0.931, 0.0, 0.639, 0.776, 0.836, 0.875, 0.898, 0.940, 0.930, 0.0, 0.596, 0.715, 0.840, 0.862, 0.891, 0.906, 0.925, 0.0, 0.522, 0.720, 0.764, 0.803, 0.807, 0.885, 0.877, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 })</argsstring>
        <name>eff2DMu_SUS_16_039</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DMu_SUS_16_039</qualifiedname>
        <param>
          <type>{0., 0.9, 1.2, 2.1, 2.4, DBL_MAX}</type>
        </param>
        <param>
          <type>{0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}</type>
        </param>
        <param>
          <type>{ 0.0, 0.704, 0.797, 0.855, 0.880, 0.906, 0.927, 0.931, 0.0, 0.639, 0.776, 0.836, 0.875, 0.898, 0.940, 0.930, 0.0, 0.596, 0.715, 0.840, 0.862, 0.891, 0.906, 0.925, 0.0, 0.522, 0.720, 0.764, 0.803, 0.807, 0.885, 0.877, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="457" column="41" declfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" declline="457" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a620406d843d22617f42d4d25d8afc22c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const HEPUtils::BinnedFn2D&lt; double &gt;</type>
        <definition>static const HEPUtils::BinnedFn2D&lt; double &gt; Gambit::ColliderBit::CMS::eff2DTau_SUS_16_039</definition>
        <argsstring>({0., 2.3}, {0., 25., 30., 35., 40., 45., 50., 60., 70., 80., DBL_MAX}, {0.38 *0.95, 0.48 *0.95, 0.5 *0.95, 0.49 *0.95, 0.51 *0.95, 0.49 *0.95, 0.47 *0.95, 0.45 *0.95, 0.48 *0.95, 0.5 *0.95})</argsstring>
        <name>eff2DTau_SUS_16_039</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DTau_SUS_16_039</qualifiedname>
        <param>
          <type>{0., 2.3}</type>
        </param>
        <param>
          <type>{0., 25., 30., 35., 40., 45., 50., 60., 70., 80., DBL_MAX}</type>
        </param>
        <param>
          <type>{0.38 *0.95, 0.48 *0.95, 0.5 *0.95, 0.49 *0.95, 0.51 *0.95, 0.49 *0.95, 0.47 *0.95, 0.45 *0.95, 0.48 *0.95, 0.5 *0.95}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="473" column="41" declfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" declline="473" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a5c2ca2e6ca68327d2b5d541fab4655b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const HEPUtils::BinnedFn2D&lt; double &gt;</type>
        <definition>static const HEPUtils::BinnedFn2D&lt; double &gt; Gambit::ColliderBit::CMS::eff2DEl_SUS_19_008</definition>
        <argsstring>({0., 0.8, 1.442, 1.556, 2., 2.5, DBL_MAX}, {0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}, { 0.0, 0.95, 0.330, 0.412, 0.487, 0.561, 0.615, 0.701, 0.0, 0.95, 0.276, 0.367, 0.434, 0.520, 0.575, 0.660, 0.0, 0.95, 0.202, 0.170, 0.224, 0.261, 0.275, 0.341, 0.0, 0.85, 0.210, 0.288, 0.358, 0.434, 0.493, 0.586, 0.0, 0.85, 0.146, 0.200, 0.246, 0.314, 0.382, 0.456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 })</argsstring>
        <name>eff2DEl_SUS_19_008</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DEl_SUS_19_008</qualifiedname>
        <param>
          <type>{0., 0.8, 1.442, 1.556, 2., 2.5, DBL_MAX}</type>
        </param>
        <param>
          <type>{0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}</type>
        </param>
        <param>
          <type>{ 0.0, 0.95, 0.330, 0.412, 0.487, 0.561, 0.615, 0.701, 0.0, 0.95, 0.276, 0.367, 0.434, 0.520, 0.575, 0.660, 0.0, 0.95, 0.202, 0.170, 0.224, 0.261, 0.275, 0.341, 0.0, 0.85, 0.210, 0.288, 0.358, 0.434, 0.493, 0.586, 0.0, 0.85, 0.146, 0.200, 0.246, 0.314, 0.382, 0.456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="485" column="41" declfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" declline="485" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGambit_1_1ColliderBit_1_1CMS_1a51b0ef9757689cd6bbaf2f1e93096cb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const HEPUtils::BinnedFn2D&lt; double &gt;</type>
        <definition>static const HEPUtils::BinnedFn2D&lt; double &gt; Gambit::ColliderBit::CMS::eff2DMu_SUS_19_008</definition>
        <argsstring>({0., 0.9, 1.2, 2.1, 2.4, DBL_MAX}, {0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}, { 0.0, 0.527, 0.639, 0.723, 0.801, 0.858, 0.887, 0.926, 0.0, 0.482, 0.596, 0.695, 0.755, 0.831, 0.870, 0.917, 0.0, 0.498, 0.585, 0.683, 0.743, 0.807, 0.851, 0.896, 0.0, 0.441, 0.522, 0.604, 0.677, 0.744, 0.793, 0.834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 })</argsstring>
        <name>eff2DMu_SUS_19_008</name>
        <qualifiedname>Gambit::ColliderBit::CMS::eff2DMu_SUS_19_008</qualifiedname>
        <param>
          <type>{0., 0.9, 1.2, 2.1, 2.4, DBL_MAX}</type>
        </param>
        <param>
          <type>{0., 10., 15., 20., 25., 30., 40., 50., DBL_MAX}</type>
        </param>
        <param>
          <type>{ 0.0, 0.527, 0.639, 0.723, 0.801, 0.858, 0.887, 0.926, 0.0, 0.482, 0.596, 0.695, 0.755, 0.831, 0.870, 0.917, 0.0, 0.498, 0.585, 0.683, 0.743, 0.807, 0.851, 0.896, 0.0, 0.441, 0.522, 0.604, 0.677, 0.744, 0.793, 0.834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="502" column="41" declfile="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" declline="502" declcolumn="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CMS-specific efficiency and smearing functions for super fast detector simulation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ColliderBit/include/gambit/ColliderBit/CMSEfficiencies.hpp" line="43" column="5"/>
  </compounddef>
</doxygen>
