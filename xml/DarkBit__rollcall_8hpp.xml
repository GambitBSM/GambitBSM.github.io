<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="DarkBit__rollcall_8hpp" kind="file" language="C++">
    <compoundname>DarkBit_rollcall.hpp</compoundname>
    <includes refid="DarkBit__types_8hpp" local="yes">gambit/DarkBit/DarkBit_types.hpp</includes>
    <includedby refid="Axions_8cpp" local="yes">Axions.cpp</includedby>
    <includedby refid="Cascades_8cpp" local="yes">Cascades.cpp</includedby>
    <includedby refid="DMEFT_8cpp" local="yes">DMEFT.cpp</includedby>
    <includedby refid="DarkBit_8cpp" local="yes">DarkBit.cpp</includedby>
    <includedby refid="DarkBit__standalone__MSSM_8cpp" local="yes">DarkBit_standalone_MSSM.cpp</includedby>
    <includedby refid="DarkBit__standalone__ScalarSingletDM__Z2_8cpp" local="yes">DarkBit_standalone_ScalarSingletDM_Z2.cpp</includedby>
    <includedby refid="DarkBit__standalone__WIMP_8cpp" local="yes">DarkBit_standalone_WIMP.cpp</includedby>
    <includedby refid="DarkBit__utils_8cpp" local="yes">DarkBit_utils.cpp</includedby>
    <includedby refid="DiracSingletDM_8cpp" local="yes">DiracSingletDM.cpp</includedby>
    <includedby refid="DirectDetection_8cpp" local="yes">DirectDetection.cpp</includedby>
    <includedby refid="EnergyInjection_8cpp" local="yes">EnergyInjection.cpp</includedby>
    <includedby refid="IndirectDetectionYields_8cpp" local="yes">IndirectDetectionYields.cpp</includedby>
    <includedby refid="MSSM_8cpp" local="yes">MSSM.cpp</includedby>
    <includedby refid="MajoranaSingletDM_8cpp" local="yes">MajoranaSingletDM.cpp</includedby>
    <includedby refid="PPPC_8cpp" local="yes">PPPC.cpp</includedby>
    <includedby refid="ProcessCatalog_8cpp" local="yes">ProcessCatalog.cpp</includedby>
    <includedby refid="RelicDensity_8cpp" local="yes">RelicDensity.cpp</includedby>
    <includedby refid="ScalarSingletDM_8cpp" local="yes">ScalarSingletDM.cpp</includedby>
    <includedby refid="SimpleHist_8cpp" local="yes">SimpleHist.cpp</includedby>
    <includedby refid="SimpleLikelihoods_8cpp" local="yes">SimpleLikelihoods.cpp</includedby>
    <includedby refid="SunNeutrinos_8cpp" local="yes">SunNeutrinos.cpp</includedby>
    <includedby refid="VectorSingletDM_8cpp" local="yes">VectorSingletDM.cpp</includedby>
    <includedby refid="WIMP__EFT_8cpp" local="yes">WIMP_EFT.cpp</includedby>
    <includedby refid="decay__chain_8cpp" local="yes">decay_chain.cpp</includedby>
    <incdepgraph>
      <node id="18">
        <label>gambit/Backends/backend_types/nulike.hpp</label>
        <link refid="nulike_8hpp"/>
      </node>
      <node id="1">
        <label>DarkBit_rollcall.hpp</label>
        <link refid="DarkBit__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/DarkBit/DarkBit_types.hpp</label>
        <link refid="DarkBit__types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/DarkBit/ProcessCatalog.hpp</label>
        <link refid="ProcessCatalog_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/DarkBit/SimpleHist.hpp</label>
        <link refid="SimpleHist_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/DarkBit/decay_chain.hpp</label>
        <link refid="decay__chain_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="14">
        <label>gambit/Elements/daFunk.hpp</label>
      </node>
      <node id="16">
        <label>gambit/Models/safe_param_map.hpp</label>
      </node>
      <node id="9">
        <label>gambit/Utils/threadsafe_rng.hpp</label>
      </node>
      <node id="12">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="17">
        <label>gambit/Utils/yaml_options.hpp</label>
      </node>
      <node id="13">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="7">
        <label>set</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="5">
        <label>unordered_map</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>DarkBit_standalone_MSSM.cpp</label>
        <link refid="DarkBit__standalone__MSSM_8cpp"/>
      </node>
      <node id="7">
        <label>DarkBit_standalone_ScalarSingletDM_Z2.cpp</label>
        <link refid="DarkBit__standalone__ScalarSingletDM__Z2_8cpp"/>
      </node>
      <node id="8">
        <label>DarkBit_standalone_WIMP.cpp</label>
        <link refid="DarkBit__standalone__WIMP_8cpp"/>
      </node>
      <node id="1">
        <label>DarkBit_rollcall.hpp</label>
        <link refid="DarkBit__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Axions.cpp</label>
        <link refid="Axions_8cpp"/>
      </node>
      <node id="3">
        <label>Cascades.cpp</label>
        <link refid="Cascades_8cpp"/>
      </node>
      <node id="4">
        <label>DMEFT.cpp</label>
        <link refid="DMEFT_8cpp"/>
      </node>
      <node id="5">
        <label>DarkBit.cpp</label>
        <link refid="DarkBit_8cpp"/>
      </node>
      <node id="9">
        <label>DarkBit_utils.cpp</label>
        <link refid="DarkBit__utils_8cpp"/>
      </node>
      <node id="10">
        <label>DiracSingletDM.cpp</label>
        <link refid="DiracSingletDM_8cpp"/>
      </node>
      <node id="11">
        <label>DirectDetection.cpp</label>
        <link refid="DirectDetection_8cpp"/>
      </node>
      <node id="12">
        <label>EnergyInjection.cpp</label>
        <link refid="EnergyInjection_8cpp"/>
      </node>
      <node id="13">
        <label>IndirectDetectionYields.cpp</label>
        <link refid="IndirectDetectionYields_8cpp"/>
      </node>
      <node id="14">
        <label>MSSM.cpp</label>
        <link refid="MSSM_8cpp"/>
      </node>
      <node id="15">
        <label>MajoranaSingletDM.cpp</label>
        <link refid="MajoranaSingletDM_8cpp"/>
      </node>
      <node id="16">
        <label>PPPC.cpp</label>
        <link refid="PPPC_8cpp"/>
      </node>
      <node id="17">
        <label>ProcessCatalog.cpp</label>
        <link refid="ProcessCatalog_8cpp"/>
      </node>
      <node id="18">
        <label>RelicDensity.cpp</label>
        <link refid="RelicDensity_8cpp"/>
      </node>
      <node id="19">
        <label>ScalarSingletDM.cpp</label>
        <link refid="ScalarSingletDM_8cpp"/>
      </node>
      <node id="20">
        <label>SimpleHist.cpp</label>
        <link refid="SimpleHist_8cpp"/>
      </node>
      <node id="21">
        <label>SimpleLikelihoods.cpp</label>
        <link refid="SimpleLikelihoods_8cpp"/>
      </node>
      <node id="22">
        <label>SunNeutrinos.cpp</label>
        <link refid="SunNeutrinos_8cpp"/>
      </node>
      <node id="23">
        <label>VectorSingletDM.cpp</label>
        <link refid="VectorSingletDM_8cpp"/>
      </node>
      <node id="24">
        <label>WIMP_EFT.cpp</label>
        <link refid="WIMP__EFT_8cpp"/>
      </node>
      <node id="25">
        <label>decay_chain.cpp</label>
        <link refid="decay__chain_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" prot="public" static="no">
        <name>MODULE</name>
        <initializer>DarkBit</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="106" column="9" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBITDarkMatterWorkgroup:2017fax</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="107" column="9" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DarkSUSY5_PointInit_LocalHalo</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="113" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkSUSY5_PointInit_LocalHalo_func</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="115" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DarkSUSY_PointInit_LocalHalo</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="128" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkSUSY_PointInit_LocalHalo_func</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="130" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_spectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="146" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_spectrum_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="148" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_spectrum_SUSY_DS5</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="154" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_spectrum_from_ProcessCatalog</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="163" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_spectrum_ordered</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="174" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_spectrum_ordered_func</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="176" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_eff_annrate_DS5prep</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="182" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_annrate_DS5prep_func</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="184" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_eff_annrate_DSprep_MSSM</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="192" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_annrate_DSprep_MSSM_func</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="194" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_eff_annrate</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="204" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_eff_annrate_DS5_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="206" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_eff_annrate_DS_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="213" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_eff_annrate_from_ProcessCatalog</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="220" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_oh2</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="230" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_oh2_DS_general</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="234" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_oh2_DS5_general</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="251" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_oh2_DarkSUSY_DS5</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="278" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_oh2_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="288" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_oh2_Axions</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="294" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_oh2_Xf</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="313" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_oh2_Xf_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="315" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>Xf</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="333" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>Xf_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="335" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>relic_density_contributions</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="342" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>print_channel_contributions_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="344" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>semi_annihilation_fraction</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="352" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_semi_ann_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="354" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>vSigma_freezeout</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="362" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>vSigma_freezeout_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="364" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RD_fraction</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="373" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_fraction_one</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="375" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_fraction_leq_one</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="378" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_fraction_rescaled</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="382" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>RD_fraction_rescaled_LCDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="386" column="17" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>TH_ProcessCatalog</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="396" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_DS5_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="400" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_DS_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="418" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_ScalarSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="436" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_ScalarSingletDM_Z3</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="443" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_VectorSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="453" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_MajoranaSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="460" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_DiracSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="467" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_AnnihilatingDM_mixture</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="474" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_DecayingDM_mixture</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="479" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_WIMP_EFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="484" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>TH_ProcessCatalog_DMEFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="495" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DM_process</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="508" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DM_process_from_ProcessCatalog</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="510" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>FullSimYieldTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="520" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>Combine_SimYields</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="522" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>GA_SimYieldTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="532" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_SimYieldTable_DarkSUSY</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="534" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_SimYieldTable_DS5</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="538" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_SimYieldTable_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="543" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_SimYieldTable_PPPC</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="547" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_SimYieldTable_empty</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="551" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>positron_SimYieldTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="556" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>positron_SimYieldTable_DarkSUSY</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="558" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>positron_SimYieldTable_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="562" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>positron_SimYieldTable_PPPC</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="566" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>positron_SimYieldTable_empty</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="570" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>electron_SimYieldTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="575" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>electron_SimYieldTable_from_positron_SimYieldTable</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="577" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>antiproton_SimYieldTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="583" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antiproton_SimYieldTable_DarkSUSY</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="585" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antiproton_SimYieldTable_empty</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="590" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>antideuteron_SimYieldTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="595" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antideuteron_SimYieldTable_DarkSUSY</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="597" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antideuteron_SimYieldTable_empty</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="602" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_FinalStates</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="611" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_FinalStates</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="613" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_InitialStates</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="619" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_InitialStates</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="621" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_DecayTable</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="633" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_DecayTable</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="635" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_LoopManagement</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="643" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_LoopManager</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="645" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_EventCount</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="652" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_EventCount</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="654" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_ChainEvent</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="661" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_GenerateChain</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="663" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_Histograms</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="671" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_Histograms</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="673" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_gammaSpectra</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="684" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_gammaSpectra</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="686" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_electronSpectra</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="696" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_electronSpectra</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="698" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_positronSpectra</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="708" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_positronSpectra</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="710" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_antiprotonSpectra</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="720" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_antiprotonSpectra</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="722" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>cascadeMC_antideuteronSpectra</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="732" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>cascadeMC_antideuteronSpectra</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="734" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>GA_Yield</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="758" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_AnnYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="760" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GA_DecayYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="768" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>dump_gammaSpectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="777" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>dump_gammaSpectrum</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="779" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>electron_Yield</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="788" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>electron_AnnYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="790" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>electron_DecayYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="798" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>positron_Yield</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="807" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>positron_AnnYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="809" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>positron_DecayYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="817" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>dump_electronSpectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="826" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>dump_electronSpectrum</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="828" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>dump_positronSpectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="834" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>dump_positronSpectrum</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="836" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>antiproton_Yield</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="845" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antiproton_AnnYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="847" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antiproton_DecayYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="855" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>dump_antiprotonSpectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="864" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>dump_antiprotonSpectrum</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="866" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>antideuteron_Yield</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="885" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antideuteron_AnnYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="887" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>antideuteron_DecayYield_General</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="895" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>dump_antideuteronSpectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="904" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>dump_antideuteronSpectrum</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="906" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>set_gamLike_GC_halo</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="915" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>set_gamLike_GC_halo</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="917" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_FermiLATdwarfs</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="963" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_FermiLATdwarfs_gamLike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="965" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_FermiGC</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="974" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_FermiGC_gamLike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="976" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_CTAGC</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="986" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_CTAGC_gamLike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="988" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_HESSGC</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="998" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_HESSGC_gamLike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1000" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_oh2</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1013" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_oh2_Simple</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1015" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_oh2_upperlimit</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1019" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>GalacticHalo</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1028" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GalacticHalo_gNFW</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1030" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>GalacticHalo_Einasto</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1034" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>LocalHalo</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1040" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>ExtractLocalMaxwellianHalo</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1042" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_rho0</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1048" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_rho0_lognormal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1050" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_vrot</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1056" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_vrot_gaussian</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1058" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_v0</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1064" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_v0_gaussian</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1066" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_vesc</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1072" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_vesc_gaussian</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1074" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>WIMP_properties</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1082" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>WIMP_properties</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1084" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>sigmav</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1115" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>sigmav_late_universe</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1118" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>sigmav_late_universe_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1125" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DDCalc_Couplings</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1140" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DDCalc_Couplings_WIMP_nucleon</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1144" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DDCalc_Couplings_NR_WCs</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1150" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DD_couplings</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1158" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_couplings_DarkSUSY_DS5</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1161" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_couplings_DarkSUSY_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1170" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_couplings_MicrOmegas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1180" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_couplings_ScalarSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1202" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_couplings_ScalarSingletDM_Z3</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1211" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_couplings_VectorSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1220" column="14" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DD_rel_WCs_flavscheme</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1230" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_rel_WCs_flavscheme_DMEFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1233" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_rel_WCs_flavscheme_DiracSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1240" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_rel_WCs_flavscheme_MajoranaSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1246" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DD_nonrel_WCs</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1255" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>NREO_couplings_from_parameters</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1259" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>NREO_from_DD_couplings</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1265" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_nonrel_WCs_flavscheme</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1272" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_nonrel_WCs_DiracSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1281" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DD_nonrel_WCs_MajoranaSingletDM_Z2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1287" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>sigma_SI_p</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1303" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>sigma_SI_vnqn_FermionicHiggsPortal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1304" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>sigma_SD_p</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1314" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>sigma_SD_vnqn_FermionicHiggsPortal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1315" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_SI_nuclear_parameters</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1323" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_sigmas_sigmal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1325" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_SD_nuclear_parameters</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1331" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_deltaq</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1333" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DirectDMNuisanceParameters</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1339" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>ExtractDirectDMNuisanceParameters</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1341" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_nuclear_parameters_ChPT</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1349" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_sigmapiN_Deltas_gTs_rs2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1351" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1ae677dec12658c224b1be35a7b4a83e83" prot="public" static="no">
        <name>DD_DECLARE_RESULT_FUNCTION</name>
        <param><defname>EXPERIMENT</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>  LONG_START_CAPABILITY(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME))                           \
  LONG_DECLARE_FUNCTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                           \
   CAT_3(EXPERIMENT,_Get,NAME), TYPE, 0)                                            \
  LONG_DEPENDENCY(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_Get,NAME),                              \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate), bool)                                                \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                                \
   CAT_3(EXPERIMENT,_Get,NAME), DD_Experiment, (needs_DDCalc), int, (const str&amp;))   \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                                \
   CAT_3(EXPERIMENT,_Get,NAME), <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(DD_,NAME), (needs_DDCalc), TYPE, (const int&amp;))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1358" column="11"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a3bb422b47bd5ba6bb679a6fbb8d5887c" prot="public" static="no">
        <name>DD_DECLARE_BIN_FUNCTION</name>
        <param><defname>EXPERIMENT</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>  LONG_START_CAPABILITY(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME))                           \
  LONG_DECLARE_FUNCTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                           \
   CAT_3(EXPERIMENT,_Get,NAME), std::vector&lt;double&gt;, 0)                             \
  LONG_DEPENDENCY(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_Get,NAME),                              \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate), bool)                                                \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                                \
   CAT_3(EXPERIMENT,_Get,NAME), DD_Experiment, (needs_DDCalc), int, (const str&amp;))   \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                                \
   CAT_3(EXPERIMENT,_Get,NAME), DD_Bins, (needs_DDCalc), int, (const int&amp;))         \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, CAT_3(EXPERIMENT,_,NAME),                                \
   CAT_3(EXPERIMENT,_Get,NAME), <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(DD_,NAME), (needs_DDCalc), TYPE, (const int&amp;,   \
   const int&amp;))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1369" column="11"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a75f99fde0306976b2f731c11f0ee310a" prot="public" static="no">
        <name>DD_DECLARE_EXPERIMENT</name>
        <param><defname>EXPERIMENT</defname></param>
        <initializer>  LONG_START_CAPABILITY(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate))                         \
  LONG_DECLARE_FUNCTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate),                         \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calc), bool, 0)                                                  \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate),                              \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calc), DD_Experiment, (needs_DDCalc), int, (const str&amp;))         \
  LONG_BACKEND_REQ(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate),                              \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calc), DD_CalcRates, (needs_DDCalc), void, (const int&amp;))         \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,int,Events)                                 \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,Background)                          \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,Signal)                              \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,SignalSI)                            \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,SignalSD)                            \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,int,Bins)                                   \
  DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,LogLikelihood)                       \
  DD_DECLARE_BIN_FUNCTION(EXPERIMENT,int,BinEvents)                                 \
  DD_DECLARE_BIN_FUNCTION(EXPERIMENT,double,BinBackground)                          \
  DD_DECLARE_BIN_FUNCTION(EXPERIMENT,double,BinSignal)                              \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1383" column="11"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a9f17e212093b33d78f1008833fc587bf" prot="public" static="no">
        <name>SET_BACKEND_OPTION</name>
        <param><defname>EXPERIMENT</defname></param>
        <param><defname>VERSIONS</defname></param>
        <initializer>  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calculate), <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Calc),    \
   VERSIONS, (needs_DDCalc))                                                        \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Events), <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetEvents),  \
   VERSIONS, (needs_DDCalc))                                                        \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Background),                          \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetBackground), VERSIONS, (needs_DDCalc))                        \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Signal), <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetSignal),  \
   VERSIONS, (needs_DDCalc))                                                        \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_SignalSI),                            \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetSignalSI), VERSIONS, (needs_DDCalc))                          \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_SignalSD),                            \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetSignalSD), VERSIONS, (needs_DDCalc))                          \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_Bins), <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetBins),      \
   VERSIONS, (needs_DDCalc))                                                        \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_LogLikelihood),                       \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetLogLikelihood), VERSIONS, (needs_DDCalc))                     \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_BinEvents),                           \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetBinEvents), VERSIONS, (needs_DDCalc))                         \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_BinBackground),                       \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetBinBackground), VERSIONS, (needs_DDCalc))                     \
  LONG_BACKEND_OPTION(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>, <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_BinSignal),                           \
   <ref refid="cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(EXPERIMENT,_GetBinSignal), VERSIONS, (needs_DDCalc))                         \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1402" column="11"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>capture_rate_Sun</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1486" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>capture_rate_Sun_const_xsec_DS5</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1488" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>capture_rate_Sun_const_xsec</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1498" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>capture_rate_Sun_const_xsec_capgen</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1513" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>capture_rate_Sun_vnqn</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1525" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>capture_rate_Sun_NREO</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1538" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>equilibration_time_Sun</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1551" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>equilibration_time_Sun</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1553" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>annihilation_rate_Sun</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1564" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>annihilation_rate_Sun</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1566" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>nuyield_ptr</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1574" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>nuyield_from_DS</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1576" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>energy_injection_spectrum</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1599" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>energy_injection_spectrum_ProcessCatalog</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1601" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_data</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1616" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_full</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1618" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_signal</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1631" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_signal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1633" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_bg</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1639" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_bg</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1641" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_loglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1647" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_loglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1649" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_bgloglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1655" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_bgloglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1657" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_pvalue</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1663" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_pvalue</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1665" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC22_nobs</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1671" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC22_nobs</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1673" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_data</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1679" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_full</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1681" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_signal</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1694" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_signal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1696" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_bg</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1702" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_bg</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1704" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_loglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1710" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_loglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1712" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_bgloglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1718" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_bgloglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1720" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_pvalue</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1726" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_pvalue</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1728" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WH_nobs</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1734" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WH_nobs</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1736" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_data</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1742" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_full</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1744" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_signal</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1757" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_signal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1759" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_bg</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1765" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_bg</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1767" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_loglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1773" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_loglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1775" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_bgloglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1781" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_bgloglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1783" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_pvalue</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1789" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_pvalue</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1791" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79WL_nobs</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1797" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79WL_nobs</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1799" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_data</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1805" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_full</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1807" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_signal</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1820" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_signal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1822" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_bg</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1828" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_bg</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1830" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_loglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1836" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_loglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1838" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_bgloglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1844" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_bgloglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1846" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_pvalue</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1852" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_pvalue</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1854" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79SL_nobs</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1860" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79SL_nobs</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1862" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IC79_loglike</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1868" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC79_loglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1870" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>IceCube_likelihood</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1881" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>IC_loglike</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1883" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>UnitTest_DarkBit</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1899" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>UnitTest_DarkBit</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1901" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DarkMatter_ID</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1912" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_AnnihilatingDM_mixture</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1914" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_DecayingDM_mixture</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1918" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_ScalarSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1922" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_VectorSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1930" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_MajoranaSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1934" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_DiracSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1938" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1942" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_EFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1947" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatter_ID_DMEFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1951" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>DarkMatterConj_ID</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1957" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_AnnihilatingDM_mixture</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1959" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_DecayingDM_mixture</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1963" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_ScalarSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1967" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_VectorSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1971" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_MajoranaSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1975" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_DiracSingletDM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1979" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_MSSM</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1983" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_EFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1987" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>DarkMatterConj_ID_DMEFT</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1991" column="18" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>QCDAxion_ZeroTemperatureMass</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1999" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>QCDAxion_ZeroTemperatureMass_Nuisance_lnL</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2001" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>QCDAxion_TemperatureDependence</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2007" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>QCDAxion_TemperatureDependence_Nuisance_lnL</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2009" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>QCDAxion_AxionPhotonConstant</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2015" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>QCDAxion_AxionPhotonConstant_Nuisance_lnL</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2017" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>ALPS1_signal_vac</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2023" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_ALPS1_signal_vac</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2025" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>ALPS1_signal_gas</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2031" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_ALPS1_signal_gas</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2033" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_ALPS1</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2039" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_ALPS1</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2041" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>CAST2007_signal_vac</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2049" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_CAST2007_signal_vac</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2051" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>CAST2017_signal_vac</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2057" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_CAST2017_signal_vac</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2059" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_CAST2007</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2065" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_CAST2007</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2067" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_CAST2017</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2074" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_CAST2017</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2076" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>Haloscope_signal</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2083" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_Haloscope_signal</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2085" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_Haloscope_ADMX1</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2093" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_Haloscope_ADMX1</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2095" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_Haloscope_ADMX2</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2102" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_Haloscope_ADMX2</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2104" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_Haloscope_RBF</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2111" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_Haloscope_RBF</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2113" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_Haloscope_UF</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2120" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_Haloscope_UF</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2122" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>RParameter</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2129" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_RParameter</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2131" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_RParameter</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2137" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_RParameter</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2139" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_WDVar_G117B15A</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2146" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_WDVar_G117B15A</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2148" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_WDVar_R548</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2154" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_WDVar_R548</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2156" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_WDVar_PG1351489</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2162" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_WDVar_PG1351489</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2164" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_WDVar_L192</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2170" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_WDVar_L192</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2172" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_SN1987A</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2178" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_SN1987A</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2180" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>PhotonFluence_SN1987A_Conversion</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2188" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_PhotonFluence_SN1987A_Conversion</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2190" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>PhotonFluence_SN1987A_Decay</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2196" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_PhotonFluence_SN1987A_Decay</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2198" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_HESS_GCMF</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2204" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_HESS_GCMF</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2206" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_XENON1T_Anomaly</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2212" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_XENON1T_Anomaly</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2214" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_XENON1T_Anomaly_NuisanceParameters</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2220" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_XENON1T_Anomaly_NuisanceParameters</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2222" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>lnL_XENON1T_DM_Anomaly</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2228" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_lnL_XENON1T_DM_Anomaly</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2230" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>AxionOscillationTemperature</initializer>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY5. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutrino yield function pointer and setup.</para>
<para>Annihilation rate of dark matter in the Sun (s^-1)</para>
<para>Equilibration time for capture and annihilation of dark matter in the Sun (s)</para>
<para>Fraction of the relic density constituted by the DM candidate under investigation.</para>
<para>Contributions of different annihilation channels to the relic density.</para>
<para>Xf = m_WIMP/T_freezeout.</para>
<para>Get oh2 and Xf simultaneously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2237" column="11" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>calc_AxionOscillationTemperature</initializer>
        <briefdescription>
<para>General Boltzmann solver from DarkSUSY, using arbitrary Weff. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture rate of dark matter with NREO method (s^-1), using backend Captn&apos; General.</para>
<para>Alternative function for the above: Capture rate of dark matter with a constant cross section (s^-1), using backend Captn&apos; General.</para>
<para>Translation of DDcalc couplings into NREO couplings.</para>
<para>Copying of NREO model parameters into NREO_DD_nucleon_couplings object.</para>
<para>Process Catalogue from DarkSUSY6 (MSSM)</para>
<para>Process Catalogue from DarkSUSY5.</para>
<para>Routine for computing axion energy density today from vacuum misalignment, assuming no axion decays.</para>
<para>Routine for cross checking relic density results, using MicrOmegas.</para>
<para>Routine for cross checking relic density results, using DarkSUSY5. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="2239" column="13" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a6278a21500f3c9887db073e44af2a40e" prot="public" static="no" mutable="no">
        <type>ds6</type>
        <definition>double double ds5</definition>
        <argsstring></argsstring>
        <name>ds5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="160" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a1251a7fdc167ec319e15e139567c0fc9" prot="public" static="no" mutable="no">
        <type>ds6</type>
        <definition>unsigned WIMPprops int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="160" column="12" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1ab006a0ec5bd4d357e278ead76b5ba786" prot="public" static="no" mutable="no">
        <type>ds6 const str</type>
        <definition>double ScalarSingletDM_Z2_running</definition>
        <argsstring></argsstring>
        <name>ScalarSingletDM_Z2_running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="168" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1aebfd36d4d1f21db6ba3bbacba0122284" prot="public" static="no" mutable="no">
        <type>ds6 const str</type>
        <definition>double ScalarSingletDM_Z3</definition>
        <argsstring></argsstring>
        <name>ScalarSingletDM_Z3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="169" column="20" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a2b33b385334ca971400acfb92fd63b58" prot="public" static="no" mutable="no">
        <type>ds6 const str</type>
        <definition>double ScalarSingletDM_Z3_running</definition>
        <argsstring></argsstring>
        <name>ScalarSingletDM_Z3_running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="169" column="39" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1ac844f7309cb44bb2c99ce389589b9fc3" prot="public" static="no" mutable="no">
        <type>ds6 const str</type>
        <definition>gimmemicro gimmemicro gimmemicro DiracSingletDM_Z2</definition>
        <argsstring></argsstring>
        <name>DiracSingletDM_Z2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="170" column="20" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a8050dc1397179a5c91f57027b8dea113" prot="public" static="no" mutable="no">
        <type>ds6 const str</type>
        <definition>gimmemicro gimmemicro gimmemicro MajoranaSingletDM_Z2</definition>
        <argsstring></argsstring>
        <name>MajoranaSingletDM_Z2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="170" column="38" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1afcf46deace926a2412133a922d823c0e" prot="public" static="no" mutable="no">
        <type>ds6 const str</type>
        <definition>double VectorSingletDM_Z2</definition>
        <argsstring></argsstring>
        <name>VectorSingletDM_Z2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="170" column="59" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a4b9cd6227a99d0957d5de58a2bff17d8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>double double const double const double const double ds6</definition>
        <argsstring></argsstring>
        <name>ds6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="198" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a45c855d65dd0e2b57b08024500ff9159" prot="public" static="no" mutable="no">
        <type>const str</type>
        <definition>double</definition>
        <argsstring></argsstring>
        <name>double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="210" column="12" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1ac9c84fa68bbad002983e35ce3663c686" prot="public" static="no" mutable="no">
        <type></type>
        <definition>void</definition>
        <argsstring></argsstring>
        <name>void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="244" column="10" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1af200bd73f7829991b227af13e1b688ac" prot="public" static="no" mutable="no">
        <type>int double(double(&amp;)(double &amp;) double double int int int &amp;</type>
        <definition>obsname double double const nuisance char const parameters double char int const parameters const nuisance double const parameters const parameters const parameters const parameters const parameters const parameters const parameters const parameters double const parameters double const parameters double const parameters double const parameters const parameters const parameters const parameters const parameters const parameters * BACKEND_OPTION</definition>
        <argsstring>((DarkSUSY_MSSM),(ds6)) BACKEND_OPTION((DarkSUSY_generic_wimp)</argsstring>
        <name>BACKEND_OPTION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="246" column="7" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a0280721f97d16edeedc2e9dcc805384d" prot="public" static="no" mutable="no">
        <type>gimmemicro gimmemicro gimmemicro</type>
        <definition>gimmemicro gimmemicro gimmemicro MSSM63atMGUT</definition>
        <argsstring></argsstring>
        <name>MSSM63atMGUT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="324" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1af0ff00263558019a3e369c7f12530098" prot="public" static="no" mutable="no">
        <type>gimmemicro gimmemicro gimmemicro</type>
        <definition>double ScalarSingletDM_Z2</definition>
        <argsstring></argsstring>
        <name>ScalarSingletDM_Z2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="325" column="20" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1af8f631b037dab8a219996a28ce6ddee8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>unsigned WIMPprops gimmemicro</definition>
        <argsstring></argsstring>
        <name>gimmemicro</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="357" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1abd6cf52ec6a7eef5cfd4b6857b3eae02" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gamLike</definition>
        <argsstring></argsstring>
        <name>gamLike</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="920" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="920" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a6096aef6c547dcccd545a0000a5c1edc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>spinwimpx2</definition>
        <argsstring></argsstring>
        <name>spinwimpx2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1109" column="4" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a8850638f0e6a7cd2788f61292bf9fa7b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>double NEW_CAPABILITY</definition>
        <argsstring></argsstring>
        <name>NEW_CAPABILITY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1109" column="15" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a0bfd471a410e68f3bf27da9390c5e6e8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>spinwimpx2_generic</definition>
        <argsstring></argsstring>
        <name>spinwimpx2_generic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1109" column="30" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a1460193fbc516030ad31f9ea566cd8fd" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned WIMP_properties</definition>
        <argsstring></argsstring>
        <name>WIMP_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1109" column="63" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1af9a28594254748530395aaf3ec80d6ad" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double MSSM63atQ</definition>
        <argsstring></argsstring>
        <name>MSSM63atQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1190" column="8" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a2675956a3bbf2ba2c665530405abaffe" prot="public" static="no" mutable="no">
        <type></type>
        <definition>sigma_SI_p</definition>
        <argsstring></argsstring>
        <name>sigma_SI_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1296" column="4" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a019b71af0fb098a66ea99f1d6fd10d48" prot="public" static="no" mutable="no">
        <type></type>
        <definition>sigma_SI_p_simple</definition>
        <argsstring></argsstring>
        <name>sigma_SI_p_simple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1296" column="30" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a664f61dec438d1fae80433a4b7d648b9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>double DD_couplings</definition>
        <argsstring></argsstring>
        <name>DD_couplings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1296" column="56" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a0448f8b25bacc9b1af986a281a3ba17e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>double DM_nucleon_couplings</definition>
        <argsstring></argsstring>
        <name>DM_nucleon_couplings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1296" column="69" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1adadae956170b3164306f274977eb9826" prot="public" static="no" mutable="no">
        <type></type>
        <definition>double mwimp</definition>
        <argsstring></argsstring>
        <name>mwimp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1296" column="90" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a3a6d16a216e60f6c5d88c9d4219ac9fb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sigma_SD_p</definition>
        <argsstring></argsstring>
        <name>sigma_SD_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1298" column="4" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a34fcbb28409eca21c62e361a7bab20a8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sigma_SD_p_simple</definition>
        <argsstring></argsstring>
        <name>sigma_SD_p_simple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1298" column="30" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a03e04b1bb772ffbfdcae4680c8a2cc76" prot="public" static="no" mutable="no">
        <type></type>
        <definition>const double cg</definition>
        <argsstring></argsstring>
        <name>cg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1519" column="5" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1a3572f5dbeb1809fecceeb90d8ea57c1f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>const double(&amp;const const double double ds</definition>
        <argsstring></argsstring>
        <name>ds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1586" column="6" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DarkBit__rollcall_8hpp_1aa26ab8e3a07aa766f8c22d6b3e3ab8c8" prot="public" static="no" mutable="no">
        <type>const char const double const double</type>
        <definition>const char const double const double nuyield_function_pointer</definition>
        <argsstring></argsstring>
        <name>nuyield_function_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1687" column="40" bodyfile="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" bodystart="1686" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_OPTION</definition>
        <argsstring>((DarkSUSY, 5.1.3),(ds5)) START_CAPABILITY BACKEND_OPTION((DarkSUSY_MSSM</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(DarkSUSY, 5.1.3)</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <briefdescription>
<para>Make sure LocalHalo model is initialized in DarkSUSY6. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="123" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1ab32a61a7028348d0dab58367b5423adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ds6</type>
        <definition>ds6 BACKEND_OPTION</definition>
        <argsstring>((DarkSUSY_generic_wimp, 6.1.1, 6.2.2, 6.2.5),(ds6)) START_CAPABILITY BACKEND_REQ(DS5particle_code</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(DarkSUSY_generic_wimp, 6.1.1, 6.2.2, 6.2.5)</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="139" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a62351e25b216879cac10225336898991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const str &amp;</type>
        <definition>const str &amp; BACKEND_OPTION</definition>
        <argsstring>((DarkSUSY_MSSM, 6.1.1, 6.2.2, 6.2.5),(ds6)) START_CAPABILITY BACKEND_REQ(dsanwx</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(DarkSUSY_MSSM, 6.1.1, 6.2.2, 6.2.5)</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="199" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a25fd7e67eae5bd4da77d0959c8612197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dsrdcom,(ds6), void,()) BACKEND_REQ(dsrdstart</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsrdcom</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="243" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a2dced8d7f48e36caff52c9963513bb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int double(&amp;</type>
        <definition>int double(&amp; double</definition>
        <argsstring>(&amp;)[1000], int &amp;, double(&amp;)[1000]</argsstring>
        <name>double</name>
        <param>
          <type>&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="244" column="18"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1ab541b2de9d71c0a8bd460e04b9b2660f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dsrdthlim,(ds5), void,()) BACKEND_REQ(dsrdtab</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsrdthlim</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="258" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a1c5b1f781cad5574d551659c640b17e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double double int &amp;</type>
        <definition>double double int &amp; BACKEND_REQ</definition>
        <argsstring>(dsrdeqn,(ds5), void,(double(*)(double &amp;), double &amp;, double &amp;, double &amp;, double &amp;, int &amp;)) BACKEND_REQ(dsrdwintp</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsrdeqn</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(double(*)(double &amp;), double &amp;, double &amp;, double &amp;, double &amp;, int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="260" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a44df113e90559a976f7375ba314a0bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double double int double &amp;</type>
        <definition>double double int double &amp; BACKEND_REQ</definition>
        <argsstring>(DS5particle_code,(ds5), int,(const str &amp;)) BACKEND_OPTION((DarkSUSY</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>DS5particle_code</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>(const str &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="262" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a3b3eff655d1c8f9fc07eda1e80e07e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dsrdomega,(ds5), double,(int &amp;, int &amp;, double &amp;, int &amp;, int &amp;, int &amp;)) BACKEND_OPTION((DarkSUSY</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsrdomega</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;, int &amp;, double &amp;, int &amp;, int &amp;, int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="281" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1af9bf939f5231d654aea3a212fddf6f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(oh2,(gimmemicro), double,(double *, int, double)) BACKEND_OPTION((MicrOmegas_MSSM)</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>oh2</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(double *, int, double)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="317" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a66e43f2c84f2ccda1a7f972121343f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gimmemicro</type>
        <definition>gimmemicro BACKEND_OPTION</definition>
        <argsstring>((MicrOmegas_ScalarSingletDM_Z2),(gimmemicro)) BACKEND_OPTION((MicrOmegas_ScalarSingletDM_Z3)</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(MicrOmegas_ScalarSingletDM_Z2)</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="319" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a0254de03f2c47566e270a53ebb49575b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gimmemicro gimmemicro</type>
        <definition>gimmemicro gimmemicro BACKEND_OPTION</definition>
        <argsstring>((MicrOmegas_VectorSingletDM_Z2),(gimmemicro)) BACKEND_OPTION((MicrOmegas_MajoranaSingletDM_Z2)</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(MicrOmegas_VectorSingletDM_Z2)</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="321" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a19e06375d9b132a4816b797ed5cae339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gimmemicro gimmemicro gimmemicro</type>
        <definition>gimmemicro gimmemicro gimmemicro BACKEND_OPTION</definition>
        <argsstring>((MicrOmegas_DiracSingletDM_Z2),(gimmemicro)) ALLOW_MODELS(MSSM63atQ</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(MicrOmegas_DiracSingletDM_Z2)</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="323" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(momegas_print_channels,(), double,(double, double, double, int, FILE *)) START_CAPABILITY BACKEND_REQ(get_oneChannel</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>momegas_print_channels</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(double, double, double, int, FILE *)</type>
        </param>
        <briefdescription>
<para>Contributions of semi-annihilation to the relic density. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="347" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a8c9181da94d0550375552eaa434d8929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char char char char *</type>
        <definition>char char char char * BACKEND_OPTION</definition>
        <argsstring>((MicrOmegas_ScalarSingletDM_Z3),(gimmemicro)) START_CAPABILITY BACKEND_REQ(vSigma</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(MicrOmegas_ScalarSingletDM_Z3)</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="358" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1aaf4880ca7002f181d8aa49fbbbee7059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dssigmav,(ds5), double,(int &amp;)) BACKEND_REQ(dsIBffdxdy</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dssigmav</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="406" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a0947dafa0a9b16e8e125e1c9f7917fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int double double &amp;</type>
        <definition>int double double &amp; BACKEND_REQ</definition>
        <argsstring>(dsIBhhdxdy,(ds5), double,(int &amp;, double &amp;, double &amp;)) BACKEND_REQ(dsIBwhdxdy</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsIBhhdxdy</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;, double &amp;, double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="408" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a2743e58ff38a4033c529cb306e300281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int double double int double double &amp;</type>
        <definition>int double double int double double &amp; BACKEND_REQ</definition>
        <argsstring>(dsIBwwdxdy,(ds5), double,(int &amp;, double &amp;, double &amp;)) BACKEND_OPTION((DarkSUSY</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsIBwwdxdy</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;, double &amp;, double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="410" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a79ceb8106329509c53f6093eef42d184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dssigmav0,(ds6), double,(int &amp;, int &amp;)) BACKEND_REQ(dssigmav0tot</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dssigmav0</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;, int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="424" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a36a29aeaf79575143ab18b2290d8380a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dsIBffdxdy,(ds6), double,(int &amp;, double &amp;, double &amp;)) BACKEND_REQ(dsIBhhdxdy</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsIBffdxdy</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;, double &amp;, double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="426" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1af634b8d40e1fa01db9c9e9ee037fb10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int double double &amp;</type>
        <definition>int double double &amp; BACKEND_REQ</definition>
        <argsstring>(dsIBwhdxdy,(ds6), double,(int &amp;, double &amp;, double &amp;)) BACKEND_REQ(dsIBwwdxdy</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsIBwhdxdy</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int &amp;, double &amp;, double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="428" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1ac344680b4d5bd5fd3c9959cf67a39a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(CH_Sigma_V,(), double,(str &amp;, std::vector&lt; str &gt; &amp;, std::vector&lt; str &gt; &amp;, double &amp;, const DecayTable &amp;)) START_CAPABILITY START_CAPABILITY START_CAPABILITY BACKEND_REQ(dsanyield_sim</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>CH_Sigma_V</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(str &amp;, std::vector&lt; str &gt; &amp;, std::vector&lt; str &gt; &amp;, double &amp;, const DecayTable &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Information about the nature of the DM process in question (i.e. decay or annihilation) to use the correct scaling in terms of the DM density, phase space, etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="500" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a8ceb9f7fea053c63b8c3d252bba82280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dshayield,(ds5), double,(double &amp;, double &amp;, int &amp;, int &amp;, int &amp;)) BACKEND_OPTION((DarkSUSY</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dshayield</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(double &amp;, double &amp;, int &amp;, int &amp;, int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="540" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a9bc296ae1e775efc179ec990ae0a92fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dNdE,(), double,(double, double, int, int)) START_CAPABILITY BACKEND_REQ(dsanyield_sim</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dNdE</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(double, double, int, int)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="545" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1af6174b8fea3848301f1b44e7f5e3e211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(dsanyield_sim,(), double,(double &amp;, double &amp;, int &amp;, char *, int &amp;, int &amp;, int &amp;)) START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY BACKEND_REQ(set_halo_profile</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>dsanyield_sim</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(double &amp;, double &amp;, int &amp;, char *, int &amp;, int &amp;, int &amp;)</type>
        </param>
        <briefdescription>
<para>Function for retrieving list of final states for cascade decays. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for determining the list of initial states for cascade decays Function setting up the decay table used in decay chains Loop manager for cascade decays Event counter for cascade decays Function for generating decay chains Function responsible for histogramming and evaluating end conditions for event loop Function requesting and returning gamma ray spectra from cascade decays. Function requesting and returning electron spectra from cascade decays. Function requesting and returning positron spectra from cascade decays. Function requesting and returning antiproton spectra from cascade decays. Function requesting and returning antideuteron spectra from cascade decays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="599" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a18a43a74b2c50ff1c7c0e7b820bf2be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(lnL,(gamLike), double,(int, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;)) START_CAPABILITY BACKEND_REQ(lnL</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>lnL</type>
        </param>
        <param>
          <type>(gamLike)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(int, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="970" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a803688428531261eac7fd5d2d3c4dea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QUICK_FUNCTION</definition>
        <argsstring>(DarkBit, mwimp, NEW_CAPABILITY, mwimp_generic, double,(),(WIMP_properties, WIMPprops)) QUICK_FUNCTION(DarkBit</argsstring>
        <name>QUICK_FUNCTION</name>
        <param>
          <type>DarkBit</type>
        </param>
        <param>
          <type>mwimp</type>
        </param>
        <param>
          <type>NEW_CAPABILITY</type>
        </param>
        <param>
          <type>mwimp_generic</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(WIMP_properties, WIMPprops)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1106" column="3"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1afcc7e18afbe88d70561fcc4b4b25f709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned WIMPprops</type>
        <definition>unsigned WIMPprops QUICK_FUNCTION</definition>
        <argsstring>(DarkBit, wimp_sc, NEW_CAPABILITY, wimp_sc_generic, bool,(),(WIMP_properties, WIMPprops)) START_CAPABILITY BACKEND_REQ(calcSpectrum</argsstring>
        <name>QUICK_FUNCTION</name>
        <param>
          <type>DarkBit</type>
        </param>
        <param>
          <type>wimp_sc</type>
        </param>
        <param>
          <type>NEW_CAPABILITY</type>
        </param>
        <param>
          <type>wimp_sc_generic</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(WIMP_properties, WIMPprops)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1112" column="3"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1af40fd8240e6020cc547dfc1c433530ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned WIMPprops double double double double double double int *</type>
        <definition>unsigned WIMPprops double double double double double double int * BACKEND_OPTION</definition>
        <argsstring>((MicrOmegas_MSSM),(gimmemicro)) BACKEND_OPTION((MicrOmegas_ScalarSingletDM_Z2)</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(MicrOmegas_MSSM)</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1128" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a3577bb3fd1693106b4c93e97a2588b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(get_DD_couplings,(ds5), std::vector&lt; double &gt;,()) BACKEND_OPTION((DarkSUSY</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>get_DD_couplings</type>
        </param>
        <param>
          <type>(ds5)</type>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1163" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1aa2e4022a0da2df2bbbae78573b5b3dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(get_DD_couplings,(ds6), std::vector&lt; double &gt;,()) BACKEND_OPTION((DarkSUSY_MSSM</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>get_DD_couplings</type>
        </param>
        <param>
          <type>(ds6)</type>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1172" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1ab1ac3d0bdb3eceb56535ed63a894aa36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(nucleonAmplitudes,(gimmemicro), int,(double(*)(double, double, double, double), double *, double *, double *, double *)) BACKEND_REQ(FeScLoop</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>nucleonAmplitudes</type>
        </param>
        <param>
          <type>(gimmemicro)</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>(double(*)(double, double, double, double), double *, double *, double *, double *)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1182" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1aa35bba2cfd30d26fd58a806a9540dce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ALLOW_MODEL_DEPENDENCE</definition>
        <argsstring>(nuclear_params_fnq, MSSM63atQ, ScalarSingletDM_Z2, ScalarSingletDM_Z2_running, ScalarSingletDM_Z3, ScalarSingletDM_Z3_running, VectorSingletDM_Z2, DMEFT) MODEL_GROUP(group2</argsstring>
        <name>ALLOW_MODEL_DEPENDENCE</name>
        <param>
          <type>nuclear_params_fnq</type>
        </param>
        <param>
          <type>MSSM63atQ</type>
        </param>
        <param>
          <type>ScalarSingletDM_Z2</type>
        </param>
        <param>
          <type>ScalarSingletDM_Z2_running</type>
        </param>
        <param>
          <type>ScalarSingletDM_Z3</type>
        </param>
        <param>
          <type>ScalarSingletDM_Z3_running</type>
        </param>
        <param>
          <type>VectorSingletDM_Z2</type>
        </param>
        <param>
          <type>DMEFT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1185" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a24cb7bcdb231454ecda9c7b2712ba372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(get_NR_WCs_flav,(), NREO_DM_nucleon_couplings,(map_str_dbl &amp;, double &amp;, int &amp;, std::string &amp;, map_str_dbl &amp;)) QUICK_FUNCTION(DarkBit</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>get_NR_WCs_flav</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>NREO_DM_nucleon_couplings</type>
        </param>
        <param>
          <type>(map_str_dbl &amp;, double &amp;, int &amp;, std::string &amp;, map_str_dbl &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1277" column="7"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a6f09b650c885be348186847b5581141d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QUICK_FUNCTION</definition>
        <argsstring>(DarkBit, sigma_SI_n, NEW_CAPABILITY, sigma_SI_n_simple, double,(),(DD_couplings, DM_nucleon_couplings),(mwimp, double)) QUICK_FUNCTION(DarkBit</argsstring>
        <name>QUICK_FUNCTION</name>
        <param>
          <type>DarkBit</type>
        </param>
        <param>
          <type>sigma_SI_n</type>
        </param>
        <param>
          <type>NEW_CAPABILITY</type>
        </param>
        <param>
          <type>sigma_SI_n_simple</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(DD_couplings, DM_nucleon_couplings)</type>
        </param>
        <param>
          <type>(mwimp, double)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1297" column="3"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double double</type>
        <definition>double double QUICK_FUNCTION</definition>
        <argsstring>(DarkBit, sigma_SD_n, NEW_CAPABILITY, sigma_SD_n_simple, double,(),(DD_couplings, DM_nucleon_couplings),(mwimp, double)) START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY DD_DECLARE_EXPERIMENT(XENON100_2012) DD_DECLARE_EXPERIMENT(XENON1T_2017) DD_DECLARE_EXPERIMENT(XENON1T_2018) DD_DECLARE_EXPERIMENT(DARWIN) DD_DECLARE_EXPERIMENT(LUX_2013) DD_DECLARE_EXPERIMENT(LUX_2015) DD_DECLARE_EXPERIMENT(LUX_2016) DD_DECLARE_EXPERIMENT(LZ) DD_DECLARE_EXPERIMENT(PandaX_2016) DD_DECLARE_EXPERIMENT(PandaX_2017) DD_DECLARE_EXPERIMENT(DarkSide_50) DD_DECLARE_EXPERIMENT(DarkSide_50_S2) DD_DECLARE_EXPERIMENT(CRESST_II) DD_DECLARE_EXPERIMENT(CRESST_III) DD_DECLARE_EXPERIMENT(SuperCDMS_2014) DD_DECLARE_EXPERIMENT(CDMSlite) DD_DECLARE_EXPERIMENT(SIMPLE_2014) DD_DECLARE_EXPERIMENT(PICO_2L) DD_DECLARE_EXPERIMENT(PICO_60_F) DD_DECLARE_EXPERIMENT(PICO_60_I) DD_DECLARE_EXPERIMENT(PICO_60) DD_DECLARE_EXPERIMENT(PICO_60_2017) DD_DECLARE_EXPERIMENT(PICO_60_2019) DD_DECLARE_EXPERIMENT(PICO_500) START_CAPABILITY BACKEND_REQ(cap_Sun_v0q0_isoscalar</argsstring>
        <name>QUICK_FUNCTION</name>
        <param>
          <type>DarkBit</type>
        </param>
        <param>
          <type>sigma_SD_n</type>
        </param>
        <param>
          <type>NEW_CAPABILITY</type>
        </param>
        <param>
          <type>sigma_SD_n_simple</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(DD_couplings, DM_nucleon_couplings)</type>
        </param>
        <param>
          <type>(mwimp, double)</type>
        </param>
        <briefdescription>
<para>Capture rate of regular dark matter in the Sun (no v-dependent or q-dependent cross-sections) (s^-1). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1299" column="3"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1ae7f7b1a68551437a7aea2a47d5f4f5c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(cap_Sun_v0q0_isoscalar,(cg), void,(const double &amp;, const double &amp;, const double &amp;, double &amp;, double &amp;)) BACKEND_REQ(cap_sun_saturation</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>cap_Sun_v0q0_isoscalar</type>
        </param>
        <param>
          <type>(cg)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(const double &amp;, const double &amp;, const double &amp;, double &amp;, double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1518" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1aee12a28e31f5e57cf46b94ae467feacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; BACKEND_OPTION</definition>
        <argsstring>((CaptnGeneral),(cg)) BACKEND_REQ(cap_Sun_vnqn_isoscalar</argsstring>
        <name>BACKEND_OPTION</name>
        <param>
          <type>(CaptnGeneral)</type>
        </param>
        <param>
          <type>(cg)</type>
        </param>
        <briefdescription>
<para>Capture rate of dark matter with q^n or v^n cross section (s^-1), using backend Captn&apos; General. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1520" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a2c84fc48a21d2c6636414d3d0fd93a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double const double const double const int const int const int const double double &amp;</type>
        <definition>const double const double const double const int const int const int const double double &amp; BACKEND_REQ</definition>
        <argsstring>(cap_sun_saturation,(cg), double,(const double &amp;)) BACKEND_OPTION((CaptnGeneral</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>cap_sun_saturation</type>
        </param>
        <param>
          <type>(cg)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(const double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1532" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a1c7c9b363250f37b79718233e9ae1ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(captn_NREO,(cg), void,(const double &amp;, const double &amp;, const int &amp;, double &amp;)) BACKEND_REQ(cap_sun_saturation</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>captn_NREO</type>
        </param>
        <param>
          <type>(cg)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(const double &amp;, const double &amp;, const int &amp;, double &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1540" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1ac391045ee447e21a946ab46143d2e9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; BACKEND_REQ</definition>
        <argsstring>(captn_populate_array,(cg), void,(const double &amp;, const int &amp;, const int &amp;)) BACKEND_OPTION((CaptnGeneral</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>captn_populate_array</type>
        </param>
        <param>
          <type>(cg)</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(const double &amp;, const int &amp;, const int &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1542" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a833bfbb49eb9c7442af95f60108106f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ALLOW_MODELS</definition>
        <argsstring>(MSSM63atQ, ScalarSingletDM_Z2_running, ScalarSingletDM_Z3_running, MajoranaSingletDM_Z2, DiracSingletDM_Z2, VectorSingletDM_Z2, NREO_scalarDM, NREO_MajoranaDM, NREO_DiracDM, DMEFT) BACKEND_REQ(DS_nuyield_setup</argsstring>
        <name>ALLOW_MODELS</name>
        <param>
          <type>MSSM63atQ</type>
        </param>
        <param>
          <type>ScalarSingletDM_Z2_running</type>
        </param>
        <param>
          <type>ScalarSingletDM_Z3_running</type>
        </param>
        <param>
          <type>MajoranaSingletDM_Z2</type>
        </param>
        <param>
          <type>DiracSingletDM_Z2</type>
        </param>
        <param>
          <type>VectorSingletDM_Z2</type>
        </param>
        <param>
          <type>NREO_scalarDM</type>
        </param>
        <param>
          <type>NREO_MajoranaDM</type>
        </param>
        <param>
          <type>NREO_DiracDM</type>
        </param>
        <param>
          <type>DMEFT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1578" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a5f9b1a92f6ba25ed181635e89b72e3ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double(&amp;const const double double</type>
        <definition>const double(&amp;const const double double BACKEND_REQ</definition>
        <argsstring>(nuyield,(ds), double,(const double &amp;, const int &amp;, void *&amp;)) BACKEND_REQ(get_DS_neutral_h_decay_channels</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>nuyield</type>
        </param>
        <param>
          <type>(ds)</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>(const double &amp;, const int &amp;, void *&amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1589" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a86cdffe2811ae09d14151f65c720ebb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double(&amp;const const double double</type>
        <definition>const double(&amp;const const double double BACKEND_REQ</definition>
        <argsstring>(get_DS_charged_h_decay_channels,(ds), std::vector&lt; std::vector&lt; str &gt; &gt;,()) START_CAPABILITY ALLOW_MODELS(AnnihilatingDM_general</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>get_DS_charged_h_decay_channels</type>
        </param>
        <param>
          <type>(ds)</type>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; str &gt; &gt;</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1591" column="5"/>
      </memberdef>
      <memberdef kind="function" id="DarkBit__rollcall_8hpp_1a9a0b240a82835b55c3c18ecfd068b7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BACKEND_REQ</definition>
        <argsstring>(nubounds,(), void,(const char &amp;, const double &amp;, const double &amp;, nuyield_function_pointer, double &amp;, double &amp;, int &amp;, double &amp;, double &amp;, const int &amp;, const double &amp;, const int &amp;, const bool &amp;, const double &amp;, const double &amp;, void *&amp;, const bool &amp;)) START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY START_CAPABILITY BACKEND_REQ(nubounds</argsstring>
        <name>BACKEND_REQ</name>
        <param>
          <type>nubounds</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>(const char &amp;, const double &amp;, const double &amp;, nuyield_function_pointer, double &amp;, double &amp;, int &amp;, double &amp;, double &amp;, const int &amp;, const double &amp;, const int &amp;, const bool &amp;, const double &amp;, const double &amp;, void *&amp;, const bool &amp;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp" line="1623" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Rollcall header for module DarkBit</para>
<para>Compile-time registration of available obser- vables and likelihoods, as well as their dependencies.</para>
<para>Add to this if you want to add an observable or likelihood to this module.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Christoph Weniger (<ulink url="mailto:c.weniger@uva.nl">c.weniger@uva.nl</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Jul - 2015 May</para>
</simplesect>
<simplesect kind="author"><para>Torsten Bringmann (<ulink url="mailto:torsten.bringmann@fys.uio.no">torsten.bringmann@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Jun </para>
</simplesect>
<simplesect kind="date"><para>2014 Mar </para>
</simplesect>
<simplesect kind="date"><para>2019 May</para>
</simplesect>
<simplesect kind="author"><para>Lars A. Dal (<ulink url="mailto:l.a.dal@fys.uio.no">l.a.dal@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Mar, Sep, Oct</para>
</simplesect>
<simplesect kind="author"><para>Christopher Savage (<ulink url="mailto:chris@savage.name">chris@savage.name</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Oct, Dec </para>
</simplesect>
<simplesect kind="date"><para>2015 June</para>
</simplesect>
<simplesect kind="author"><para>Antje Putze (<ulink url="mailto:antje.putze@lapth.cnrs.fr">antje.putze@lapth.cnrs.fr</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Jan</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pscott@imperial.ac.uk">pscott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Mar </para>
</simplesect>
<simplesect kind="date"><para>2015 Mar, Aug 2018 Sep</para>
</simplesect>
<simplesect kind="author"><para>Sebastian Wild (<ulink url="mailto:sebastian.wild@ph.tum.de">sebastian.wild@ph.tum.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Aug, 2017 Oct</para>
</simplesect>
<simplesect kind="author"><para>Felix Kahlhoefer (<ulink url="mailto:felix.kahlhoefer@desy.de">felix.kahlhoefer@desy.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 August</para>
</simplesect>
<simplesect kind="author"><para>Ankit Beniwal (<ulink url="mailto:ankit.beniwal@uclouvain.be">ankit.beniwal@uclouvain.be</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Oct </para>
</simplesect>
<simplesect kind="date"><para>2018 Jan, Aug </para>
</simplesect>
<simplesect kind="date"><para>2020 Dec</para>
</simplesect>
<simplesect kind="author"><para>Aaron Vincent (<ulink url="mailto:aaron.vincent@cparc.ca">aaron.vincent@cparc.ca</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2017 Sept</para>
</simplesect>
<simplesect kind="author"><para>Sanjay Bloor (<ulink url="mailto:sanjay.bloor12@imperial.ac.uk">sanjay.bloor12@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2017 Dec </para>
</simplesect>
<simplesect kind="date"><para>2018 Aug, Sep, Oct </para>
</simplesect>
<simplesect kind="date"><para>2020 Feb, May</para>
</simplesect>
<simplesect kind="author"><para>Sebastian Hoof (<ulink url="mailto:s.hoof15@imperial.ac.uk">s.hoof15@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Oct </para>
</simplesect>
<simplesect kind="date"><para>2017 Feb, Sep, Dec </para>
</simplesect>
<simplesect kind="date"><para>2018 Jan, Mar, Apr </para>
</simplesect>
<simplesect kind="date"><para>2019 Mar, Apr, Jun</para>
</simplesect>
<simplesect kind="author"><para>Patrick Stöcker (<ulink url="mailto:stoecker@physik.rwth-aachen.de">stoecker@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Sep </para>
</simplesect>
<simplesect kind="date"><para>2021 Jan, Sep</para>
</simplesect>
<simplesect kind="author"><para>Anders Kvellestad (<ulink url="mailto:anders.kvellestad@fys.uio.no">anders.kvellestad@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Feb</para>
</simplesect>
<simplesect kind="author"><para>Jonathan Cornell (<ulink url="mailto:jonathancornell@weber.edu">jonathancornell@weber.edu</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 - 2020</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physik.rwth-aachen.de">gonzalo@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Sep</para>
</simplesect>
<simplesect kind="author"><para>Iñigo Saez Casares (<ulink url="mailto:inigo.saez_casares@ens-paris-saclay.fr">inigo.saez_casares@ens-paris-saclay.fr</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 - 2020 </para>
</simplesect>
<simplesect kind="date"><para>2021 April, May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Rollcall<sp/>header<sp/>for<sp/>module<sp/>DarkBit</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>Compile-time<sp/>registration<sp/>of<sp/>available<sp/>obser-</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>vables<sp/>and<sp/>likelihoods,<sp/>as<sp/>well<sp/>as<sp/>their</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>dependencies.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>Add<sp/>to<sp/>this<sp/>if<sp/>you<sp/>want<sp/>to<sp/>add<sp/>an<sp/>observable</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>or<sp/>likelihood<sp/>to<sp/>this<sp/>module.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Christoph<sp/>Weniger</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c.weniger@uva.nl)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Jul<sp/>-<sp/>2015<sp/>May</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\author<sp/>Torsten<sp/>Bringmann</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(torsten.bringmann@fys.uio.no)</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Jun</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Mar</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>May</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>\author<sp/>Lars<sp/>A.<sp/>Dal</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(l.a.dal@fys.uio.no)</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Mar,<sp/>Sep,<sp/>Oct</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/>\author<sp/>Christopher<sp/>Savage</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(chris@savage.name)</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Oct,<sp/>Dec</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>June</highlight></codeline>
<codeline lineno="36"><highlight class="comment">///</highlight></codeline>
<codeline lineno="37"><highlight class="comment">///<sp/><sp/>\author<sp/>Antje<sp/>Putze</highlight></codeline>
<codeline lineno="38"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(antje.putze@lapth.cnrs.fr)</highlight></codeline>
<codeline lineno="39"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jan</highlight></codeline>
<codeline lineno="40"><highlight class="comment">///</highlight></codeline>
<codeline lineno="41"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="42"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pscott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="43"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Mar</highlight></codeline>
<codeline lineno="44"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Mar,<sp/>Aug</highlight></codeline>
<codeline lineno="45"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2018<sp/>Sep</highlight></codeline>
<codeline lineno="46"><highlight class="comment">///</highlight></codeline>
<codeline lineno="47"><highlight class="comment">///<sp/><sp/>\author<sp/>Sebastian<sp/>Wild</highlight></codeline>
<codeline lineno="48"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sebastian.wild@ph.tum.de)</highlight></codeline>
<codeline lineno="49"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Aug,<sp/>2017<sp/>Oct</highlight></codeline>
<codeline lineno="50"><highlight class="comment">///</highlight></codeline>
<codeline lineno="51"><highlight class="comment">///<sp/><sp/>\author<sp/>Felix<sp/>Kahlhoefer</highlight></codeline>
<codeline lineno="52"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(felix.kahlhoefer@desy.de)</highlight></codeline>
<codeline lineno="53"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>August</highlight></codeline>
<codeline lineno="54"><highlight class="comment">///</highlight></codeline>
<codeline lineno="55"><highlight class="comment">///<sp/><sp/>\author<sp/>Ankit<sp/>Beniwal</highlight></codeline>
<codeline lineno="56"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ankit.beniwal@uclouvain.be)</highlight></codeline>
<codeline lineno="57"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Oct</highlight></codeline>
<codeline lineno="58"><highlight class="comment">///<sp/><sp/>\date<sp/>2018<sp/>Jan,<sp/>Aug</highlight></codeline>
<codeline lineno="59"><highlight class="comment">///<sp/><sp/>\date<sp/>2020<sp/>Dec</highlight></codeline>
<codeline lineno="60"><highlight class="comment">///</highlight></codeline>
<codeline lineno="61"><highlight class="comment">///<sp/><sp/>\author<sp/>Aaron<sp/>Vincent</highlight></codeline>
<codeline lineno="62"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(aaron.vincent@cparc.ca)</highlight></codeline>
<codeline lineno="63"><highlight class="comment">///<sp/><sp/>\date<sp/>2017<sp/>Sept</highlight></codeline>
<codeline lineno="64"><highlight class="comment">///</highlight></codeline>
<codeline lineno="65"><highlight class="comment">///<sp/><sp/>\author<sp/>Sanjay<sp/>Bloor</highlight></codeline>
<codeline lineno="66"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sanjay.bloor12@imperial.ac.uk)</highlight></codeline>
<codeline lineno="67"><highlight class="comment">///<sp/><sp/>\date<sp/>2017<sp/>Dec</highlight></codeline>
<codeline lineno="68"><highlight class="comment">///<sp/><sp/>\date<sp/>2018<sp/>Aug,<sp/>Sep,<sp/>Oct</highlight></codeline>
<codeline lineno="69"><highlight class="comment">///<sp/><sp/>\date<sp/>2020<sp/>Feb,<sp/>May</highlight></codeline>
<codeline lineno="70"><highlight class="comment">///</highlight></codeline>
<codeline lineno="71"><highlight class="comment">///<sp/><sp/>\author<sp/>Sebastian<sp/>Hoof</highlight></codeline>
<codeline lineno="72"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s.hoof15@imperial.ac.uk)</highlight></codeline>
<codeline lineno="73"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Oct</highlight></codeline>
<codeline lineno="74"><highlight class="comment">///<sp/><sp/>\date<sp/>2017<sp/>Feb,<sp/>Sep,<sp/>Dec</highlight></codeline>
<codeline lineno="75"><highlight class="comment">///<sp/><sp/>\date<sp/>2018<sp/>Jan,<sp/>Mar,<sp/>Apr</highlight></codeline>
<codeline lineno="76"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>Mar,<sp/>Apr,<sp/>Jun</highlight></codeline>
<codeline lineno="77"><highlight class="comment">///</highlight></codeline>
<codeline lineno="78"><highlight class="comment">///<sp/>\author<sp/>Patrick<sp/>Stöcker</highlight></codeline>
<codeline lineno="79"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stoecker@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="80"><highlight class="comment">///<sp/>\date<sp/>2019<sp/>Sep</highlight></codeline>
<codeline lineno="81"><highlight class="comment">///<sp/>\date<sp/>2021<sp/>Jan,<sp/>Sep</highlight></codeline>
<codeline lineno="82"><highlight class="comment">///</highlight></codeline>
<codeline lineno="83"><highlight class="comment">///<sp/>\author<sp/>Anders<sp/>Kvellestad</highlight></codeline>
<codeline lineno="84"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(anders.kvellestad@fys.uio.no)</highlight></codeline>
<codeline lineno="85"><highlight class="comment">///<sp/>\date<sp/>2020<sp/>Feb</highlight></codeline>
<codeline lineno="86"><highlight class="comment">///</highlight></codeline>
<codeline lineno="87"><highlight class="comment">///<sp/>\author<sp/>Jonathan<sp/>Cornell</highlight></codeline>
<codeline lineno="88"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(jonathancornell@weber.edu)</highlight></codeline>
<codeline lineno="89"><highlight class="comment">///<sp/>\date<sp/>2013<sp/>-<sp/>2020</highlight></codeline>
<codeline lineno="90"><highlight class="comment">///</highlight></codeline>
<codeline lineno="91"><highlight class="comment">///<sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="92"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(gonzalo@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="93"><highlight class="comment">///<sp/>\date<sp/>2021<sp/>Sep</highlight></codeline>
<codeline lineno="94"><highlight class="comment">///</highlight></codeline>
<codeline lineno="95"><highlight class="comment">///<sp/>\author<sp/>Iñigo<sp/>Saez<sp/>Casares</highlight></codeline>
<codeline lineno="96"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(inigo.saez_casares@ens-paris-saclay.fr)</highlight></codeline>
<codeline lineno="97"><highlight class="comment">///<sp/>\date<sp/>2019<sp/>-<sp/>2020</highlight></codeline>
<codeline lineno="98"><highlight class="comment">///<sp/>\date<sp/>2021<sp/>April,<sp/>May</highlight></codeline>
<codeline lineno="99"><highlight class="comment">///</highlight></codeline>
<codeline lineno="100"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DarkBit__types_8hpp" kindref="compound">gambit/DarkBit/DarkBit_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE<sp/>DarkBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBITDarkMatterWorkgroup:2017fax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">START_MODULE</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DarkSUSY-specific<sp/>initialisation<sp/>functions<sp/>========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>///<sp/>Make<sp/>sure<sp/>LocalHalo<sp/>model<sp/>is<sp/>initialized<sp/>in<sp/>DarkSUSY5</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DarkSUSY5_PointInit_LocalHalo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkSUSY5_PointInit_LocalHalo_func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmcom,<sp/>(ds5),<sp/>DS5_HMCOM)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmisodf,<sp/>(ds5),<sp/>DS_HMISODF)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmframevelcom,<sp/>(ds5),<sp/>DS_HMFRAMEVELCOM)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmnoclue,<sp/>(ds5),<sp/>DS_HMNOCLUE)</highlight></codeline>
<codeline lineno="123" refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/>///<sp/>Make<sp/>sure<sp/>LocalHalo<sp/>model<sp/>is<sp/>initialized<sp/>in<sp/>DarkSUSY6</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DarkSUSY_PointInit_LocalHalo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkSUSY_PointInit_LocalHalo_func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmcom,<sp/>(ds6),<sp/>DS_HMCOM)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmisodf,<sp/>(ds6),<sp/>DS_HMISODF)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmframevelcom,<sp/>(ds6),<sp/>DS_HMFRAMEVELCOM)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshmnoclue,<sp/>(ds6),<sp/>DS_HMNOCLUE)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>DS6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_generic_wimp,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>DS6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds6)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Relic<sp/>density<sp/>=====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_spectrum_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(RD_spectrum_type)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,DecayTable)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_spectrum_SUSY_DS5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(RD_spectrum_type)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(mspctm,<sp/>(ds5),<sp/>DS5_MSPCTM)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(widths,<sp/>(ds5),<sp/>DS5_WIDTHS)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(intdof,<sp/>(ds5),<sp/>DS_INTDOF)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(pacodes,<sp/>(ds5),<sp/>DS5_PACODES)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(DS5particle_code,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_spectrum_from_ProcessCatalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(RD_spectrum_type)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiracSingletDM_Z2,<sp/>MajoranaSingletDM_Z2,<sp/>VectorSingletDM_Z2,<sp/>DMEFT)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_spectrum_ordered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_spectrum_ordered_func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(RD_spectrum_type)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_spectrum,<sp/>RD_spectrum_type)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_eff_annrate_DS5prep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_annrate_DS5prep_func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_spectrum,<sp/>RD_spectrum_type)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdmgev,<sp/>(ds5),<sp/>DS5_RDMGEV)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_eff_annrate_DSprep_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_annrate_DSprep_MSSM_func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_spectrum_ordered,<sp/>RD_spectrum_type)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsancoann,<sp/>(ds6),<sp/>DS_DSANCOANN)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(DSparticle_code,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str&amp;))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds6)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_eff_annrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_eff_annrate_DS5_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(fptr_dd)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_eff_annrate_DS5prep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsanwx,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_eff_annrate_DS_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(fptr_dd)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_eff_annrate_DSprep_MSSM,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsanwx,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_eff_annrate_from_ProcessCatalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(fptr_dd)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiracSingletDM_Z2,<sp/>MajoranaSingletDM_Z2,<sp/>VectorSingletDM_Z2,<sp/>DMEFT)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_oh2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>General<sp/>Boltzmann<sp/>solver<sp/>from<sp/>DarkSUSY,<sp/>using<sp/>arbitrary<sp/>Weff</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_DS_general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_spectrum_ordered,<sp/>RD_spectrum_type)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_eff_annrate,<sp/>fptr_dd)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>DARKBIT_RD_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdpars,<sp/>(ds6),<sp/>DS_RDPARS)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdtime,<sp/>(ds6),<sp/>DS_RDTIME)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdcom,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>())</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdstart,(ds6),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[1000],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[1000],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[1000],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[1000],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[1000]))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdens,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM),(ds6))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_generic_wimp),(ds6))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds6)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_DS5_general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_spectrum_ordered,<sp/>RD_spectrum_type)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_eff_annrate,<sp/>fptr_dd)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>DARKBIT_RD_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdthlim,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>())</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdtab,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdeqn,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;),</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdwintp,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(DS5particle_code,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(const<sp/>str&amp;))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(widths,<sp/>(ds5),<sp/>DS5_WIDTHS)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdmgev,<sp/>(ds5),<sp/>DS5_RDMGEV)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdpth,<sp/>(ds5),<sp/>DS_RDPTH)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdpars,<sp/>(ds5),<sp/>DS_RDPARS)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdswitch,<sp/>(ds5),<sp/>DS_RDSWITCH)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdlun,<sp/>(ds5),<sp/>DS_RDLUN)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdpadd,<sp/>(ds5),<sp/>DS_RDPADD)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rddof,<sp/>(ds5),<sp/>DS_RDDOF)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rderrors,<sp/>(ds5),<sp/>DS_RDERRORS)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdtime,<sp/>(ds5),<sp/>DS_RDTIME)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Routine<sp/>for<sp/>cross<sp/>checking<sp/>relic<sp/>density<sp/>results,<sp/>using<sp/>DarkSUSY5</highlight></codeline>
<codeline lineno="277"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>corresponding<sp/>function<sp/>for<sp/>DS6+<sp/>not<sp/>yet<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_DarkSUSY_DS5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsrdomega,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rderrors,<sp/>(ds5),<sp/>DS_RDERRORS)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(rdtime,<sp/>(ds5),<sp/>DS_RDTIME)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Routine<sp/>for<sp/>cross<sp/>checking<sp/>relic<sp/>density<sp/>results,<sp/>using<sp/>MicrOmegas</highlight></codeline>
<codeline lineno="288"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2_Xf,<sp/>ddpair)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Routine<sp/>for<sp/>computing<sp/>axion<sp/>energy<sp/>density<sp/>today<sp/>from<sp/>vacuum<sp/>misalignment,<sp/>assuming<sp/>no<sp/>axion<sp/>decays.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_Axions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(AxionOscillationTemperature,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(T_cmb,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_SuperRenormHP</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_relic_density,<sp/>double)</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP)</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="308"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/>///<sp/>Get<sp/>oh2<sp/>and<sp/>Xf<sp/>simultaneously</highlight></codeline>
<codeline lineno="313"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_oh2_Xf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_oh2_Xf_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(ddpair)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(oh2,<sp/>(gimmemicro),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_MSSM),<sp/>(gimmemicro))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z2),<sp/>(gimmemicro))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z3),<sp/>(gimmemicro))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_VectorSingletDM_Z2),<sp/>(gimmemicro))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_MajoranaSingletDM_Z2),<sp/>(gimmemicro))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_DiracSingletDM_Z2),(gimmemicro))</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiracSingletDM_Z2,<sp/>MajoranaSingletDM_Z2,<sp/>VectorSingletDM_Z2,<sp/>DMEFT)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/>///<sp/>Xf<sp/>=<sp/>m_WIMP/T_freezeout</highlight></codeline>
<codeline lineno="333"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>Xf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>Xf_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2_Xf,<sp/>ddpair)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/>///<sp/>Contributions<sp/>of<sp/>different<sp/>annihilation<sp/>channels<sp/>to<sp/>the<sp/>relic<sp/>density</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>relic_density_contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>print_channel_contributions_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(Xf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347" refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(momegas_print_channels,<sp/>()<sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>FILE*))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/>///<sp/>Contributions<sp/>of<sp/>semi-annihilation<sp/>to<sp/>the<sp/>relic<sp/>density</highlight></codeline>
<codeline lineno="352"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>semi_annihilation_fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_semi_ann_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(Xf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(get_oneChannel,<sp/>(gimmemicro),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*))</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z3),(gimmemicro))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>vSigma_freezeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>vSigma_freezeout_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(Xf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(vSigma,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/>///<sp/>Fraction<sp/>of<sp/>the<sp/>relic<sp/>density<sp/>constituted<sp/>by<sp/>the<sp/>DM<sp/>candidate<sp/>under<sp/>investigation</highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RD_fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_fraction_one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_fraction_leq_one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_fraction_rescaled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>RD_fraction_rescaled_LCDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(LCDM,<sp/>LCDM_theta,<sp/>LCDM_zreio)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>catalogue<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>TH_ProcessCatalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Process<sp/>Catalogue<sp/>from<sp/>DarkSUSY5</highlight></codeline>
<codeline lineno="400"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_DS5_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,DecayTable)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dssigmav,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBffdxdy,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBhhdxdy,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBwhdxdy,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBwwdxdy,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(IBintvars,<sp/>(ds5),<sp/>DS_IBINTVARS)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds5)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Process<sp/>Catalogue<sp/>from<sp/>DarkSUSY6<sp/>(MSSM)</highlight></codeline>
<codeline lineno="418"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_DS_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,DecayTable)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dssigmav0,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dssigmav0tot,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>())</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBffdxdy,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBhhdxdy,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBwhdxdy,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsIBwwdxdy,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(IBintvars,<sp/>(ds6),<sp/>DS_IBINTVARS)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY6<sp/>MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds6)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_ScalarSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(ScalarSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z2,ScalarSingletDM_Z2_running)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_ScalarSingletDM_Z3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(ScalarSingletDM_Z3_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(calcSpectrum,<sp/>(gimmemicro)<sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*))</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(vSigmaCh,<sp/>(gimmemicro),<sp/>MicrOmegas::aChannel*)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(gimmemicro)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z3,ScalarSingletDM_Z3_running)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_VectorSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(VectorSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(VectorSingletDM_Z2)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_MajoranaSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MajoranaSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_DiracSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DiracSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_AnnihilatingDM_mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(AnnihilatingDM_mixture)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_DecayingDM_mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_WIMP_EFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(SM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(WIMP_properties,<sp/>WIMPprops)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(WIMP_sigmav,<sp/>NREO_ScalarDM,<sp/>NREO_DiracDM,<sp/>NREO_MajoranaDM)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group1,<sp/>(WIMP_sigmav))</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group2,<sp/>(NREO_ScalarDM,<sp/>NREO_DiracDM,<sp/>NREO_MajoranaDM))</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_COMBINATION(group1,<sp/>group2)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_DMEFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(WIMP_properties,<sp/>WIMPprops)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DMEFT_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="500" refid="DarkBit__rollcall_8hpp_1ac344680b4d5bd5fd3c9959cf67a39a37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(CH_Sigma_V,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(str&amp;,<sp/>std::vector&lt;str&gt;&amp;,<sp/>std::vector&lt;str&gt;&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/>const<sp/>DecayTable&amp;))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(DMEFT)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/>///<sp/>Information<sp/>about<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>DM<sp/>process<sp/>in<sp/>question</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/>///<sp/>(i.e.<sp/>decay<sp/>or<sp/>annihilation)<sp/>to<sp/>use<sp/>the<sp/>correct<sp/>scaling<sp/>in</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/>///<sp/>terms<sp/>of<sp/>the<sp/>DM<sp/>density,<sp/>phase<sp/>space,<sp/>etc.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DM_process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DM_process_from_ProcessCatalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulated<sp/>annihilation/decay<sp/>yield<sp/>tables<sp/>==========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>FullSimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>Combine_SimYields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(GA_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(electron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(positron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(antiproton_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(antideuteron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>GA_SimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_SimYieldTable_DarkSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsanyield_sim,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_SimYieldTable_DS5<sp/></highlight><highlight class="comment">//<sp/>DS5<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dshayield,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_SimYieldTable_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dNdE,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_SimYieldTable_PPPC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By-pass<sp/>to<sp/>skip<sp/>specific<sp/>yields<sp/>in<sp/>FullSimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_SimYieldTable_empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>positron_SimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>positron_SimYieldTable_DarkSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsanyield_sim,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>positron_SimYieldTable_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dNdE,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>positron_SimYieldTable_PPPC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By-pass<sp/>to<sp/>skip<sp/>specific<sp/>yields<sp/>in<sp/>FullSimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>positron_SimYieldTable_empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>electron_SimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>electron_SimYieldTable_from_positron_SimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(positron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>antiproton_SimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antiproton_SimYieldTable_DarkSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsanyield_sim,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By-pass<sp/>to<sp/>skip<sp/>specific<sp/>yields<sp/>in<sp/>FullSimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antiproton_SimYieldTable_empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>antideuteron_SimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antideuteron_SimYieldTable_DarkSUSY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="599" refid="DarkBit__rollcall_8hpp_1af6174b8fea3848301f1b44e7f5e3e211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(dsanyield_sim,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By-pass<sp/>to<sp/>skip<sp/>specific<sp/>yields<sp/>in<sp/>FullSimYieldTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antideuteron_SimYieldTable_empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(SimYieldTable)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cascade<sp/>decays<sp/>====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>for<sp/>retrieving<sp/>list<sp/>of<sp/>final<sp/>states<sp/>for<sp/>cascade<sp/>decays</highlight></codeline>
<codeline lineno="611"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_FinalStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_FinalStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>for<sp/>determining<sp/>the<sp/>list<sp/>of<sp/>initial<sp/>states<sp/>for<sp/>cascade<sp/>decays</highlight></codeline>
<codeline lineno="619"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_InitialStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_InitialStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_process,<sp/>std::string)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(FullSimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>setting<sp/>up<sp/>the<sp/>decay<sp/>table<sp/>used<sp/>in<sp/>decay<sp/>chains</highlight></codeline>
<codeline lineno="633"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_DecayTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_DecayTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DecayChain::DecayTable)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(FullSimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/>///<sp/>Loop<sp/>manager<sp/>for<sp/>cascade<sp/>decays</highlight></codeline>
<codeline lineno="643"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_LoopManagement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_LoopManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(std::string,<sp/>CAN_MANAGE_LOOPS)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_InitialStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/>///<sp/>Event<sp/>counter<sp/>for<sp/>cascade<sp/>decays</highlight></codeline>
<codeline lineno="652"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_EventCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_EventCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(stringIntMap)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NEEDS_MANAGER(cascadeMC_LoopManagement,<sp/>std::string)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>for<sp/>generating<sp/>decay<sp/>chains</highlight></codeline>
<codeline lineno="661"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_ChainEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_GenerateChain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DecayChain::ChainContainer)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_DecayTable,<sp/>DecayChain::DecayTable)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NEEDS_MANAGER(cascadeMC_LoopManagement,<sp/>std::string)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>responsible<sp/>for<sp/>histogramming<sp/>and<sp/>evaluating<sp/>end<sp/>conditions<sp/>for<sp/>event<sp/>loop</highlight></codeline>
<codeline lineno="671"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_Histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_Histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(simpleHistContainter)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_ChainEvent,<sp/>DecayChain::ChainContainer)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(FullSimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NEEDS_MANAGER(cascadeMC_LoopManagement,<sp/>std::string)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>requesting<sp/>and<sp/>returning<sp/>gamma<sp/>ray<sp/>spectra<sp/>from<sp/>cascade<sp/>decays.</highlight></codeline>
<codeline lineno="684"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_gammaSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_gammaSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(stringFunkMap)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_InitialStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_Histograms,<sp/>simpleHistContainter)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_EventCount,<sp/>stringIntMap)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>requesting<sp/>and<sp/>returning<sp/>electron<sp/>spectra<sp/>from<sp/>cascade<sp/>decays.</highlight></codeline>
<codeline lineno="696"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_electronSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_electronSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(stringFunkMap)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_InitialStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_Histograms,<sp/>simpleHistContainter)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_EventCount,<sp/>stringIntMap)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>requesting<sp/>and<sp/>returning<sp/>positron<sp/>spectra<sp/>from<sp/>cascade<sp/>decays.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_positronSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_positronSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(stringFunkMap)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_InitialStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_Histograms,<sp/>simpleHistContainter)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_EventCount,<sp/>stringIntMap)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>requesting<sp/>and<sp/>returning<sp/>antiproton<sp/>spectra<sp/>from<sp/>cascade<sp/>decays.</highlight></codeline>
<codeline lineno="720"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_antiprotonSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_antiprotonSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(stringFunkMap)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_InitialStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_Histograms,<sp/>simpleHistContainter)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_EventCount,<sp/>stringIntMap)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>requesting<sp/>and<sp/>returning<sp/>antideuteron<sp/>spectra<sp/>from<sp/>cascade<sp/>decays.</highlight></codeline>
<codeline lineno="732"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_antideuteronSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_antideuteronSpectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(stringFunkMap)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_InitialStates,<sp/>std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_FinalStates,std::set&lt;std::string&gt;)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_Histograms,<sp/>simpleHistContainter)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_EventCount,<sp/>stringIntMap)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>for<sp/>printing<sp/>test<sp/>result<sp/>of<sp/>cascade<sp/>decays</highlight></codeline>
<codeline lineno="745"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>#define<sp/>CAPABILITY<sp/>cascadeMC_PrintResult</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>cascadeMC_PrintResult</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(bool)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_Histograms,<sp/>simpleHistContainter)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_EventCount,<sp/>stringIntMap)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>*/</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gamma-ray<sp/>spectra<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>GA_Yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_AnnYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_gammaSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GA_DecayYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_gammaSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>dump_gammaSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>dump_gammaSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e+e-<sp/>spectra<sp/>======================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>electron_Yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>electron_AnnYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(electron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_electronSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>electron_DecayYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(electron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_electronSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>positron_Yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>positron_AnnYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(positron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_positronSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>positron_DecayYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(positron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_positronSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>dump_electronSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>dump_electronSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(electron_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>dump_positronSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>dump_positronSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(positron_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Anti-proton<sp/>spectra<sp/>===============================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>antiproton_Yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antiproton_AnnYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(antiproton_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_antiprotonSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antiproton_DecayYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(antiproton_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_antiprotonSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>dump_antiprotonSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>dump_antiprotonSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(antiproton_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>TH_ProcessCatalog_SuperRenormHP</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(decay_rates,<sp/>DecayTable)</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(SuperRenormHP_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP)</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="879"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Anti-deuteron<sp/>spectra<sp/>=============================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>antideuteron_Yield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antideuteron_AnnYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(antideuteron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_antideuteronSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>antideuteron_DecayYield_General</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(antideuteron_SimYieldTable,<sp/>SimYieldTable)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(cascadeMC_antideuteronSpectra,<sp/>stringFunkMap)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>dump_antideuteronSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>dump_antideuteronSpectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(antideuteron_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gamma-ray<sp/>likelihoods<sp/>=============================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>set_gamLike_GC_halo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>set_gamLike_GC_halo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GalacticHalo,<sp/>GalacticHaloProperties)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(set_halo_profile,<sp/>(gamLike),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Xray_WISPy</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>compute_lnL_Xray_WISPy</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="934"><highlight class="comment"></highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Xray_Integral_SPI_sterile_nu</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>compute_lnL_Xray_Integral_SPI_sterile_nu</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="943"><highlight class="comment"></highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Xray_M31_sterile_nu</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>compute_lnL_Xray_M31_sterile_nu</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="952"><highlight class="comment"></highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Xray_NuSTAR_sterile_nu</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>compute_lnL_Xray_NuSTAR_sterile_nu</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="961"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_FermiLATdwarfs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_FermiLATdwarfs_gamLike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_process,<sp/>std::string)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(lnL,<sp/>(gamLike),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_FermiGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_FermiGC_gamLike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(set_gamLike_GC_halo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_process,<sp/>std::string)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(lnL,<sp/>(gamLike),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_CTAGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_CTAGC_gamLike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_process,<sp/>std::string)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEPENDENCY(set_gamLike_GC_halo,<sp/>bool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(lnL,<sp/>(gamLike),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_HESSGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_HESSGC_gamLike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(set_gamLike_GC_halo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_process,<sp/>std::string)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(lnL,<sp/>(gamLike),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Relic<sp/>density<sp/>likelihoods<sp/>=========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_oh2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_oh2_Simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_oh2_upperlimit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DM<sp/>halo<sp/>functions<sp/>and<sp/>likelihoods<sp/>=================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>GalacticHalo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GalacticHalo_gNFW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(GalacticHaloProperties)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(Halo_gNFW)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>GalacticHalo_Einasto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(GalacticHaloProperties)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(Halo_Einasto)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>LocalHalo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>ExtractLocalMaxwellianHalo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(Halo_gNFW,<sp/>Halo_Einasto)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_rho0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_rho0_lognormal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_vrot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_vrot_gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_v0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_v0_gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_vesc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_vesc_gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>WIMP<sp/>property<sp/>extractors<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>WIMP_properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>WIMP_properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(WIMPprops)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(MSSM_spectrum,<sp/>Spectrum,<sp/>MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(ScalarSingletDM_Z2_spectrum,<sp/>Spectrum,<sp/>ScalarSingletDM_Z2_running)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(ScalarSingletDM_Z3_spectrum,<sp/>Spectrum,<sp/>ScalarSingletDM_Z3_running)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(MajoranaSingletDM_Z2_spectrum,<sp/>Spectrum,<sp/>MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(DiracSingletDM_Z2_spectrum,<sp/>Spectrum,<sp/>DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(VectorSingletDM_Z2_spectrum,<sp/>Spectrum,<sp/>VectorSingletDM_Z2)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(MDM_spectrum,<sp/>Spectrum,<sp/>MDM)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>MODEL_CONDITIONAL_DEPENDENCY(DMEFT_spectrum,<sp/>Spectrum,<sp/>DMEFT)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>MSSM63atMGUT)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z2_running,<sp/>ScalarSingletDM_Z3_running)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(VectorSingletDM_Z2,<sp/>MajoranaSingletDM_Z2,<sp/>DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(AnnihilatingDM_mixture,<sp/>DecayingDM_mixture)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(NREO_scalarDM,<sp/>NREO_MajoranaDM,<sp/>NREO_DiracDM)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MDM,<sp/>DMEFT)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>DM<sp/>mass<sp/>in<sp/>GeV<sp/>for<sp/>generic<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>mwimp,<sp/>NEW_CAPABILITY,<sp/>mwimp_generic,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>(WIMP_properties,<sp/>WIMPprops))</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>DM<sp/>spin<sp/>(times<sp/>two)<sp/>for<sp/>generic<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>spinwimpx2,<sp/>NEW_CAPABILITY,<sp/>spinwimpx2_generic,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(),<sp/>(WIMP_properties,<sp/>WIMPprops))</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>a<sp/>bool<sp/>determining<sp/>if<sp/>a<sp/>WIMP<sp/>is<sp/>self-conjugate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>wimp_sc,<sp/>NEW_CAPABILITY,<sp/>wimp_sc_generic,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>(),<sp/>(WIMP_properties,<sp/>WIMPprops))</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>total<sp/>thermally-averaged<sp/>annihilation<sp/>cross-section<sp/>for<sp/>indirect<sp/>detection<sp/>(cm^3<sp/>/<sp/>s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#define<sp/>CAPABILITY<sp/>sigmav</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>sigmav_late_universe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>sigmav_late_universe_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(calcSpectrum,<sp/>(gimmemicro)<sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*))</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_MSSM),(gimmemicro))</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z2),(gimmemicro))</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z3),(gimmemicro))</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_VectorSingletDM_Z2),(gimmemicro))</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(gimmemicro)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Direct<sp/>detection<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>initialise<sp/>DDCalc<sp/>couplings<sp/>from<sp/>a<sp/>given<sp/>DM<sp/>interaction<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DDCalc_Couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>DDCalc<sp/>couplings<sp/>for<sp/>spin-independent/spin-dependent<sp/>interactions<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DDCalc_Couplings_WIMP_nucleon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DD_coupling_container)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DD_couplings,<sp/>DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>DDCalc<sp/>couplings<sp/>for<sp/>non-relativistic<sp/>Wilson<sp/>Coefficient<sp/>coupling<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DDCalc_Couplings_NR_WCs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DD_coupling_container)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DD_nonrel_WCs,<sp/>NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>DM-nucleon<sp/>couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DD_couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_couplings_DarkSUSY_DS5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(get_DD_couplings,<sp/>(ds5),<sp/>std::vector&lt;double&gt;,<sp/>())</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(mspctm,<sp/>(ds5),<sp/>DS5_MSPCTM)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(ddcom,<sp/>(ds5),<sp/>DS5_DDCOM)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(nuclear_params_fnq,MSSM63atQ)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_couplings_DarkSUSY_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(get_DD_couplings,<sp/>(ds6),<sp/>std::vector&lt;double&gt;,<sp/>())</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(ddcomlegacy,<sp/>(ds6),<sp/>DS_DDCOMLEGACY)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(ddmssmcom,<sp/>(ds6),<sp/>DS_DDMSSMCOM)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>DarkSUSY6<sp/>MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds6)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(nuclear_params_fnq,MSSM63atQ)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_couplings_MicrOmegas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(nucleonAmplitudes,<sp/>(gimmemicro),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*))</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(FeScLoop,<sp/>(gimmemicro),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(MOcommon,<sp/>(gimmemicro),<sp/>MicrOmegas::MOcommonSTR)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(nuclear_params_fnq,<sp/>MSSM63atQ,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorSingletDM_Z2,<sp/>DMEFT)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group1,<sp/>(nuclear_params_fnq))</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group2,<sp/>(MSSM63atQ,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running,</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorSingletDM_Z2,<sp/>DMEFT))</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_COMBINATION(group1,<sp/>group2)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_MSSM),(gimmemicro))</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z2),(gimmemicro))</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_ScalarSingletDM_Z3),(gimmemicro))</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((MicrOmegas_VectorSingletDM_Z2),(gimmemicro))</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(gimmemicro)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_couplings_ScalarSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(ScalarSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(nuclear_params_fnq,<sp/>ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group1,<sp/>(nuclear_params_fnq))</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group2,<sp/>(ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running))</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_COMBINATION(group1,<sp/>group2)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_couplings_ScalarSingletDM_Z3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(ScalarSingletDM_Z3_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(nuclear_params_fnq,<sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group1,<sp/>(nuclear_params_fnq))</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODEL_GROUP(group2,<sp/>(ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running))</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL_COMBINATION(group1,<sp/>group2)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_couplings_VectorSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(VectorSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(nuclear_params_fnq,<sp/>VectorSingletDM_Z2)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Relativistic<sp/>Wilson<sp/>coefficients<sp/>defined<sp/>in<sp/>the<sp/>5(or<sp/>4<sp/>or<sp/>3)<sp/>flavscheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DD_rel_WCs_flavscheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_rel_WCs_flavscheme_DMEFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(map_str_dbl)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DMEFT_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(DMEFT)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_rel_WCs_flavscheme_DiracSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(map_str_dbl)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DiracSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_rel_WCs_flavscheme_MajoranaSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(map_str_dbl)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MajoranaSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-relativistic<sp/>Wilson<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DD_nonrel_WCs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Copying<sp/>of<sp/>NREO<sp/>model<sp/>parameters<sp/>into<sp/>NREO_DD_nucleon_couplings<sp/>object</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>NREO_couplings_from_parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(NREO_scalarDM,<sp/>NREO_MajoranaDM,<sp/>NREO_DiracDM)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Translation<sp/>of<sp/>DDcalc<sp/>couplings<sp/>into<sp/>NREO<sp/>couplings</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>NREO_from_DD_couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DD_couplings,<sp/>DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>non-relativistic<sp/>WCs<sp/>from<sp/>the<sp/>relativistic<sp/>ones,<sp/>using<sp/>DirectDM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>flavour<sp/>matching<sp/>scheme.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_nonrel_WCs_flavscheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DD_rel_WCs_flavscheme,<sp/>map_str_dbl)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(WIMP_properties,<sp/>WIMPprops)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DirectDMNuisanceParameters,<sp/>map_str_dbl)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(get_NR_WCs_flav,<sp/>(),<sp/>NREO_DM_nucleon_couplings,<sp/>(map_str_dbl&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/>std::string&amp;,<sp/>map_str_dbl&amp;))</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-relativistic<sp/>WCs<sp/>computed<sp/>directly<sp/>for<sp/>fermionic<sp/>Higgs<sp/>portal<sp/>models.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_nonrel_WCs_DiracSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DiracSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(nuclear_params_fnq,<sp/>DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DD_nonrel_WCs_MajoranaSingletDM_Z2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(MajoranaSingletDM_Z2_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(nuclear_params_fnq,<sp/>MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>calculators<sp/>of<sp/>the<sp/>spin-(in)dependent<sp/>WIMP-proton<sp/>and<sp/>WIMP-neutron<sp/>cross-sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>sigma_SI_p,<sp/>NEW_CAPABILITY,<sp/>sigma_SI_p_simple,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>(DD_couplings,<sp/>DM_nucleon_couplings),<sp/>(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>sigma_SI_n,<sp/>NEW_CAPABILITY,<sp/>sigma_SI_n_simple,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>(DD_couplings,<sp/>DM_nucleon_couplings),<sp/>(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>sigma_SD_p,<sp/>NEW_CAPABILITY,<sp/>sigma_SD_p_simple,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>(DD_couplings,<sp/>DM_nucleon_couplings),<sp/>(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1299" refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1affc138025d83f35105ec841abec0dfba" kindref="member">QUICK_FUNCTION</ref>(DarkBit,<sp/>sigma_SD_n,<sp/>NEW_CAPABILITY,<sp/>sigma_SD_n_simple,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(),<sp/>(DD_couplings,<sp/>DM_nucleon_couplings),<sp/>(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generalized<sp/>v^2n,<sp/>q^2n<sp/>DM-nucleon<sp/>SI<sp/>cross<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>fermionic<sp/>Higgs<sp/>portal<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#define<sp/>CAPABILITY<sp/>sigma_SI_p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>sigma_SI_vnqn_FermionicHiggsPortal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(map_intpair_dbl)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DD_nonrel_WCs,<sp/>NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(DiracSingletDM_Z2,<sp/>MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generalized<sp/>v^2n,<sp/>q^2n<sp/>DM-nucleon<sp/>SD<sp/>cross<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>fermionic<sp/>Higgs<sp/>portal<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>sigma_SD_p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>sigma_SD_vnqn_FermionicHiggsPortal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(map_intpair_dbl)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(DiracSingletDM_Z2,<sp/>MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Likelihoods<sp/>for<sp/>nuclear<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_SI_nuclear_parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_sigmas_sigmal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODEL(nuclear_params_sigmas_sigmal)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_SD_nuclear_parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_deltaq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(nuclear_params_fnq)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DirectDMNuisanceParameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>ExtractDirectDMNuisanceParameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(map_str_dbl)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(SMINPUTS,<sp/>SMInputs)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(nuclear_params_ChPT)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Likelihoods<sp/>for<sp/>nuisance<sp/>parameters<sp/>ChPT<sp/>in<sp/>DirectDM<sp/>2.2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_nuclear_parameters_ChPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_sigmapiN_Deltas_gTs_rs2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(nuclear_params_ChPT_sigmapiN)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DD<sp/>rate<sp/>and<sp/>likelihood<sp/>calculations.<sp/>Don&apos;t<sp/>try<sp/>this<sp/>one<sp/>at<sp/>home<sp/>kids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,TYPE,NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1359"><highlight class="preprocessor"><sp/><sp/>LONG_START_CAPABILITY(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1360"><highlight class="preprocessor"><sp/><sp/>LONG_DECLARE_FUNCTION(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1361"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>TYPE,<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1362"><highlight class="preprocessor"><sp/><sp/>LONG_DEPENDENCY(MODULE,<sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1363"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_Calculate),<sp/>bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1364"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1365"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>DD_Experiment,<sp/>(needs_DDCalc),<sp/>int,<sp/>(const<sp/>str&amp;))<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1366"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1367"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>CAT(DD_,NAME),<sp/>(needs_DDCalc),<sp/>TYPE,<sp/>(const<sp/>int&amp;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DD_DECLARE_BIN_FUNCTION(EXPERIMENT,TYPE,NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1370"><highlight class="preprocessor"><sp/><sp/>LONG_START_CAPABILITY(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1371"><highlight class="preprocessor"><sp/><sp/>LONG_DECLARE_FUNCTION(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1372"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>std::vector&lt;double&gt;,<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1373"><highlight class="preprocessor"><sp/><sp/>LONG_DEPENDENCY(MODULE,<sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1374"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_Calculate),<sp/>bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1375"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1376"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>DD_Experiment,<sp/>(needs_DDCalc),<sp/>int,<sp/>(const<sp/>str&amp;))<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1377"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1378"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>DD_Bins,<sp/>(needs_DDCalc),<sp/>int,<sp/>(const<sp/>int&amp;))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1379"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT_3(EXPERIMENT,_,NAME),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1380"><highlight class="preprocessor"><sp/><sp/><sp/>CAT_3(EXPERIMENT,_Get,NAME),<sp/>CAT(DD_,NAME),<sp/>(needs_DDCalc),<sp/>TYPE,<sp/>(const<sp/>int&amp;,<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1381"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>int&amp;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DD_DECLARE_EXPERIMENT(EXPERIMENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1384"><highlight class="preprocessor"><sp/><sp/>LONG_START_CAPABILITY(MODULE,<sp/>CAT(EXPERIMENT,_Calculate))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1385"><highlight class="preprocessor"><sp/><sp/>LONG_DECLARE_FUNCTION(MODULE,<sp/>CAT(EXPERIMENT,_Calculate),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1386"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_Calc),<sp/>bool,<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1387"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT(EXPERIMENT,_Calculate),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1388"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_Calc),<sp/>DD_Experiment,<sp/>(needs_DDCalc),<sp/>int,<sp/>(const<sp/>str&amp;))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1389"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_REQ(MODULE,<sp/>CAT(EXPERIMENT,_Calculate),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1390"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_Calc),<sp/>DD_CalcRates,<sp/>(needs_DDCalc),<sp/>void,<sp/>(const<sp/>int&amp;))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1391"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,int,Events)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1392"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,Background)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1393"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,Signal)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1394"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,SignalSI)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1395"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,SignalSD)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1396"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,int,Bins)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1397"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_RESULT_FUNCTION(EXPERIMENT,double,LogLikelihood)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1398"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_BIN_FUNCTION(EXPERIMENT,int,BinEvents)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1399"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_BIN_FUNCTION(EXPERIMENT,double,BinBackground)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1400"><highlight class="preprocessor"><sp/><sp/>DD_DECLARE_BIN_FUNCTION(EXPERIMENT,double,BinSignal)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1401"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>SET_BACKEND_OPTION(EXPERIMENT,<sp/>VERSIONS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1403"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_Calculate),<sp/>CAT(EXPERIMENT,_Calc),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1404"><highlight class="preprocessor"><sp/><sp/><sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1405"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_Events),<sp/>CAT(EXPERIMENT,_GetEvents),<sp/><sp/>\</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor"><sp/><sp/><sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1407"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_Background),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1408"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetBackground),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1409"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_Signal),<sp/>CAT(EXPERIMENT,_GetSignal),<sp/><sp/>\</highlight></codeline>
<codeline lineno="1410"><highlight class="preprocessor"><sp/><sp/><sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1411"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_SignalSI),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1412"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetSignalSI),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1413"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_SignalSD),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1414"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetSignalSD),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1415"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_Bins),<sp/>CAT(EXPERIMENT,_GetBins),<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1416"><highlight class="preprocessor"><sp/><sp/><sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1417"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_LogLikelihood),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1418"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetLogLikelihood),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1419"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_BinEvents),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1420"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetBinEvents),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1421"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_BinBackground),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1422"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetBinBackground),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1423"><highlight class="preprocessor"><sp/><sp/>LONG_BACKEND_OPTION(MODULE,<sp/>CAT(EXPERIMENT,_BinSignal),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1424"><highlight class="preprocessor"><sp/><sp/><sp/>CAT(EXPERIMENT,_GetBinSignal),<sp/>VERSIONS,<sp/>(needs_DDCalc))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1425"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>different<sp/>DD<sp/>experiments<sp/>that<sp/>exist<sp/>in<sp/>DDCalc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(XENON100_2012)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aprile<sp/>et<sp/>al.,<sp/>PRL<sp/>109,<sp/>181301<sp/>(2013)<sp/>[arxiv:1207.5988]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(XENON1T_2017)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aprile<sp/>et<sp/>al.,<sp/>PRL<sp/>119,<sp/>181301<sp/>(2017)<sp/>[arxiv:1705.06655]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(XENON1T_2018)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aprile<sp/>et<sp/>al.,<sp/>May<sp/>28<sp/>talk<sp/>at<sp/>Gran<sp/>Sasso.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(DARWIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>M.<sp/>Schumann<sp/>et<sp/>al.,<sp/>[arXiv:1506.08309]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(LUX_2013)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Akerib<sp/>et<sp/>al.,<sp/>PRL<sp/>112,<sp/>091303<sp/>(2014)<sp/>[arxiv:1310.8214]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(LUX_2015)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D.S.<sp/>Akerib<sp/>et<sp/>al.,<sp/>PRL<sp/>116,<sp/>161301<sp/>(2016)<sp/>[arXiv:1512.03506]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(LUX_2016)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D.S.<sp/>Akerib<sp/>et<sp/>al.,<sp/>PRL<sp/>118,<sp/>021303<sp/>(2017)<sp/>[arxiv:1608.07648]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(LZ)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LZ<sp/>TDR,<sp/>[arXiv:1509.02910]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PandaX_2016)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A.<sp/>Tan<sp/>et<sp/>al.,<sp/>PRL<sp/>117,<sp/>121303<sp/>(2016)<sp/>[arxiv:1607.07400]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PandaX_2017)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X.<sp/>Cui<sp/>et<sp/>al.,<sp/>PRL<sp/>119,<sp/>181302<sp/>(2017)<sp/>[arxiv:1708.06917]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(DarkSide_50)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>P.<sp/>Agnes<sp/>et<sp/>al.,<sp/>[arXiv:1802.07198]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(DarkSide_50_S2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>P.<sp/>Agnes<sp/>et<sp/>al.,<sp/>[arXiv:1802.06994]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(CRESST_II)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>G.<sp/>Angloher<sp/>et<sp/>al.,<sp/>[arXiv:1509.01515]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(CRESST_III)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A.<sp/>H.<sp/>Abdelhameed<sp/>et<sp/>al.,<sp/>[arXiv:1904.00498]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(SuperCDMS_2014)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Agnese<sp/>et<sp/>al.,<sp/>PRL<sp/>112,<sp/>241302<sp/>(2014)<sp/>[arxiv:1402.7137]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(CDMSlite)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Agnese<sp/>et<sp/>al.,<sp/>PRL<sp/>116,<sp/>071301<sp/>(2015)<sp/>[arxiv:1509.02448]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(SIMPLE_2014)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Felizardo<sp/>et<sp/>al.,<sp/>PRD<sp/>89,<sp/>072013<sp/>(2014)<sp/>[arxiv:1404.4309]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_2L)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C.<sp/>Amole<sp/>et<sp/>al.,<sp/>PRD<sp/>93,<sp/>061101<sp/>(2016)<sp/>[arXiv:1601.03729]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_60_F)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C.<sp/>Amole<sp/>et<sp/>al.,<sp/>PRD<sp/>93,<sp/>052014<sp/>(2016)<sp/>[arXiv:1510.07754]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_60_I)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C.<sp/>Amole<sp/>et<sp/>al.,<sp/>PRD<sp/>93,<sp/>052014<sp/>(2016)<sp/>[arXiv:1510.07754]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_60)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C.<sp/>Amole<sp/>et<sp/>al.,<sp/>PRD<sp/>93,<sp/>052014<sp/>(2016)<sp/>[arXiv:1510.07754]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_60_2017)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C.<sp/>Amole<sp/>et<sp/>al.,<sp/>arXiv:1702.07666</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_60_2019)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C.<sp/>Amole<sp/>et<sp/>al.,<sp/>arXiv:1902.04031</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>DD_DECLARE_EXPERIMENT(PICO_500)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>S.<sp/>Fallows,<sp/>talk<sp/>at<sp/>TAUP<sp/>2017</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Specify<sp/>which<sp/>versions<sp/>of<sp/>DDCalc<sp/>support<sp/>which<sp/>experiments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>experiment<sp/>does<sp/>not<sp/>have<sp/>any<sp/>entry<sp/>here,<sp/>any<sp/>version<sp/>(of<sp/>any<sp/>backend)<sp/>is<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Introduced<sp/>in<sp/>DDCalc<sp/>1.0.0<sp/>but<sp/>later<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PICO_60_F,<sp/>(DDCalc,<sp/>1.0.0,<sp/>1.1.0,<sp/>1.2.0,<sp/>2.1.0))</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PICO_60_I,<sp/>(DDCalc,<sp/>1.0.0,<sp/>1.1.0,<sp/>1.2.0,<sp/>2.1.0))</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Introduced<sp/>in<sp/>DDCalc<sp/>1.1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PICO_60_2017,<sp/>(DDCalc,<sp/>1.1.0,<sp/>1.2.0,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(XENON1T_2017,<sp/>(DDCalc,<sp/>1.1.0,<sp/>1.2.0,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Introduced<sp/>in<sp/>DDCalc<sp/>1.2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PandaX_2017,<sp/>(DDCalc,<sp/>1.2.0,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Introduced<sp/>in<sp/>DDCalc<sp/>2.0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(XENON1T_2018,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(DARWIN,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(LZ,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(DarkSide_50,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(CRESST_II,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(CDMSlite,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PICO_60,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PICO_500,<sp/>(DDCalc,<sp/>2.0.0,<sp/>2.1.0,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Introduced<sp/>in<sp/>DDCalc<sp/>2.2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(CRESST_III,<sp/>(DDCalc,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(DarkSide_50_S2,<sp/>(DDCalc,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>SET_BACKEND_OPTION(PICO_60_2019,<sp/>(DDCalc,<sp/>2.2.0))</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutrinos<sp/>=========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Solar<sp/>capture<sp/>------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/>///<sp/>Capture<sp/>rate<sp/>of<sp/>regular<sp/>dark<sp/>matter<sp/>in<sp/>the<sp/>Sun<sp/>(no<sp/>v-dependent<sp/>or<sp/>q-dependent<sp/>cross-sections)<sp/>(s^-1).</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#define<sp/>CAPABILITY<sp/>capture_rate_Sun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>capture_rate_Sun_const_xsec_DS5<sp/></highlight><highlight class="comment">//<sp/>DS<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_Sun_v0q0_isoscalar,<sp/>(ds5),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SI_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SD_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkSUSY5_PointInit_LocalHalo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY,<sp/>5.1.3),<sp/>(ds5))</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>capture_rate_Sun_const_xsec<sp/></highlight><highlight class="comment">//<sp/>DS<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_Sun_v0q0_isoscalar,<sp/>(ds6),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SI_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SD_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkSUSY_PointInit_LocalHalo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_MSSM,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((DarkSUSY_generic_wimp,<sp/>6.1.1,<sp/>6.2.2,<sp/>6.2.5),<sp/>(ds6))</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds6)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/>///Alternative<sp/>function<sp/>for<sp/>the<sp/>above:<sp/>Capture<sp/>rate<sp/>of<sp/>dark<sp/>matter<sp/>with<sp/>a<sp/>constant<sp/>cross<sp/>section<sp/>(s^-1),<sp/>using<sp/>backend<sp/>Captn&apos;<sp/>General</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>capture_rate_Sun_const_xsec_capgen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SI_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SD_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_Sun_v0q0_isoscalar,(cg),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_sun_saturation,(cg),</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1520" refid="DarkBit__rollcall_8hpp_1aee12a28e31f5e57cf46b94ae467feacc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((CaptnGeneral),(cg))</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(cg)</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1524"><highlight class="comment"><sp/><sp/><sp/><sp/>///Capture<sp/>rate<sp/>of<sp/>dark<sp/>matter<sp/>with<sp/>q^n<sp/>or<sp/>v^n<sp/>cross<sp/>section<sp/>(s^-1),<sp/>using<sp/>backend<sp/>Captn&apos;<sp/>General</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>capture_rate_Sun_vnqn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(spinwimpx2,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SD_p,<sp/>map_intpair_dbl)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(sigma_SI_p,<sp/>map_intpair_dbl)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_Sun_vnqn_isoscalar,(cg),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_sun_saturation,(cg),</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((CaptnGeneral,<sp/>2.1),(cg))</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(cg)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/><sp/><sp/><sp/>///Capture<sp/>rate<sp/>of<sp/>dark<sp/>matter<sp/>with<sp/>NREO<sp/>method<sp/>(s^-1),<sp/>using<sp/>backend<sp/>Captn&apos;<sp/>General</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>capture_rate_Sun_NREO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(captn_NREO,(cg),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(cap_sun_saturation,(cg),</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(captn_populate_array,(cg),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a7104f7d90cacf7242a2bd058c23fce51" kindref="member">BACKEND_OPTION</ref>((CaptnGeneral,<sp/>2.1),<sp/>(cg))</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(cg)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(WIMP_properties,<sp/>WIMPprops)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DD_nonrel_WCs,NREO_DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/><sp/>///<sp/>Equilibration<sp/>time<sp/>for<sp/>capture<sp/>and<sp/>annihilation<sp/>of<sp/>dark<sp/>matter<sp/>in<sp/>the<sp/>Sun<sp/>(s)</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>equilibration_time_Sun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>equilibration_time_Sun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(capture_rate_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/>///<sp/>Annihilation<sp/>rate<sp/>of<sp/>dark<sp/>matter<sp/>in<sp/>the<sp/>Sun<sp/>(s^-1)</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>annihilation_rate_Sun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>annihilation_rate_Sun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(equilibration_time_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(capture_rate_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/><sp/>///<sp/>Neutrino<sp/>yield<sp/>function<sp/>pointer<sp/>and<sp/>setup</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>nuyield_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>nuyield_from_DS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(nuyield_info)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ,<sp/>ScalarSingletDM_Z2_running,<sp/>ScalarSingletDM_Z3_running,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MajoranaSingletDM_Z2,<sp/>DiracSingletDM_Z2,<sp/>VectorSingletDM_Z2,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NREO_scalarDM,<sp/>NREO_MajoranaDM,<sp/>NREO_DiracDM,DMEFT)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(sigmav,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(DS_nuyield_setup,<sp/>(ds),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[29],</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[29][3],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[15],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(&amp;)[3],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(nuyield,<sp/>(ds),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;))</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(get_DS_neutral_h_decay_channels,<sp/>(ds),<sp/>std::vector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;,<sp/>())</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(get_DS_charged_h_decay_channels,<sp/>(ds),<sp/>std::vector&lt;<sp/>std::vector&lt;str&gt;<sp/>&gt;,<sp/>())</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>FORCE_SAME_BACKEND(ds)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>Injection<sp/>===================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>injection<sp/>yields<sp/>from<sp/>ProcessCatalog,<sp/>SimYield<sp/>tables<sp/>and<sp/>FCMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>energy_injection_spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>energy_injection_spectrum_ProcessCatalog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(DarkAges::Energy_injection_spectrum)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALLOW_MODELS(AnnihilatingDM_general,DecayingDM_general)<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>one<sp/>of<sp/>the<sp/>&quot;energy<sp/>injection<sp/>marker&quot;<sp/>models<sp/>is<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(DM_process,<sp/>std::string)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(electron_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(positron_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutrino<sp/>telescope<sp/>likelihoods<sp/>====================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(nudata)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(annihilation_rate_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(nuyield_ptr,<sp/>nuyield_info)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(nubounds,<sp/>(),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuyield_function_pointer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC22_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC22_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(nudata)</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(annihilation_rate_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(nuyield_ptr,<sp/>nuyield_info)</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(nubounds,<sp/>(),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuyield_function_pointer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WH_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WH_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(nudata)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(annihilation_rate_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(nuyield_ptr,<sp/>nuyield_info)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(nubounds,<sp/>(),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuyield_function_pointer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79WL_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79WL_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>START_FUNCTION(nudata)</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(mwimp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(annihilation_rate_Sun,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DEPENDENCY(nuyield_ptr,<sp/>nuyield_info)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a30056162932e5018713f5cb8ae10cc8a" kindref="member">BACKEND_REQ</ref>(nubounds,<sp/>(),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuyield_function_pointer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_bgloglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_pvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79SL_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79SL_nobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_data,<sp/>nudata)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IC79_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC79_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>IceCube_likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>IC_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_loglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC22_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WH_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79WL_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(IC79SL_bgloglike,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DarkBit<sp/>auxiliary<sp/>module<sp/>functions<sp/>================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>UnitTest_DarkBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>UnitTest_DarkBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DD_couplings,<sp/>DM_nucleon_couplings)</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(RD_oh2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(GA_Yield,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatterConj_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DarkMatter_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_AnnihilatingDM_mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(AnnihilatingDM_mixture)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_DecayingDM_mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_ScalarSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,<sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running)</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP)</highlight></codeline>
<codeline lineno="1928"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_VectorSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(VectorSingletDM_Z2)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_MajoranaSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_DiracSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MSSM63atQ)</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_EFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(NREO_scalarDM,<sp/>NREO_MajoranaDM,<sp/>NREO_DiracDM)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatter_ID_DMEFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(DMEFT)</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DarkMatterConj_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_AnnihilatingDM_mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(AnnihilatingDM_mixture)</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_DecayingDM_mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_ScalarSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(ScalarSingletDM_Z2,<sp/>ScalarSingletDM_Z2_running,<sp/>ScalarSingletDM_Z3,<sp/>ScalarSingletDM_Z3_running)</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_VectorSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(VectorSingletDM_Z2)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_MajoranaSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(MajoranaSingletDM_Z2)</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_DiracSingletDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(DiracSingletDM_Z2)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(MSSM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_EFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(NREO_scalarDM,<sp/>NREO_MajoranaDM,<sp/>NREO_DiracDM)</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DarkMatterConj_ID_DMEFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(DMEFT)</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Axion<sp/>likelihoods<sp/>and<sp/>functions<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>QCDAxion_ZeroTemperatureMass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>QCDAxion_ZeroTemperatureMass_Nuisance_lnL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(QCDAxion)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>QCDAxion_TemperatureDependence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>QCDAxion_TemperatureDependence_Nuisance_lnL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(QCDAxion)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>QCDAxion_AxionPhotonConstant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>QCDAxion_AxionPhotonConstant_Nuisance_lnL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(QCDAxion)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>ALPS1_signal_vac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_ALPS1_signal_vac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>ALPS1_signal_gas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_ALPS1_signal_gas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_ALPS1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_ALPS1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(ALPS1_signal_vac,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(ALPS1_signal_gas,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>CAST2007_signal_vac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_CAST2007_signal_vac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::vector&lt;double&gt;)</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>CAST2017_signal_vac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_CAST2017_signal_vac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::vector&lt;std::vector&lt;double&gt;&gt;)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_CAST2007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_CAST2007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(CAST2007_signal_vac,<sp/>std::vector&lt;double&gt;)</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_CAST2017</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_CAST2017</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(CAST2017_signal_vac,<sp/>std::vector&lt;std::vector&lt;double&gt;&gt;)</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>Haloscope_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_Haloscope_signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralALP)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(RD_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Haloscope_ADMX1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_Haloscope_ADMX1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralALP)</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Haloscope_signal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Haloscope_ADMX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_Haloscope_ADMX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralALP)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Haloscope_signal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Haloscope_RBF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_Haloscope_RBF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralALP)</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Haloscope_signal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_Haloscope_UF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_Haloscope_UF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralALP)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(Haloscope_signal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>RParameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_RParameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_RParameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_RParameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(RParameter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_WDVar_G117B15A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_WDVar_G117B15A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_WDVar_R548</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_WDVar_R548</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_WDVar_PG1351489</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_WDVar_PG1351489</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_WDVar_L192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_WDVar_L192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_SN1987A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_SN1987A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(PhotonFluence_SN1987A_Conversion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(PhotonFluence_SN1987A_Decay,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>PhotonFluence_SN1987A_Conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_PhotonFluence_SN1987A_Conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>PhotonFluence_SN1987A_Decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_PhotonFluence_SN1987A_Decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_HESS_GCMF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_HESS_GCMF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_XENON1T_Anomaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_XENON1T_Anomaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(GeneralCosmoALP,XENON1T_NuisanceParameters)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_XENON1T_Anomaly_NuisanceParameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_XENON1T_Anomaly_NuisanceParameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(XENON1T_NuisanceParameters)</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_XENON1T_DM_Anomaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_XENON1T_DM_Anomaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_JOINT_MODEL(GeneralCosmoALP,XENON1T_NuisanceParameters,XENON1T_DM_NuisanceParameters)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>DEPENDENCY(LocalHalo,<sp/>LocalMaxwellianHalo)</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237" refid="DarkBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>AxionOscillationTemperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2239" refid="DarkBit__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_AxionOscillationTemperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL(GeneralCosmoALP)</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Super<sp/>Renormalizable<sp/>Higgs<sp/>Portal<sp/>DM<sp/>relative<sp/>observables<sp/>and<sp/>likelihoods<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2249"><highlight class="comment"></highlight></codeline>
<codeline lineno="2250"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DM_relic_density</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SuperRenormHP_relic_density</highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP)</highlight></codeline>
<codeline lineno="2255"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP_relic_density_param)</highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2258"><highlight class="comment"></highlight></codeline>
<codeline lineno="2259"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DM_width</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2261"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SuperRenormHP_width</highlight></codeline>
<codeline lineno="2262"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2263"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="2264"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="2265"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2266"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2267"><highlight class="comment"></highlight></codeline>
<codeline lineno="2268"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DM_lifetime</highlight></codeline>
<codeline lineno="2269"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2270"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SuperRenormHP_lifetime</highlight></codeline>
<codeline lineno="2271"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2272"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(DM_width,<sp/>double)</highlight></codeline>
<codeline lineno="2273"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2274"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2275"><highlight class="comment"></highlight></codeline>
<codeline lineno="2276"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DecDM_branching_el</highlight></codeline>
<codeline lineno="2277"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2278"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DecDM_branching_el</highlight></codeline>
<codeline lineno="2279"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2280"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="2281"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(DM_width,<sp/>double)</highlight></codeline>
<codeline lineno="2282"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="2283"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2284"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2285"><highlight class="comment"></highlight></codeline>
<codeline lineno="2286"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>DecDM_branching_ph</highlight></codeline>
<codeline lineno="2287"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2288"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>DecDM_branching_ph</highlight></codeline>
<codeline lineno="2289"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2290"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(DarkMatter_ID,<sp/>std::string)</highlight></codeline>
<codeline lineno="2291"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(DM_width,<sp/>double)</highlight></codeline>
<codeline lineno="2292"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(TH_ProcessCatalog,<sp/>TH_ProcessCatalog)</highlight></codeline>
<codeline lineno="2293"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2294"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2295"><highlight class="comment"></highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>J_factor_INTEGRAL_CO</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_J_factor_INTEGRAL_CO</highlight></codeline>
<codeline lineno="2299"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2300"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(GalacticHalo,<sp/>GalacticHaloProperties)</highlight></codeline>
<codeline lineno="2301"><highlight class="comment"><sp/><sp/><sp/><sp/>BACKEND_REQ(los_integral,<sp/>(),<sp/>void,<sp/>(std::vector&lt;double&gt;,<sp/>std::vector&lt;double&gt;,<sp/>double,<sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="2302"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2303"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"></highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_INTEGRAL_CO</highlight></codeline>
<codeline lineno="2306"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2307"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_INTEGRAL_CO</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2309"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(J_factor_INTEGRAL_CO,<sp/>double)</highlight></codeline>
<codeline lineno="2312"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2314"><highlight class="comment"></highlight></codeline>
<codeline lineno="2315"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>J_factor_INTEGRAL_ang_b</highlight></codeline>
<codeline lineno="2316"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_J_factor_INTEGRAL_ang_b</highlight></codeline>
<codeline lineno="2318"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(std::vector&lt;double&gt;)</highlight></codeline>
<codeline lineno="2319"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(GalacticHalo,<sp/>GalacticHaloProperties)</highlight></codeline>
<codeline lineno="2320"><highlight class="comment"><sp/><sp/><sp/><sp/>BACKEND_REQ(los_integral,<sp/>(),<sp/>void,<sp/>(std::vector&lt;double&gt;,<sp/>std::vector&lt;double&gt;,<sp/>double,<sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="2321"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2322"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2323"><highlight class="comment"></highlight></codeline>
<codeline lineno="2324"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_INTEGRAL_ang_b</highlight></codeline>
<codeline lineno="2325"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2326"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_INTEGRAL_ang_b</highlight></codeline>
<codeline lineno="2327"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2328"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(J_factor_INTEGRAL_ang_b,<sp/>std::vector&lt;double&gt;)</highlight></codeline>
<codeline lineno="2331"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2333"><highlight class="comment"></highlight></codeline>
<codeline lineno="2334"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>J_factor_INTEGRAL_ang_l</highlight></codeline>
<codeline lineno="2335"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2336"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_J_factor_INTEGRAL_ang_l</highlight></codeline>
<codeline lineno="2337"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(std::vector&lt;double&gt;)</highlight></codeline>
<codeline lineno="2338"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(GalacticHalo,<sp/>GalacticHaloProperties)</highlight></codeline>
<codeline lineno="2339"><highlight class="comment"><sp/><sp/><sp/><sp/>BACKEND_REQ(los_integral,<sp/>(),<sp/>void,<sp/>(std::vector&lt;double&gt;,<sp/>std::vector&lt;double&gt;,<sp/>double,<sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="2340"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2341"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2342"><highlight class="comment"></highlight></codeline>
<codeline lineno="2343"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_INTEGRAL_ang_l</highlight></codeline>
<codeline lineno="2344"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2345"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_INTEGRAL_ang_l</highlight></codeline>
<codeline lineno="2346"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2347"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="2348"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="2349"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(J_factor_INTEGRAL_ang_l,<sp/>std::vector&lt;double&gt;)</highlight></codeline>
<codeline lineno="2350"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2351"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2352"><highlight class="comment"></highlight></codeline>
<codeline lineno="2353"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>J_factor_HEAO</highlight></codeline>
<codeline lineno="2354"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2355"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_J_factor_HEAO</highlight></codeline>
<codeline lineno="2356"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(GalacticHalo,<sp/>GalacticHaloProperties)</highlight></codeline>
<codeline lineno="2358"><highlight class="comment"><sp/><sp/><sp/><sp/>BACKEND_REQ(los_integral,<sp/>(),<sp/>void,<sp/>(std::vector&lt;double&gt;,<sp/>std::vector&lt;double&gt;,<sp/>double,<sp/>std::vector&lt;double&gt;<sp/>&amp;,<sp/>std::vector&lt;double&gt;<sp/>&amp;))</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"></highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_HEAO</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_HEAO</highlight></codeline>
<codeline lineno="2365"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2366"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(time_at_z,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(H_at_z,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(age_universe,<sp/>double)</highlight></codeline>
<codeline lineno="2369"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(Omega0_cdm,<sp/>double)</highlight></codeline>
<codeline lineno="2370"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(DecayingDM_mixture)</highlight></codeline>
<codeline lineno="2371"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2372"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2373"><highlight class="comment"></highlight></codeline>
<codeline lineno="2374"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>solar_DM_luminosity</highlight></codeline>
<codeline lineno="2375"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2376"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SuperRenormHP_solar_luminosity</highlight></codeline>
<codeline lineno="2377"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2378"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP)</highlight></codeline>
<codeline lineno="2379"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2380"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2381"><highlight class="comment"></highlight></codeline>
<codeline lineno="2382"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_solar_luminosity</highlight></codeline>
<codeline lineno="2383"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2384"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_solar_luminosity</highlight></codeline>
<codeline lineno="2385"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2386"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(solar_DM_luminosity,<sp/>double)</highlight></codeline>
<codeline lineno="2387"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2388"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2389"><highlight class="comment"></highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>solar_neutrino_flux_B8</highlight></codeline>
<codeline lineno="2391"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2392"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SuperRenormHP_solar_neutrino_flux_B8</highlight></codeline>
<codeline lineno="2393"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2394"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP_solar_neutrino)</highlight></codeline>
<codeline lineno="2395"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(solar_DM_luminosity,<sp/>double)</highlight></codeline>
<codeline lineno="2396"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2397"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"></highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>solar_neutrino_flux_Be7</highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>SuperRenormHP_solar_neutrino_flux_Be7</highlight></codeline>
<codeline lineno="2402"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2403"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(SuperRenormHP_solar_neutrino)</highlight></codeline>
<codeline lineno="2404"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(solar_DM_luminosity,<sp/>double)</highlight></codeline>
<codeline lineno="2405"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2406"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2407"><highlight class="comment"></highlight></codeline>
<codeline lineno="2408"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_solar_neutrino_B8</highlight></codeline>
<codeline lineno="2409"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_solar_neutrino_B8</highlight></codeline>
<codeline lineno="2411"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2412"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(solar_neutrino_flux_B8,<sp/>double)</highlight></codeline>
<codeline lineno="2413"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2415"><highlight class="comment"></highlight></codeline>
<codeline lineno="2416"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_solar_neutrino_Be7</highlight></codeline>
<codeline lineno="2417"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2418"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_solar_neutrino_Be7</highlight></codeline>
<codeline lineno="2419"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2420"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(solar_neutrino_flux_Be7,<sp/>double)</highlight></codeline>
<codeline lineno="2421"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2422"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2423"><highlight class="comment"></highlight></codeline>
<codeline lineno="2424"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>lnL_ShortRangeForces_Sushkov2011</highlight></codeline>
<codeline lineno="2425"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2426"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>calc_lnL_ShortRangeForces_Sushkov2011</highlight></codeline>
<codeline lineno="2427"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(double)</highlight></codeline>
<codeline lineno="2428"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(New_Force_Sushkov2011,<sp/>daFunk::Funk)</highlight></codeline>
<codeline lineno="2429"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2430"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2431"><highlight class="comment"></highlight></codeline>
<codeline lineno="2432"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>get_Higgs_Nucleon_coupling_fN</highlight></codeline>
<codeline lineno="2433"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2434"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>func_Higgs_Nucleon_coupling_fN</highlight></codeline>
<codeline lineno="2435"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(Higgs_Nucleon_coupling_fN)</highlight></codeline>
<codeline lineno="2436"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODEL(nuclear_params_sigmas_sigmal)</highlight></codeline>
<codeline lineno="2437"><highlight class="comment"><sp/><sp/><sp/><sp/>DEPENDENCY(SM_spectrum,<sp/>Spectrum)</highlight></codeline>
<codeline lineno="2438"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2439"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2440"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2444"><highlight class="comment"><sp/><sp/>#define<sp/>CAPABILITY<sp/>New_Force_Sushkov2011</highlight></codeline>
<codeline lineno="2445"><highlight class="comment"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="2446"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>New_Force_Sushkov2011_SuperRenormHP</highlight></codeline>
<codeline lineno="2447"><highlight class="comment"><sp/><sp/><sp/><sp/>START_FUNCTION(daFunk::Funk)</highlight></codeline>
<codeline lineno="2448"><highlight class="comment"><sp/><sp/><sp/><sp/>ALLOW_MODELS(ModifiedGravityYukawa,<sp/>symmetron)</highlight></codeline>
<codeline lineno="2449"><highlight class="comment"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight></codeline>
<codeline lineno="2450"><highlight class="comment"><sp/><sp/>#undef<sp/>CAPABILITY</highlight></codeline>
<codeline lineno="2451"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>REFERENCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODULE</highlight></codeline>
    </programlisting>
    <location file="DarkBit/include/gambit/DarkBit/DarkBit_rollcall.hpp"/>
  </compounddef>
</doxygen>
