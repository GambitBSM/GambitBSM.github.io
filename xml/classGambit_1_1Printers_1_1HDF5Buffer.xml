<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Printers_1_1HDF5Buffer" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Printers::HDF5Buffer</compoundname>
    <basecompoundref refid="classGambit_1_1Printers_1_1HDF5BufferBase" prot="public" virt="non-virtual">Gambit::Printers::HDF5BufferBase</basecompoundref>
    <includes refid="hdf5printer__v2_8hpp" local="no">hdf5printer_v2.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Buffer_1ac27e2870397903121270cb27e8a72313" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1HDF5DataSet" kindref="compound">HDF5DataSet</ref>&lt; T &gt;</type>
        <definition>HDF5DataSet&lt;T&gt; Gambit::Printers::HDF5Buffer&lt; T &gt;::my_dataset</definition>
        <argsstring></argsstring>
        <name>my_dataset</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::my_dataset</qualifiedname>
        <briefdescription>
<para>Object that provides an interface to the output HDF5 dataset matching this buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1139" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Buffer_1a5376e1132f153e3b9e35fd4ce870f6e6" prot="private" static="no" mutable="no">
        <type><ref refid="classGambit_1_1Printers_1_1HDF5DataSet" kindref="compound">HDF5DataSet</ref>&lt; int &gt;</type>
        <definition>HDF5DataSet&lt;int&gt; Gambit::Printers::HDF5Buffer&lt; T &gt;::my_dataset_valid</definition>
        <argsstring></argsstring>
        <name>my_dataset_valid</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::my_dataset_valid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1140" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1HDF5Buffer_1a104fcf9490bfe6614d18b33e0ed0d5cd" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>, T &gt;</type>
        <definition>std::map&lt;PPIDpair,T&gt; Gambit::Printers::HDF5Buffer&lt; T &gt;::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::buffer</qualifiedname>
        <briefdescription>
<para>Buffer containing points to be written to disk upon &quot;flush&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1143" column="18" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a4acb48862e64dbaa570b5bd06fa4f9d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Printers::HDF5Buffer&lt; T &gt;::HDF5Buffer</definition>
        <argsstring>(const std::string &amp;name, const bool sync, const std::vector&lt; PPIDpair &gt; &amp;buffered_points)</argsstring>
        <name>HDF5Buffer</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::HDF5Buffer</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>sync</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &gt; &amp;</type>
          <declname>buffered_points</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="690" column="9" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="690" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1ae43abc3ea0b528c1dcbb622285ac2beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::update</definition>
        <argsstring>(const PPIDpair &amp;ppid)</argsstring>
        <name>update</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::update</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ad4c42172af7ad3c82069dec7a52cbfcd">update</reimplements>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &amp;</type>
          <declname>ppid</declname>
        </param>
        <briefdescription>
<para>Make sure buffer includes the specified point (data will be set as &apos;invalid&apos; unless given elsewhere) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="711" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="711" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a59de376e9ca05c561dd3313b5766d837" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::append</definition>
        <argsstring>(T const &amp;value, const PPIDpair &amp;ppid)</argsstring>
        <name>append</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::append</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &amp;</type>
          <declname>ppid</declname>
        </param>
        <briefdescription>
<para>Insert data to print buffer at the specified point (overwrite if it already exists in the buffer) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="726" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="726" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a74beba496bfdc2142a5856c51d3d878a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::block_flush</definition>
        <argsstring>(const hid_t loc_id, const std::vector&lt; PPIDpair &gt; &amp;order, const std::size_t target_pos)</argsstring>
        <name>block_flush</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::block_flush</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ac84c8c4c0b4c5b4d5195281ad50167c6">block_flush</reimplements>
        <param>
          <type>const hid_t</type>
          <declname>loc_id</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &gt; &amp;</type>
          <declname>order</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>target_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Empty the buffer to disk as block with the specified order into the target position (only allowed if target_pos is beyond the current end of the dataset!) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="736" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="736" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1ad83e12d7d6b91c378fb7a5dc35da2225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::random_flush</definition>
        <argsstring>(const hid_t loc_id, const std::map&lt; PPIDpair, std::size_t &gt; &amp;position_map)</argsstring>
        <name>random_flush</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::random_flush</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a843f8f9af239425f903d1d07a7dd0a2f">random_flush</reimplements>
        <param>
          <type>const hid_t</type>
          <declname>loc_id</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>, std::size_t &gt; &amp;</type>
          <declname>position_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Empty the buffer to disk as &quot;random access&quot; data at pre-existing positions matching the point IDs May not completely empty the buffer; points will be removed from the buffer if they are included in the supplied position map. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="816" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="816" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1afe1cf607cb01eab0eaab0ffe48373fd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::reset</definition>
        <argsstring>(hid_t loc_id)</argsstring>
        <name>reset</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::reset</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a1efae39027f737f9e64cd30d93fc11b2">reset</reimplements>
        <param>
          <type>hid_t</type>
          <declname>loc_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear all data in the buffer <emphasis><bold>and on disk</bold></emphasis> Only allowed for &quot;random access&quot; buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="856" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="856" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a2e0f2ca346a1439945bcd58cf2c25d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::ensure_dataset_exists</definition>
        <argsstring>(const hid_t loc_id, const std::size_t length)</argsstring>
        <name>ensure_dataset_exists</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::ensure_dataset_exists</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1acf85037a2ca51ee45bad1a2029976192">ensure_dataset_exists</reimplements>
        <param>
          <type>const hid_t</type>
          <declname>loc_id</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Make sure datasets exist on disk with the correct name and size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="878" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="878" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a062765fae9065b3d6591a895b3924318" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Gambit::Printers::HDF5Buffer&lt; T &gt;::exists_on_disk</definition>
        <argsstring>() const</argsstring>
        <name>exists_on_disk</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::exists_on_disk</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ab46bdd9afeb557535ff35d371fa9d70c">exists_on_disk</reimplements>
        <briefdescription>
<para>Report whether the dataset for which we are the buffer exists on disk yet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="885" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="885" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a6118774017573626790bc7330fafa56c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t Gambit::Printers::HDF5Buffer&lt; T &gt;::N_items_in_buffer</definition>
        <argsstring>()</argsstring>
        <name>N_items_in_buffer</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::N_items_in_buffer</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ac46b5c28eed3c428ebf5ce888af8a52e">N_items_in_buffer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Might as well check the internal consistency of this buffer while we are at it</para>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="892" column="21" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="892" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1ad3ad39d657dacd65d6d0df2c8420816d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::add_float_block</definition>
        <argsstring>(const HDF5bufferchunk &amp;chunk, const std::size_t buf)</argsstring>
        <name>add_float_block</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::add_float_block</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1HDF5bufferchunk" kindref="compound">HDF5bufferchunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1004" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1004" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a1235369e70763c7a0559393fe9d8a018" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::HDF5Buffer&lt; T &gt;::add_int_block</definition>
        <argsstring>(const HDF5bufferchunk &amp;chunk, const std::size_t buf)</argsstring>
        <name>add_int_block</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::add_int_block</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1HDF5bufferchunk" kindref="compound">HDF5bufferchunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1035" column="14" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1035" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1adba2e2d3685b338a227fd5e8bc249049" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::vector&lt; double &gt;, std::vector&lt; int &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; double &gt;, std::vector&lt; int &gt; &gt; Gambit::Printers::HDF5Buffer&lt; T &gt;::flush_to_vector_dbl</definition>
        <argsstring>(const std::vector&lt; PPIDpair &gt; &amp;order)</argsstring>
        <name>flush_to_vector_dbl</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::flush_to_vector_dbl</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ac158fc85c678b77ec90d85bd2c02e169">flush_to_vector_dbl</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &gt; &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1079" column="19" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1079" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1a3842a4e0714c4f619c620522fdb867ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::vector&lt; long &gt;, std::vector&lt; int &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; long &gt;, std::vector&lt; int &gt; &gt; Gambit::Printers::HDF5Buffer&lt; T &gt;::flush_to_vector_int</definition>
        <argsstring>(const std::vector&lt; PPIDpair &gt; &amp;order)</argsstring>
        <name>flush_to_vector_int</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::flush_to_vector_int</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ae64b22e289eb696ba9fe0a813da4bf86">flush_to_vector_int</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref> &gt; &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1105" column="19" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1105" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1HDF5Buffer_1af6c1a05ebe2b6ad899a944185d7c5e46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int Gambit::Printers::HDF5Buffer&lt; T &gt;::get_type_id</definition>
        <argsstring>() const</argsstring>
        <name>get_type_id</name>
        <qualifiedname>Gambit::Printers::HDF5Buffer::get_type_id</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a8f10621c2be81e02849ff70b615e9c58">get_type_id</reimplements>
        <briefdescription>
<para>Retrieve the integer type ID for the buffered dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="1131" column="13" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="1131" bodyend="1134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to manage buffer for a single output label. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Gambit::Printers::HDF5Buffer&lt; T &gt;</label>
        <link refid="classGambit_1_1Printers_1_1HDF5Buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Gambit::Printers::HDF5BufferBase</label>
        <link refid="classGambit_1_1Printers_1_1HDF5BufferBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Gambit::Printers::HDF5Buffer&lt; T &gt;</label>
        <link refid="classGambit_1_1Printers_1_1HDF5Buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Gambit::Printers::HDF5BufferBase</label>
        <link refid="classGambit_1_1Printers_1_1HDF5BufferBase"/>
      </node>
    </collaborationgraph>
    <location file="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" line="685" column="5" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer_v2.hpp" bodystart="686" bodyend="1149"/>
    <listofallmembers>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1ad3ad39d657dacd65d6d0df2c8420816d" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>add_float_block</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a1235369e70763c7a0559393fe9d8a018" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>add_int_block</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a59de376e9ca05c561dd3313b5766d837" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>append</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a74beba496bfdc2142a5856c51d3d878a" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>block_flush</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a104fcf9490bfe6614d18b33e0ed0d5cd" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>buffer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a78db701f4a8b9d71867a2d522102bc78" prot="protected" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>buffer_set</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a7f8fd59c403459bc79eff1670e74398d" prot="protected" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>buffer_valid</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1ae6e4e8ca6066b1200d7624c8dfc7ea0c" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>dset_name</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a2e0f2ca346a1439945bcd58cf2c25d57" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>ensure_dataset_exists</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a062765fae9065b3d6591a895b3924318" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>exists_on_disk</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1adba2e2d3685b338a227fd5e8bc249049" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>flush_to_vector_dbl</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a3842a4e0714c4f619c620522fdb867ab" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>flush_to_vector_int</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a409af81a0b7f27cdc7297efdeab72b81" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>get_points_set</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1af6c1a05ebe2b6ad899a944185d7c5e46" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>get_type_id</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a4acb48862e64dbaa570b5bd06fa4f9d3" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>HDF5Buffer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1aac6694eab66e34b34f5c24cafcdbac71" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>HDF5BufferBase</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a8ffc75e411c3b020bb568d824696f0f3" prot="public" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>is_synchronised</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1ac27e2870397903121270cb27e8a72313" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>my_dataset</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a5376e1132f153e3b9e35fd4ce870f6e6" prot="private" virt="non-virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>my_dataset_valid</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1a6118774017573626790bc7330fafa56c" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>N_items_in_buffer</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1ad83e12d7d6b91c378fb7a5dc35da2225" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>random_flush</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1afe1cf607cb01eab0eaab0ffe48373fd1" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>reset</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5Buffer_1ae43abc3ea0b528c1dcbb622285ac2beb" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>update</name></member>
      <member refid="classGambit_1_1Printers_1_1HDF5BufferBase_1a2457678fd688fff9129c78977235821f" prot="public" virt="virtual"><scope>Gambit::Printers::HDF5Buffer</scope><name>~HDF5BufferBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
