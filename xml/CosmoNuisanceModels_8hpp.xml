<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="CosmoNuisanceModels_8hpp" kind="file" language="C++">
    <compoundname>CosmoNuisanceModels.hpp</compoundname>
    <includedby refid="CosmoNuisanceModels_8cpp" local="yes">CosmoNuisanceModels.cpp</includedby>
      <sectiondef kind="define">
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_Planck_TTTEEE</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="31" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_Planck_TT</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="37" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_Planck_lite</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="43" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_JLA</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="49" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_Pantheon</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="56" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_JLA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="57" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_acbar</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="65" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_BK15</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="71" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_BK14</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="79" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_BK15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="80" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_BK14priors</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="89" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_BK14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="90" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_CFHTLens_correlation</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="98" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_euclid_lensing</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="108" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_euclid_pk</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="118" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_euclid_pk_noShot</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="131" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_euclid_pk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="132" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ISW</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="140" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_kids450_qe_likelihood_public</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="146" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ska1</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="165" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ska1_IM_band</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="177" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_ska1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="178" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ska1_IM_band_noHI</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="193" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_ska1_IM_band</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="194" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ska1_pk</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="202" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a43bda94ea92b5a0e18e404892f3c2668" prot="public" static="no">
        <name>PARENT</name>
        <initializer>cosmo_nuisance_ska1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="203" column="11" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ska_lensing</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="211" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_ska2_pk</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="217" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_spt</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="223" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_SpectralDistortions</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="229" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>cosmo_nuisance_dummy</initializer>
        <briefdescription>
<para>Planck - Full set of nuisance parameter for the high-l TTTEEE likelihood. </para>
        </briefdescription>
        <detaileddescription>
<para>add new model holding cosmological nuisance parameters</para>
<para>nuisance params for spt and spt_2500 likelihood implemented in MontePython</para>
<para>model containing only parameter for ska2_pk likelihood implemented in MontePython</para>
<para>nuisance parameters for ska1_lensing and ska2_lensing likelihoods implemented in MontePython</para>
<para>child of cosmo_nuisance_ska model containing only parameter for ska_pk likelihood implemented in MontePython</para>
<para>child of cosmo_nuisance_ska1 model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihoods implemented in MontePython</para>
<para>nuisance params for Lyalpha likelihood Lya_abg implemented in MontePython</para>
<para>nuisance params for KiDS weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for tomographic ISW likelihood implemented in MontePython</para>
<para>nuisance params for euclid galaxy clustering likelihood implemented in MontePython</para>
<para>nuisance params for euclid lensing likelihood implemented in MontePython</para>
<para>nuisance params for CFHTLenS tomographic weak lensing likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14priors (and BK15priors) likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK14 likelihood implemented in MontePython</para>
<para>nuisance params for bicep/keck array BK15 likelihood implemented in MontePython</para>
<para>nuisance params for acbar likelihood implemented in MontePython</para>
<para>Supernovae <ndash/> JLA.</para>
<para>Planck - Lite version of the likelihoods.</para>
<para>Planck - Full set of nuisance parameter for the high-l TT likelihood.</para>
<para>Pantheon -&gt; child of JLA (light curve params fitted with SaltMu2 therefore only 1 nuisance param) use same model for JLA_simple likelihood</para>
<para>euclid pk nuisance parameters without shot noise parameter P_shot -&gt; child of cosmo_nuisance_euclid_pk</para>
<para>contains nuisance params from ska1_IM_band1,ska1_IM_band2 and ska1_pk likelihoods implemented in MontePython use this model for a combination of a &apos;band&apos; and the pk likelihood</para>
<para>child of cosmo_nuisance_ska1_IM_band model containing only parameter for ska1_IM_band1 and ka1_IM_band1 likelihood implemented in MontePython excluding nuisance parameters Omega_HI0 and alphaHI (energy density and redshift dependence of neutral hydrogen) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" line="241" column="9" bodyfile="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Declaration of all cosmology-related nuisance parameter models.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Janina Renk (<ulink url="mailto:janina.renk@fysik.su.se">janina.renk@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 June</para>
</simplesect>
<simplesect kind="author"><para>Patrick Stoecker (<ulink url="mailto:stoecker@physik.rwth-aachen.de">stoecker@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Nov </para>
</simplesect>
<simplesect kind="date"><para>2021 Sep</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Declaration<sp/>of<sp/>all<sp/>cosmology-related<sp/>nuisance</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>parameter<sp/>models.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\author<sp/>Janina<sp/>Renk</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(janina.renk@fysik.su.se)</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>June</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>\author<sp/>Patrick<sp/>Stoecker</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stoecker@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/>\date<sp/>2020<sp/>Nov</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\date<sp/>2021<sp/>Sep</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CosmoNuisanceModels_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CosmoNuisanceModels_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PLANCK<sp/>NUISANCE<sp/>PARAMETERS<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">///<sp/>Planck<sp/>-<sp/>Full<sp/>set<sp/>of<sp/>nuisance<sp/>parameter<sp/>for<sp/>the<sp/>high-l<sp/>TTTEEE<sp/>likelihood</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_Planck_TTTEEE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>DEFINEPARS(A_cib_217,cib_index,xi_sz_cib,A_sz,ps_A_100_100,ps_A_143_143,ps_A_143_217,ps_A_217_217,ksz_norm,gal545_A_100,gal545_A_143,gal545_A_143_217,gal545_A_217,galf_EE_A_100,galf_EE_A_100_143,galf_EE_A_100_217,galf_EE_A_143,galf_EE_A_143_217,galf_EE_A_217,galf_EE_index,galf_TE_A_100,galf_TE_A_100_143,galf_TE_A_100_217,galf_TE_A_143,galf_TE_A_143_217,galf_TE_A_217,galf_TE_index,calib_100T,calib_217T,calib_100P,calib_143P,calib_217P,A_pol,A_planck)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">///<sp/>Planck<sp/>-<sp/>Full<sp/>set<sp/>of<sp/>nuisance<sp/>parameter<sp/>for<sp/>the<sp/>high-l<sp/>TT<sp/>likelihood</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_Planck_TT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>DEFINEPARS(A_cib_217,cib_index,xi_sz_cib,A_sz,ps_A_100_100,ps_A_143_143,ps_A_143_217,ps_A_217_217,ksz_norm,gal545_A_100,gal545_A_143,gal545_A_143_217,gal545_A_217,calib_100T,calib_217T,A_planck)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">///<sp/>Planck<sp/>-<sp/>Lite<sp/>version<sp/>of<sp/>the<sp/>likelihoods</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_Planck_lite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>DEFINEPARS(A_planck)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">///<sp/>Supernovae<sp/>--<sp/>JLA</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_JLA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>DEFINEPARS(alpha,beta,M,Delta_M)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">///<sp/>Pantheon<sp/>-&gt;<sp/>child<sp/>of<sp/>JLA<sp/>(light<sp/>curve<sp/>params<sp/>fitted<sp/>with<sp/>SaltMu2<sp/>therefore<sp/>only<sp/>1<sp/>nuisance<sp/>param)</highlight></codeline>
<codeline lineno="55"><highlight class="comment">///<sp/>use<sp/>same<sp/>model<sp/>for<sp/>JLA_simple<sp/>likelihood</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_Pantheon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_JLA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(M)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_Pantheon_to_cosmo_nuisance_JLA)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>acbar<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_acbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>DEFINEPARS(A_SZ)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>bicep/keck<sp/>array<sp/>BK15<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="71"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_BK15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>DEFINEPARS(BBbetadust,BBbetasync)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>DEFINEPARS(BBdust,BBsync,BBalphadust,BBTdust,BBalphasync,BBdustsynccorr,EEtoBB_dust,EEtoBB_sync)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>DEFINEPARS(Delta_dust,Delta_sync,gamma_corr,gamma_95,gamma_150,gamma_220)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>bicep/keck<sp/>array<sp/>BK14<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_BK14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_BK15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(BBbetadust,BBbetasync)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(BBdust,BBsync,BBalphadust,BBTdust,BBalphasync,BBdustsynccorr,EEtoBB_dust,EEtoBB_sync)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_BK14_to_cosmo_nuisance_BK15)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>bicep/keck<sp/>array<sp/>BK14priors<sp/>(and<sp/>BK15priors)<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_BK14priors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_BK14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(BBbetadust,BBbetasync)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_BK14priors_to_cosmo_nuisance_BK14)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>CFHTLenS<sp/>tomographic<sp/>weak<sp/>lensing<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="98"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_CFHTLens_correlation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>name<sp/>in<sp/>MP<sp/>likelihood:<sp/>epsilon<sp/>renamed<sp/>to<sp/>epsilon_CFHT,<sp/>have<sp/>to<sp/>translate<sp/>back<sp/>before<sp/>passing<sp/>to<sp/>MP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(you<sp/>can<sp/>not<sp/>scan<sp/>over<sp/>two<sp/>models<sp/>at<sp/>the<sp/>same<sp/>time<sp/>if<sp/>they<sp/>have<sp/>parameters<sp/>with<sp/>the<sp/>same<sp/>names.<sp/>When<sp/>two<sp/>models<sp/>with<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma_NL<sp/>are<sp/>in<sp/>use,<sp/>you<sp/>can<sp/>declare<sp/>the<sp/>parameter<sp/>sigma_NL_x<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>sigma_NL_y.<sp/>See<sp/>CosmoBit_tutorial.yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>an<sp/>example<sp/>how<sp/>to<sp/>use<sp/>&apos;same_as&apos;.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>DEFINEPARS(epsilon_CFHT)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>euclid<sp/>lensing<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_euclid_lensing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>name<sp/>in<sp/>MP<sp/>likelihood:<sp/>epsilon<sp/>renamed<sp/>to<sp/>epsilon_euclid,<sp/>have<sp/>to<sp/>translate<sp/>back<sp/>before<sp/>passing<sp/>to<sp/>MP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(you<sp/>can<sp/>not<sp/>scan<sp/>over<sp/>two<sp/>models<sp/>at<sp/>the<sp/>same<sp/>time<sp/>if<sp/>they<sp/>have<sp/>parameters<sp/>with<sp/>the<sp/>same<sp/>names.<sp/>When<sp/>two<sp/>models<sp/>with<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma_NL<sp/>are<sp/>in<sp/>use,<sp/>you<sp/>can<sp/>declare<sp/>the<sp/>parameter<sp/>sigma_NL_x<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>sigma_NL_y.<sp/>See<sp/>CosmoBit_tutorial.yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>an<sp/>example<sp/>how<sp/>to<sp/>use<sp/>&apos;same_as&apos;.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>DEFINEPARS(epsilon_euclid)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>euclid<sp/>galaxy<sp/>clustering<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_euclid_pk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>parameter<sp/>names:<sp/>beta_0^Euclid,beta_1^Euclid<sp/>but<sp/>macros<sp/>don&apos;t<sp/>like<sp/>^<sp/>-&gt;<sp/>have<sp/>to<sp/>take<sp/>care<sp/>of<sp/>renaming<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>data.mcmc_parameters<sp/>dictionary<sp/>for<sp/>MontePython</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>name<sp/>in<sp/>MP<sp/>likelihood:<sp/>sigma_euclid<sp/>renamed<sp/>to<sp/>sigma_NL_euclid,<sp/>have<sp/>to<sp/>translate<sp/>back<sp/>before<sp/>passing<sp/>to<sp/>MP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(you<sp/>can<sp/>not<sp/>scan<sp/>over<sp/>two<sp/>models<sp/>at<sp/>the<sp/>same<sp/>time<sp/>if<sp/>they<sp/>have<sp/>parameters<sp/>with<sp/>the<sp/>same<sp/>names.<sp/>When<sp/>two<sp/>models<sp/>with<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma_NL<sp/>are<sp/>in<sp/>use,<sp/>you<sp/>can<sp/>declare<sp/>the<sp/>parameter<sp/>sigma_NL_x<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>sigma_NL_y.<sp/>See<sp/>CosmoBit_tutorial.yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>an<sp/>example<sp/>how<sp/>to<sp/>use<sp/>&apos;same_as&apos;.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>DEFINEPARS(sigma_NL_euclid,beta_0Euclid,beta_1Euclid,P_shot)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment">///<sp/>euclid<sp/>pk<sp/>nuisance<sp/>parameters<sp/>without<sp/>shot<sp/>noise<sp/>parameter<sp/>P_shot<sp/>-&gt;<sp/>child<sp/>of<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="comment">///<sp/>cosmo_nuisance_euclid_pk</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_euclid_pk_noShot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_euclid_pk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(sigma_NL_euclid,beta_0Euclid,beta_1Euclid)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_euclid_pk_noShot_to_cosmo_nuisance_euclid_pk)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>tomographic<sp/>ISW<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ISW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>DEFINEPARS(A_ISW,b0_sdss,b1_sdss,b2_sdss,b3_sdss,b4_sdss,b0_qso,b1_qso,b2_qso,b0_mpz,b1_mpz,b2_mpz,b0_wisc,b1_wisc,b2_wisc,b0_nvss)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>KiDS<sp/>weak<sp/>lensing<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_kids450_qe_likelihood_public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>DEFINEPARS(m_corr,A_IA,exp_IA,A_bary,A_noise_z1,A_noise_z2,A_noise_z3)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>D_z1,D_z2,D_z3<sp/>params<sp/>were<sp/>not<sp/>used<sp/>in<sp/>public<sp/>analysis,<sp/>don&apos;t<sp/>think<sp/>they<sp/>are<sp/>taken<sp/>into<sp/>account<sp/>in<sp/>the<sp/>public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>likelihood<sp/>calculation<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>Lyalpha<sp/>likelihood<sp/>Lya_abg<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="154"><highlight class="comment"></highlight><highlight class="comment">//<sp/>commented<sp/>out<sp/>because<sp/>we<sp/>currently<sp/>don&apos;t<sp/>support<sp/>this<sp/>likelihood<sp/>due<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>issues<sp/>in<sp/>the<sp/>implementation<sp/>(not<sp/>following<sp/>MP<sp/>guidelines<sp/>so<sp/>it<sp/>does<sp/>not<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>work<sp/>through<sp/>the<sp/>GAMBIT<sp/>interface).<sp/>If<sp/>you<sp/>fix<sp/>these<sp/>issues<sp/>you<sp/>can<sp/>uncomment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>lines<sp/>below<sp/>to<sp/>have<sp/>the<sp/>model<sp/>for<sp/>the<sp/>nuisance<sp/>parameters<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MODEL<sp/>cosmo_nuisance_Lya_abg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>START_MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DEFINEPARS(T0a,T0s,gamma_a,gamma_s,Fz1,Fz2,Fz3,Fz4,F_UV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">///<sp/>contains<sp/>nuisance<sp/>params<sp/>from<sp/>ska1_IM_band1,ska1_IM_band2<sp/>and<sp/>ska1_pk<sp/>likelihoods<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="164"><highlight class="comment">///<sp/>use<sp/>this<sp/>model<sp/>for<sp/>a<sp/>combination<sp/>of<sp/>a<sp/>&apos;band&apos;<sp/>and<sp/>the<sp/>pk<sp/>likelihood</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ska1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>parameter<sp/>names:<sp/>beta_0^IM,beta_1^IM,beta_0^SKA1,beta_1^SKA1,beta_0^SKA2,beta_1^SKA2<sp/>but<sp/>macros<sp/>don&apos;t<sp/>like<sp/>^<sp/>-&gt;<sp/>have<sp/>to<sp/>take<sp/>care<sp/>of<sp/>renaming<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>data.mcmc_parameters<sp/>dictionary<sp/>for<sp/>MontePython</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>name<sp/>in<sp/>MP<sp/>likelihood:<sp/>epsilon,sigma_NL<sp/>renamed<sp/>to<sp/>epsilon_ska<sp/>&amp;<sp/>sigma_NL_ska,<sp/>have<sp/>to<sp/>translate<sp/>back<sp/>before<sp/>passing<sp/>to<sp/>MP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(you<sp/>can<sp/>not<sp/>scan<sp/>over<sp/>two<sp/>models<sp/>at<sp/>the<sp/>same<sp/>time<sp/>if<sp/>they<sp/>have<sp/>parameters<sp/>with<sp/>the<sp/>same<sp/>names.<sp/>When<sp/>two<sp/>models<sp/>with<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma_NL<sp/>are<sp/>in<sp/>use,<sp/>you<sp/>can<sp/>declare<sp/>the<sp/>parameter<sp/>sigma_NL_x<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>sigma_NL_y.<sp/>See<sp/>CosmoBit_tutorial.yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>an<sp/>example<sp/>how<sp/>to<sp/>use<sp/>&apos;same_as&apos;.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>DEFINEPARS(sigma_NL_ska,beta_0IM,beta_1IM,Omega_HI0,alpha_HI,beta_0SKA1,beta_1SKA1)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">///<sp/>child<sp/>of<sp/>cosmo_nuisance_ska1<sp/>model<sp/>containing<sp/>only<sp/>parameter<sp/>for<sp/>ska1_IM_band1<sp/>and<sp/>ka1_IM_band1<sp/>likelihoods<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ska1_IM_band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_ska1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>parameter<sp/>names:<sp/>beta_0^IM,beta_1^IM,beta_0^SKA1,beta_1^SKA1,beta_0^SKA2,beta_1^SKA2<sp/>but<sp/>macros<sp/>don&apos;t<sp/>like<sp/>^<sp/>-&gt;<sp/>have<sp/>to<sp/>take<sp/>care<sp/>of<sp/>renaming<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>data.mcmc_parameters<sp/>dictionary<sp/>for<sp/>MontePython</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>name<sp/>in<sp/>MP<sp/>likelihood:<sp/>epsilon,sigma_NL<sp/>renamed<sp/>to<sp/>epsilon_ska<sp/>&amp;<sp/>sigma_NL_ska,<sp/>have<sp/>to<sp/>translate<sp/>back<sp/>before<sp/>passing<sp/>to<sp/>MP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(you<sp/>can<sp/>not<sp/>scan<sp/>over<sp/>two<sp/>models<sp/>at<sp/>the<sp/>same<sp/>time<sp/>if<sp/>they<sp/>have<sp/>parameters<sp/>with<sp/>the<sp/>same<sp/>names.<sp/>When<sp/>two<sp/>models<sp/>with<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma_NL<sp/>are<sp/>in<sp/>use,<sp/>you<sp/>can<sp/>declare<sp/>the<sp/>parameter<sp/>sigma_NL_x<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>sigma_NL_y.<sp/>See<sp/>CosmoBit_tutorial.yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>an<sp/>example<sp/>how<sp/>to<sp/>use<sp/>&apos;same_as&apos;.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(sigma_NL_ska,beta_0IM,beta_1IM,Omega_HI0,alpha_HI)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_ska1_IM_band_to_cosmo_nuisance_ska1)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">///<sp/>child<sp/>of<sp/>cosmo_nuisance_ska1_IM_band<sp/>model<sp/>containing<sp/>only<sp/>parameter<sp/>for<sp/>ska1_IM_band1<sp/>and<sp/>ka1_IM_band1<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="192"><highlight class="comment">///<sp/>excluding<sp/>nuisance<sp/>parameters<sp/>Omega_HI0<sp/>and<sp/>alphaHI<sp/>(energy<sp/>density<sp/>and<sp/>redshift<sp/>dependence<sp/>of<sp/>neutral<sp/>hydrogen)</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ska1_IM_band_noHI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_ska1_IM_band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(sigma_NL_ska,beta_0IM,beta_1IM)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_ska1_IM_band_noHI_to_cosmo_nuisance_ska1_IM_band)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">///<sp/>child<sp/>of<sp/>cosmo_nuisance_ska<sp/>model<sp/>containing<sp/>only<sp/>parameter<sp/>for<sp/>ska_pk<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ska1_pk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PARENT<sp/>cosmo_nuisance_ska1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINEPARS(sigma_NL_ska,beta_0SKA1,beta_1SKA1)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(cosmo_nuisance_ska1_pk_to_cosmo_nuisance_ska1)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>PARENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">///<sp/>nuisance<sp/>parameters<sp/>for<sp/>ska1_lensing<sp/>and<sp/>ska2_lensing<sp/>likelihoods<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ska_lensing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>DEFINEPARS(epsilon_ska)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment">///<sp/>model<sp/>containing<sp/>only<sp/>parameter<sp/>for<sp/>ska2_pk<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="217"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_ska2_pk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>DEFINEPARS(sigma_NL_ska,beta_0SKA2,beta_1SKA2)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">///<sp/>nuisance<sp/>params<sp/>for<sp/>spt<sp/>and<sp/>spt_2500<sp/>likelihood<sp/>implemented<sp/>in<sp/>MontePython</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_spt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>DEFINEPARS(SPT_SZ,SPT_PS,SPT_CL)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Spectral<sp/>distortions<sp/>--<sp/>FIRAS,<sp/>PIXIE,<sp/>advanced<sp/>PIXIE<sp/>(aka.<sp/>PRISM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_SpectralDistortions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_delta_T,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_T_D)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_beta_D,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_A_D)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_T_CIB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_beta_CIB,<sp/><sp/><sp/>sd_A_CIB)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_alpha_sync,<sp/><sp/><sp/><sp/><sp/><sp/>sd_omega_sync,<sp/>sd_A_sync)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_T_e,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_EM)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_nu_p_spin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_A_spin,<sp/><sp/><sp/><sp/><sp/>sd_A_CO)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>DEFINEPARS(sd_y_reio_nuisance)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment">///<sp/>add<sp/>new<sp/>model<sp/>holding<sp/>cosmological<sp/>nuisance<sp/>parameters</highlight></codeline>
<codeline lineno="241" refid="CosmoNuisanceModels_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>cosmo_nuisance_dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>DEFINEPARS(nuisance_param_1,nuisance_param_2,nuisance_param_3,nuisance_param_4,nuisance_param_5)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>DEFINEPARS(nuisance_param_6,nuisance_param_7,nuisance_param_8,nuisance_param_9,nuisance_param_10)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Models/include/gambit/Models/models/CosmoNuisanceModels.hpp"/>
  </compounddef>
</doxygen>
