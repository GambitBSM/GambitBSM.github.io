<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="demo_8hpp" kind="file" language="C++">
    <compoundname>demo.hpp</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_1d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="25" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_2d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="30" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_3d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="35" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_4d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="40" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_5d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="45" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_7d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="50" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>trivial_10d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="55" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>NormalDist</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="61" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>TestModel1D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="67" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a7c60e913478d07a44ac15c6fb2c5937f" prot="public" static="no">
        <name>MODEL</name>
        <initializer>demo_CAP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="268" column="9" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>a_cap</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="272" column="11" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="demo_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>get_a_cap</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="275" column="13" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo_8hpp_1ac41182ea5e6d17ccea668d77b0e56a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEPENDENCY</definition>
        <argsstring>(xsection, double) void MODEL_NAMESPACE</argsstring>
        <name>DEPENDENCY</name>
        <param>
          <type>xsection</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Models/include/gambit/Models/models/demo.hpp" line="278" column="5" bodyfile="Models/include/gambit/Models/models/demo.hpp" bodystart="278" bodyend="295"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>GAMBIT demonstration models.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer </para>
</simplesect>
<simplesect kind="date"><para>2013 May </para>
</simplesect>
<simplesect kind="date"><para>2014 Mar </para>
</simplesect>
<simplesect kind="date"><para>2019 Jul</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott </para>
</simplesect>
<simplesect kind="date"><para>2013 Sep</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>GAMBIT<sp/>demonstration<sp/>models.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>May</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Mar</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>Jul</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Sep</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__demo_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__demo_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_1d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_2d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1,<sp/>x2)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_3d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1,<sp/>x2,<sp/>x3)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_4d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1,<sp/>x2,<sp/>x3,<sp/>x4)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_5d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1,<sp/>x2,<sp/>x3,<sp/>x4,<sp/>x5)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_7d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1,<sp/>x2,<sp/>x3,<sp/>x4,<sp/>x5,<sp/>x6,<sp/>x7)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>trivial_10d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>DEFINEPARS(x1,<sp/>x2,<sp/>x3,<sp/>x4,<sp/>x5,<sp/>x6,<sp/>x7,<sp/>x8,<sp/>x9,<sp/>x10)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>normal<sp/>distribution<sp/>toy<sp/>model<sp/>used<sp/>in<sp/>ExampleBit_A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>NormalDist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>DEFINEPARS(mu,sigma)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>one-parameter<sp/>model<sp/>for<sp/>testing<sp/>simple<sp/>prior<sp/>transformations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>TestModel1D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>DEFINEPARS(x)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>are<sp/>some<sp/>examples<sp/>that<sp/>demonstrate<sp/>the<sp/>available<sp/>ways<sp/>to<sp/>declare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>models<sp/>and<sp/>their<sp/>relationships.<sp/><sp/>These<sp/>are<sp/>commented<sp/>out<sp/>as<sp/>they<sp/>are<sp/>not<sp/>necessary<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>of<sp/>the<sp/>module<sp/>examples,<sp/>but<sp/>you<sp/>can<sp/>uncomment<sp/>and<sp/>experiment<sp/>with<sp/>them<sp/>in<sp/>order<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>learn<sp/>about<sp/>model<sp/>declaration<sp/>in<sp/>GAMBIT<sp/>if<sp/>you<sp/>like.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">#include<sp/>&quot;gambit/Logs/logging.hpp&quot;</highlight></codeline>
<codeline lineno="80"><highlight class="comment">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">//<sp/>Start<sp/>a<sp/>new<sp/>model<sp/>family<sp/>tree,<sp/>beginning<sp/>at<sp/>the<sp/>top.<sp/>The_ancient_one<sp/>has<sp/>no<sp/>parent.</highlight></codeline>
<codeline lineno="83"><highlight class="comment">#define<sp/>MODEL<sp/>the_ancient_one</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/>DEFINEPARS(p1,p2,p3)</highlight></codeline>
<codeline lineno="86"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>model<sp/>that<sp/>everything<sp/>else<sp/>is<sp/>connected<sp/>through,<sp/>but<sp/>really<sp/>does<sp/>nothing<sp/>--<sp/>kinda<sp/>like<sp/>Kevin<sp/>Bacon.</highlight></codeline>
<codeline lineno="89"><highlight class="comment">//<sp/>Feel<sp/>free<sp/>to<sp/>rename<sp/>it<sp/>after<sp/>your<sp/>most<sp/>unresponsive<sp/>senior<sp/>collaborator.</highlight></codeline>
<codeline lineno="90"><highlight class="comment">#define<sp/>MODEL<sp/>kevin_bacon</highlight></codeline>
<codeline lineno="91"><highlight class="comment">#define<sp/>PARENT<sp/>the_ancient_one</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/>DEFINEPARS(M1,M2,M3)<sp/><sp/><sp/><sp/>//<sp/>You<sp/>can<sp/>call<sp/>this<sp/>more<sp/>than<sp/>once:</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>DEFINEPARS(AU1,AU2,AU3)</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/>//<sp/>Declare<sp/>the<sp/>interpret-as-parent<sp/>function.<sp/><sp/>This<sp/>function<sp/>gets<sp/>CAPABILITY<sp/>=<sp/>PARENT_parameters,</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/>//<sp/>TYPE<sp/>=<sp/>ModelParameters<sp/>and<sp/>MODULE<sp/>=<sp/>MODEL.<sp/><sp/>It<sp/>converts<sp/>parameter<sp/>values<sp/>of<sp/>the<sp/>MODEL<sp/>to</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/>//<sp/>parameter<sp/>values<sp/>of<sp/>the<sp/>PARENT.<sp/><sp/>The<sp/>user-defined<sp/>part<sp/>of<sp/>the<sp/>function<sp/>can<sp/>go<sp/>anywhere,<sp/>so</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/>//<sp/>long<sp/>as<sp/>you<sp/>properly<sp/>attach<sp/>it<sp/>to<sp/>this<sp/>declaration<sp/>(which<sp/>puts<sp/>the<sp/>function<sp/>here:</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/>//<sp/>Gambit::Models::MODEL::&lt;FUNCTION&gt;).<sp/><sp/>The<sp/>MODEL_NAMESPACE<sp/>macro<sp/>gets<sp/>you<sp/>the<sp/>Gambit::Models::MODEL</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/>//<sp/>part,<sp/>if<sp/>MODEL<sp/>is<sp/>defined.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(kevin_bacon_IAPfunc)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/>//<sp/>Define<sp/>the<sp/>interpret-as-parent<sp/>function.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/>//<sp/>Note<sp/>that<sp/>&quot;myparams&quot;<sp/>must<sp/>be<sp/>const.<sp/>You&apos;re<sp/>not<sp/>allowed<sp/>to<sp/>change<sp/>them<sp/>here.<sp/>Change<sp/>&quot;parentparams&quot;.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/>//<sp/>To<sp/>be<sp/>able<sp/>to<sp/>access<sp/>the<sp/>Pipes,<sp/>in<sp/>case<sp/>dependencies<sp/>exist,<sp/>this<sp/>function<sp/>has<sp/>to<sp/>be<sp/>put<sp/>in</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/>//<sp/>the<sp/>correct<sp/>namespace,<sp/>and<sp/>be<sp/>defined<sp/>after<sp/>it<sp/>has<sp/>been<sp/>declared<sp/>using<sp/>the<sp/>INTERPRET_AS_PARENT<sp/>macro.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>//<sp/>To<sp/>make<sp/>it<sp/>easier<sp/>to<sp/>attach<sp/>the<sp/>function<sp/>definition<sp/>to<sp/>the<sp/>correct<sp/>declaration,<sp/>use<sp/>the<sp/>macro<sp/>&quot;MODEL_NAMESPACE&quot;.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/>void<sp/>MODEL_NAMESPACE::kevin_bacon_IAPfunc<sp/>(const<sp/>ModelParameters<sp/>&amp;myparams,<sp/>ModelParameters<sp/>&amp;parentparams)</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;&quot;Running<sp/>interpret_as_parent<sp/>calculations<sp/>for<sp/>kevin_bacon<sp/>-&gt;<sp/>the_ancient_one<sp/>...&quot;&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>M1<sp/>=<sp/>myparams[&quot;M1&quot;];</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>M2<sp/>=<sp/>myparams[&quot;M2&quot;];</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>M3<sp/>=<sp/>myparams[&quot;M3&quot;];</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>AU1<sp/>=<sp/>myparams[&quot;AU1&quot;];</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>AU2<sp/>=<sp/>myparams[&quot;AU2&quot;];</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>AU3<sp/>=<sp/>myparams[&quot;AU3&quot;];</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;p1&quot;,<sp/>0.01*M1*M2+AU1);</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;p2&quot;,<sp/>0.10*M2*M3+AU2);</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;p3&quot;,<sp/>1.00*M1*M3+AU3);</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="comment">#undef<sp/>PARENT</highlight></codeline>
<codeline lineno="125"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment">#define<sp/>MODEL<sp/>demo_A</highlight></codeline>
<codeline lineno="129"><highlight class="comment">#define<sp/>PARENT<sp/>kevin_bacon</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/>DEFINEPARS(M0,<sp/>M12,<sp/>A0,<sp/>Mstop,<sp/>tanb,<sp/>sgnmu)</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/>//<sp/>Attach<sp/>a<sp/>CAPABILITY<sp/>to<sp/>a<sp/>parameter.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>//<sp/>This<sp/>creates<sp/>a<sp/>new<sp/>module<sp/>function<sp/>with<sp/>CAPABILITY<sp/>=<sp/>Mstop_obs,<sp/>TYPE<sp/>=<sp/>double<sp/>and<sp/>MODULE<sp/>=<sp/>MODEL.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>MAP_TO_CAPABILITY(Mstop,<sp/>Mstop_obs)</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/>//<sp/>Declare<sp/>the<sp/>interpret-as-parent<sp/>function<sp/>for<sp/>going<sp/>up<sp/>the<sp/>model<sp/>hierarchy<sp/>to<sp/>kevin_bacon.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(demo_A_IAPfunc)</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/>//<sp/>Give<sp/>the<sp/>new<sp/>interpret-as-parent<sp/>function<sp/>a<sp/>dependency,<sp/>a<sp/>la<sp/>regular<sp/>GAMBIT<sp/>module<sp/>functions.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>INTERPRET_AS_PARENT_DEPENDENCY(id,<sp/>std::string)</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/>//<sp/>Define<sp/>the<sp/>interpret-as-parent<sp/>function.<sp/><sp/>This<sp/>can<sp/>also<sp/>be<sp/>done<sp/>in<sp/>a<sp/>source<sp/>file<sp/>if<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/>void<sp/>MODEL_NAMESPACE::demo_A_IAPfunc<sp/>(const<sp/>ModelParameters<sp/>&amp;myparams,<sp/>ModelParameters<sp/>&amp;parentparams)</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Finding<sp/>the<sp/>correct<sp/>Pipes<sp/>to<sp/>retrieve<sp/>dependencies<sp/>in<sp/>model<sp/>functions<sp/>can<sp/>take</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>a<sp/>little<sp/>effort.<sp/><sp/>To<sp/>save<sp/>this<sp/>effort,<sp/>use<sp/>the<sp/>USE_MODEL_PIPE(MODEL_X)<sp/>macro.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>This<sp/>macro<sp/>just<sp/>expands<sp/>to<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/>using<sp/>namespace<sp/>Gambit::Models::MODEL::Pipes::MODEL_X_parameters;</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>which<sp/>points<sp/>to<sp/>the<sp/>Pipes<sp/>for<sp/>the<sp/>module<sp/>function<sp/>that<sp/>wraps<sp/>the<sp/>user-defined</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>interpret-as<sp/>function.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>USE_MODEL_PIPE(PARENT)</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;&quot;Running<sp/>interpret_as_parent<sp/>calculations<sp/>for<sp/>demo_A<sp/>-&gt;<sp/>kevin_bacon<sp/>...&quot;&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>M0<sp/><sp/>=<sp/>myparams[&quot;M0&quot;];</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>A0<sp/><sp/>=<sp/>myparams[&quot;A0&quot;];</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Play<sp/>around<sp/>with<sp/>the<sp/>extra<sp/>info<sp/>obtained<sp/>from<sp/>the<sp/>dependency.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;&quot;identity<sp/>dependency<sp/>has<sp/>supplied<sp/>the<sp/>value:<sp/>&quot;&lt;&lt;*Dep::id&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Grab<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>parent<sp/>parameter<sp/>object<sp/>and<sp/>set<sp/>some<sp/>values.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>parent<sp/>parameter<sp/>object<sp/>already<sp/>exists<sp/>if<sp/>we<sp/>have<sp/>gotten<sp/>this</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>far<sp/>(it<sp/>was<sp/>created<sp/>along<sp/>with<sp/>the<sp/>functor<sp/>that<sp/>wraps<sp/>this<sp/>function).</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;M1&quot;,<sp/>M0);</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;M2&quot;,<sp/>0.5*M0);</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;M3&quot;,<sp/>3*M0);</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;AU1&quot;,<sp/>A0);</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;AU2&quot;,<sp/>2*A0);</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;AU3&quot;,<sp/>0);</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="comment">#undef<sp/>PARENT</highlight></codeline>
<codeline lineno="173"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">//<sp/>Alternative<sp/>parameterisations<sp/>of<sp/>models<sp/>are<sp/>treated<sp/>just<sp/>like<sp/>any<sp/>other<sp/>model.<sp/>You<sp/>may<sp/>like<sp/>to<sp/>have</highlight></codeline>
<codeline lineno="177"><highlight class="comment">//<sp/>a<sp/>&quot;primary&quot;<sp/>parameterisation,<sp/>and<sp/>&quot;alternative&quot;<sp/>parameterisations<sp/>which<sp/>are<sp/>child<sp/>models<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="178"><highlight class="comment">//<sp/>primary,<sp/>with<sp/>interpret-as-parent<sp/>functions<sp/>defined<sp/>to<sp/>convert<sp/>from<sp/>the<sp/>alternate<sp/>to<sp/>the<sp/>primary<sp/>parameters.</highlight></codeline>
<codeline lineno="179"><highlight class="comment">#define<sp/>MODEL<sp/>demo_A_alternative</highlight></codeline>
<codeline lineno="180"><highlight class="comment">#define<sp/>PARENT<sp/>demo_A</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/>DEFINEPARS(M0,<sp/>M12,<sp/>A0,<sp/>Mstop,<sp/>X_rotated,<sp/>Y_rotated)</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(demo_A_alternative_IAPfunc)</highlight></codeline>
<codeline lineno="184"><highlight class="comment"></highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/>void<sp/>MODEL_NAMESPACE::demo_A_alternative_IAPfunc<sp/>(const<sp/>ModelParameters<sp/>&amp;myparams,<sp/>ModelParameters<sp/>&amp;parentparams)</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>the<sp/>Pipes<sp/>for<sp/>the<sp/>interpret-as-parent<sp/>function</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/>USE_MODEL_PIPE(PARENT)</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>alternative<sp/>model<sp/>parameters</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>xrot<sp/>=<sp/>myparams[&quot;X_rotated&quot;];</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>yrot<sp/>=<sp/>myparams[&quot;Y_rotated&quot;];</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Convert<sp/>to<sp/>primary<sp/>model<sp/>parameters</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;M0&quot;,<sp/>myparams[&quot;M0&quot;]);</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;M12&quot;,<sp/>myparams[&quot;M12&quot;]);</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;A0&quot;,<sp/>myparams[&quot;A0&quot;]);</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;tanb&quot;,<sp/>0.5*(xrot+yrot));</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;sgnmu&quot;,<sp/>0.5*(xrot-yrot));</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="comment">#undef<sp/>PARENT</highlight></codeline>
<codeline lineno="200"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="201"><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">//<sp/>Make<sp/>a<sp/>second<sp/>branch<sp/>of<sp/>the<sp/>model<sp/>tree,<sp/>and<sp/>connect<sp/>it<sp/>to<sp/>the<sp/>first<sp/>branch<sp/>using<sp/>the<sp/>INTERPRET_AS_X<sp/>macro.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment">#define<sp/>MODEL<sp/>demo_B_ancestor</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/>DEFINEPARS(X,<sp/>Y,<sp/>Z)</highlight></codeline>
<codeline lineno="208"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="209"><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">#define<sp/>MODEL<sp/>demo_B</highlight></codeline>
<codeline lineno="211"><highlight class="comment">#define<sp/>PARENT<sp/>demo_B_ancestor</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/>DEFINEPARS(X,<sp/>Y,<sp/>Z)</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(to_parent)</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/>INTERPRET_AS_X_FUNCTION(kevin_bacon,to_kevin_bacon)</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/>void<sp/>MODEL_NAMESPACE::to_parent(const<sp/>ModelParameters<sp/>&amp;myparams,<sp/>ModelParameters<sp/>&amp;parentparams)</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>the<sp/>Pipes<sp/>for<sp/>the<sp/>interpret-as-parent<sp/>function</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>USE_MODEL_PIPE(PARENT)</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;&quot;Running<sp/>interpret_as_parent<sp/>calculations<sp/>for<sp/>demo_B<sp/>-&gt;<sp/>demo_B_ancestor<sp/>...&quot;&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;X&quot;,myparams[&quot;X&quot;]);</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;Y&quot;,2.0*myparams[&quot;Y&quot;]);</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;Z&quot;,myparams[&quot;Z&quot;]);</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/>void<sp/>MODEL_NAMESPACE::to_kevin_bacon(const<sp/>ModelParameters<sp/>&amp;myparams,<sp/>ModelParameters<sp/>&amp;kevin_bacon_params)</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>the<sp/>Pipes<sp/>for<sp/>the<sp/>interpret-as-X<sp/>function</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>USE_MODEL_PIPE(kevin_bacon)</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;&quot;Running<sp/>interpret_as_X<sp/>calculations<sp/>for<sp/>demo_B<sp/>-&gt;<sp/>kevin_bacon<sp/>...&quot;&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>kevin_bacon_params.setValue(&quot;M1&quot;,myparams[&quot;X&quot;]);</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>kevin_bacon_params.setValue(&quot;M2&quot;,myparams[&quot;Y&quot;]);</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>kevin_bacon_params.setValue(&quot;M3&quot;,myparams[&quot;Z&quot;]);</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>kevin_bacon_params.setValue(&quot;AU1&quot;,1.0);</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>kevin_bacon_params.setValue(&quot;AU2&quot;,2.0);</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>kevin_bacon_params.setValue(&quot;AU3&quot;,3.0);</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="comment">#undef<sp/>PARENT</highlight></codeline>
<codeline lineno="240"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="241"><highlight class="comment"></highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">#define<sp/>MODEL<sp/>demo_B_subspace</highlight></codeline>
<codeline lineno="244"><highlight class="comment">#define<sp/>PARENT<sp/>demo_B</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/>DEFINEPARS(Y,Z)</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/>INTERPRET_AS_PARENT_FUNCTION(to_parent)</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/>void<sp/>MODEL_NAMESPACE::to_parent(const<sp/>ModelParameters<sp/>&amp;myparams,<sp/>ModelParameters<sp/>&amp;parentparams)</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>the<sp/>Pipes<sp/>for<sp/>the<sp/>interpret-as-parent<sp/>function</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>USE_MODEL_PIPE(PARENT)</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;&quot;Running<sp/>interpret_as_parent<sp/>calculations<sp/>for<sp/>demo_B_subspace<sp/>-&gt;<sp/>demo_B<sp/>...&quot;&lt;&lt;EOM;</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;X&quot;,1.0);</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;Y&quot;,myparams[&quot;Y&quot;]);</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>parentparams.setValue(&quot;Z&quot;,myparams[&quot;Z&quot;]);</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="comment">#undef<sp/>PARENT</highlight></codeline>
<codeline lineno="259"><highlight class="comment">#undef<sp/>MODEL</highlight></codeline>
<codeline lineno="260"><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Model<sp/>demonstration<sp/>the<sp/>use<sp/>of<sp/>&quot;ordinary&quot;<sp/>module<sp/>functions<sp/>directly<sp/>in<sp/>a<sp/>model<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(rather<sp/>than<sp/>putting<sp/>them<sp/>in<sp/>some<sp/>other<sp/>module)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basically<sp/>the<sp/>generalisation<sp/>of<sp/>MAP_TO_CAPABILITY,<sp/>just<sp/>using<sp/>the<sp/>normal<sp/>module<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODEL<sp/>demo_CAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>START_MODEL</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>DEFINEPARS(a,b,c)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#define<sp/>CAPABILITY<sp/>a_cap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_a_cap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODELS(demo_CAP)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(xsection,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>From<sp/>ExampleBit_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>module-function<sp/>macros<sp/>not<sp/>tested<sp/>in<sp/>model<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Please<sp/>submit<sp/>a<sp/>bug<sp/>report<sp/>if<sp/>they<sp/>don&apos;t<sp/>work<sp/>for<sp/>you!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;module<sp/>function&quot;<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MODEL_NAMESPACE::get_a_cap(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::get_a_cap;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsec<sp/>=<sp/>*Dep::xsection;<sp/></highlight><highlight class="comment">//<sp/>Just<sp/>for<sp/>demonstration<sp/>purposes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger()&lt;&lt;</highlight><highlight class="stringliteral">&quot;Running<sp/>&apos;get_a_cap&apos;<sp/>function<sp/>in<sp/>model-module<sp/>&apos;demo_CAP&apos;&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Param.at(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">)<sp/>*<sp/>xsec;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__demo_hpp__)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Models/include/gambit/Models/models/demo.hpp"/>
  </compounddef>
</doxygen>
