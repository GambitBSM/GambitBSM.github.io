<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1SpecBit_1_1MSSMSpec" kind="class" language="C++" prot="public">
    <compoundname>Gambit::SpecBit::MSSMSpec</compoundname>
    <basecompoundref refid="classGambit_1_1Spec" prot="public" virt="non-virtual">Gambit::Spec&lt; MSSMSpec&lt; MI &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class MI</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1adad2d9b183964cda26672c183b5bbcfb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GetterMaps</type>
        <definition>MSSMSpec&lt; MI &gt;::GetterMaps Gambit::SpecBit::MSSMSpec&lt; MI &gt;::fill_getter_maps</definition>
        <argsstring>()</argsstring>
        <name>fill_getter_maps</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::fill_getter_maps</qualifiedname>
        <briefdescription>
<para>Map filler overrides. </para>
        </briefdescription>
        <detaileddescription>
<para>Fillers for &quot;Running&quot; parameters. </para>
        </detaileddescription>
        <inbodydescription>
<para>mass2 - mass dimension 2 parameters</para>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="146" column="31" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="430" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1aaba044712adba38bfb394180a4aa001b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SetterMaps</type>
        <definition>MSSMSpec&lt; MI &gt;::SetterMaps Gambit::SpecBit::MSSMSpec&lt; MI &gt;::fill_setter_maps</definition>
        <argsstring>()</argsstring>
        <name>fill_setter_maps</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::fill_setter_maps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>mass2 - mass dimension 2 parameters</para>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="147" column="31" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="628" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a7e3fa3f9930f48da22354699a79d4d3e" prot="public" static="no">
        <type><ref refid="classGambit_1_1SpecBit_1_1MSSMSpec" kindref="compound">MSSMSpec</ref>&lt; MI &gt;</type>
        <definition>typedef MSSMSpec&lt;MI&gt; Gambit::SpecBit::MSSMSpec&lt; MI &gt;::Self</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::Self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>These typedefs are inherited, but the name lookup doesn&apos;t work so smoothly in templated wrapper classes, so need to help them along: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="70" column="30" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a9cd42b2aa941317bbb73777957008496" prot="public" static="no">
        <type>Self::MTget</type>
        <definition>typedef Self::MTget Gambit::SpecBit::MSSMSpec&lt; MI &gt;::MTget</definition>
        <argsstring></argsstring>
        <name>MTget</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::MTget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="71" column="42" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a8b8aaec9f0adef6bdbc4f611980dda6c" prot="public" static="no">
        <type>Self::MTset</type>
        <definition>typedef Self::MTset Gambit::SpecBit::MSSMSpec&lt; MI &gt;::MTset</definition>
        <argsstring></argsstring>
        <name>MTset</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::MTset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="72" column="42" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a54698e0ff91a7bb092eecfb6ff644a31" prot="public" static="no">
        <type>Self::GetterMaps</type>
        <definition>typedef Self::GetterMaps Gambit::SpecBit::MSSMSpec&lt; MI &gt;::GetterMaps</definition>
        <argsstring></argsstring>
        <name>GetterMaps</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::GetterMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="73" column="47" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a92e66e1bc7f7d16a34442fb0b5f525c6" prot="public" static="no">
        <type>Self::SetterMaps</type>
        <definition>typedef Self::SetterMaps Gambit::SpecBit::MSSMSpec&lt; MI &gt;::SetterMaps</definition>
        <argsstring></argsstring>
        <name>SetterMaps</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::SetterMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="74" column="47" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1acbef32603bfe2f951321e938555d51ed" prot="public" static="no">
        <type><ref refid="structGambit_1_1SpecTraits" kindref="compound">SpecTraits</ref>&lt; <ref refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a7e3fa3f9930f48da22354699a79d4d3e" kindref="member">Self</ref> &gt;::Model</type>
        <definition>typedef SpecTraits&lt;Self&gt;::Model Gambit::SpecBit::MSSMSpec&lt; MI &gt;::Model</definition>
        <argsstring></argsstring>
        <name>Model</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::Model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="75" column="49" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a536c1b2ccbf5571987bfe571495a747a" prot="public" static="no">
        <type><ref refid="structGambit_1_1SpecTraits" kindref="compound">SpecTraits</ref>&lt; <ref refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a7e3fa3f9930f48da22354699a79d4d3e" kindref="member">Self</ref> &gt;::Input</type>
        <definition>typedef SpecTraits&lt;Self&gt;::Input Gambit::SpecBit::MSSMSpec&lt; MI &gt;::Input</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::Input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="76" column="49" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a17dcec71f4604ac6173857880d67a537" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::SpecBit::MSSMSpec&lt; MI &gt;::backend_name</definition>
        <argsstring></argsstring>
        <name>backend_name</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::backend_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="63" column="17" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1SpecBit_1_1MSSMSpec_1ab30bda62cdac3aa9225936442e7ca92c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
        <definition>str Gambit::SpecBit::MSSMSpec&lt; MI &gt;::backend_version</definition>
        <argsstring></argsstring>
        <name>backend_version</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::backend_version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="64" column="17" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a1ed11ada16d219f9f742bed032acc54d" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Gambit::SpecBit::MSSMSpec&lt; MI &gt;::_index_offset</definition>
        <argsstring></argsstring>
        <name>_index_offset</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::_index_offset</qualifiedname>
        <initializer>= MI::index_offset</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="65" column="30" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a0352f6c931ee6afbcf1d1e910dc46f5b" prot="public" static="no" mutable="no">
        <type>MI</type>
        <definition>MI Gambit::SpecBit::MSSMSpec&lt; MI &gt;::model_interface</definition>
        <argsstring></argsstring>
        <name>model_interface</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::model_interface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="91" column="16" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a2d8e2422e0846698ee5f8c747710cc29" prot="public" static="no" mutable="no">
        <type><ref refid="classGambit_1_1DummyInput" kindref="compound">DummyInput</ref></type>
        <definition>DummyInput Gambit::SpecBit::MSSMSpec&lt; MI &gt;::dummyinput</definition>
        <argsstring></argsstring>
        <name>dummyinput</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::dummyinput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="94" column="24" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a15d94bbe4627accb2a563b680a312f4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Gambit::SpecBit::MSSMSpec&lt; MI &gt;::index_offset</definition>
        <argsstring>()</argsstring>
        <name>index_offset</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::index_offset</qualifiedname>
        <briefdescription>
<para>Interface function overrides. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="79" column="24" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a9a54f7a48b7d223f46fe1c79499fae3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Gambit::SpecBit::MSSMSpec&lt; MI &gt;::GetScale</definition>
        <argsstring>() const</argsstring>
        <name>GetScale</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::GetScale</qualifiedname>
        <reimplements refid="classGambit_1_1SubSpectrum_1a7bd448d64af954e4b596f4a6eebea0e9">GetScale</reimplements>
        <briefdescription>
<para>Returns the renormalisation scale of parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="80" column="28" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1ae4dbeb2e2fd5dd72d48ad97293791b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::SpecBit::MSSMSpec&lt; MI &gt;::SetScale</definition>
        <argsstring>(double scale)</argsstring>
        <name>SetScale</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::SetScale</qualifiedname>
        <reimplements refid="classGambit_1_1SubSpectrum_1aa6014ef072831d0117332e3df719ebf3">SetScale</reimplements>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually set the renormalisation scale of parameters somewhat dangerous to allow this but may be needed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="81" column="26" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a691b616d88f2d06f239372a687801eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::SpecBit::MSSMSpec&lt; MI &gt;::RunToScaleOverride</definition>
        <argsstring>(double scale)</argsstring>
        <name>RunToScaleOverride</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::RunToScaleOverride</qualifiedname>
        <reimplements refid="classGambit_1_1SubSpectrum_1a64445baba3f7a8bf116bea7caba1a52c">RunToScaleOverride</reimplements>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Run spectrum to new scale. </para>
        </briefdescription>
        <detaileddescription>
<para>Functions to be overridden in classes derived from <ref refid="classGambit_1_1Spec" kindref="compound">Spec&lt;Derived&gt;</ref> (i.e. the final wrappers) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="82" column="26" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a59c12ccab66d2e6cec2fb06c910c02bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::SpecBit::MSSMSpec&lt; MI &gt;::MSSMSpec</definition>
        <argsstring>()</argsstring>
        <name>MSSMSpec</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::MSSMSpec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="85" column="13" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a603a851d799d849ab0afd88dffc10d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::SpecBit::MSSMSpec&lt; MI &gt;::MSSMSpec</definition>
        <argsstring>(MI, str backend_name, str backend_version)</argsstring>
        <name>MSSMSpec</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::MSSMSpec</qualifiedname>
        <param>
          <type>MI</type>
          <defname>mi</defname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <declname>backend_name</declname>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref></type>
          <declname>backend_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="86" column="13" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a9c0ad2c2a6f0966abcab3ad466b6eaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Gambit::SpecBit::MSSMSpec&lt; MI &gt;::~MSSMSpec</definition>
        <argsstring>()</argsstring>
        <name>~MSSMSpec</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::~MSSMSpec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="97" column="21" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="77" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a543e556e05298251a77c8cb0bfa44087" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Model &amp;</type>
        <definition>Model &amp; Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_Model</definition>
        <argsstring>()</argsstring>
        <name>get_Model</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_Model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="100" column="19" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1af21b8689f88b36194b0e7b1240d25101" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Input &amp;</type>
        <definition>Input &amp; Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_Input</definition>
        <argsstring>()</argsstring>
        <name>get_Input</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_Input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="101" column="19" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1af6f8365bf4cbdb0152910d915653465c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Model &amp;</type>
        <definition>const Model &amp; Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_Model</definition>
        <argsstring>() const</argsstring>
        <name>get_Model</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_Model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="102" column="25" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a30d092152edd911b9339cee9648d1b70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Input &amp;</type>
        <definition>const Input &amp; Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_Input</definition>
        <argsstring>() const</argsstring>
        <name>get_Input</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_Input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="103" column="25" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a20c2aa33e1a22e0f91009ea73892f979" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_lsp_mass</definition>
        <argsstring>(int &amp;particle_type, int &amp;row, int &amp;col) const</argsstring>
        <name>get_lsp_mass</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_lsp_mass</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>particle_type</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>sneutrinos 1</para>
<para>up squarks 2</para>
<para>down squarks 3</para>
<para>sleptons 4</para>
<para>charginos 5</para>
<para>gluino 6</para>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="106" column="28" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="115" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1ac0203c26ba15cf4b791614959eed1154" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_numbers_stable_particles</definition>
        <argsstring>() const</argsstring>
        <name>get_numbers_stable_particles</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_numbers_stable_particles</qualifiedname>
        <reimplements refid="classGambit_1_1SubSpectrum_1a5e9acc22b9d462e531c50b5727c870c1">get_numbers_stable_particles</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>There may be more than one <emphasis>new</emphasis> stable particle this method will tell you how many. If more than zero you probbaly <emphasis>need</emphasis> to know what model you are working on, so we don&apos;t give all stable particles </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="108" column="25" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a156e1453ea7cc77580add83340cc0780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string Gambit::SpecBit::MSSMSpec&lt; MI &gt;::AccessError</definition>
        <argsstring>(std::string state) const</argsstring>
        <name>AccessError</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::AccessError</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="110" column="33" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a3774ee9691042a89e06e3835407cd9b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::SpecBit::MSSMSpec&lt; MI &gt;::add_to_SLHAea</definition>
        <argsstring>(int slha_version, SLHAstruct &amp;slha) const</argsstring>
        <name>add_to_SLHAea</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::add_to_SLHAea</qualifiedname>
        <reimplements refid="classGambit_1_1SubSpectrum_1acdbd6db5cc3b473b7e6445bfcf686f64">add_to_SLHAea</reimplements>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Add spectrum information to an SLHAea object (if possible) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="113" column="26" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec.hpp" bodystart="82" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a499a16d6f7cb301837103291aa44bf91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MSSMlike</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_lowe_data_from</definition>
        <argsstring>(MSSMlike &amp;othermodel)</argsstring>
        <name>get_lowe_data_from</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_lowe_data_from</qualifiedname>
        <param>
          <type>MSSMlike &amp;</type>
          <declname>othermodel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO: Need to implement this properly... Copy low energy spectrum information from another model object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="119" column="18" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="119" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1SpecBit_1_1MSSMSpec_1a4bb2b60a6f5213b1f447f3a7e731f7f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::SpecBit::MSSMSpec&lt; MI &gt;::get_external_spectrum</definition>
        <argsstring>(typename MI::Model &amp;othermodel)</argsstring>
        <name>get_external_spectrum</name>
        <qualifiedname>Gambit::SpecBit::MSSMSpec::get_external_spectrum</qualifiedname>
        <param>
          <type>typename MI::Model &amp;</type>
          <declname>othermodel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="139" column="18" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="139" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Gambit::SpecBit::MSSMSpec&lt; MI &gt;</label>
        <link refid="classGambit_1_1SpecBit_1_1MSSMSpec"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Gambit::SubSpectrum</label>
        <link refid="classGambit_1_1SubSpectrum"/>
      </node>
      <node id="2">
        <label>Gambit::Spec&lt; MSSMSpec&lt; MI &gt; &gt;</label>
        <link refid="classGambit_1_1Spec"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Gambit::DummyInput</label>
        <link refid="classGambit_1_1DummyInput"/>
      </node>
      <node id="4">
        <label>Gambit::DummyModel</label>
        <link refid="classGambit_1_1DummyModel"/>
      </node>
      <node id="1">
        <label>Gambit::SpecBit::MSSMSpec&lt; MI &gt;</label>
        <link refid="classGambit_1_1SpecBit_1_1MSSMSpec"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>dummyinput</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Gambit::SubSpectrum</label>
        <link refid="classGambit_1_1SubSpectrum"/>
      </node>
      <node id="2">
        <label>Gambit::Spec&lt; MSSMSpec&lt; MI &gt; &gt;</label>
        <link refid="classGambit_1_1Spec"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>dummymodel</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>dummyinput</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" line="60" column="7" bodyfile="SpecBit/include/gambit/SpecBit/MSSMSpec_head.hpp" bodystart="61" bodyend="149"/>
    <listofallmembers>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a1ed11ada16d219f9f742bed032acc54d" prot="private" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>_index_offset</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a156e1453ea7cc77580add83340cc0780" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>AccessError</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a3774ee9691042a89e06e3835407cd9b2" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>add_to_SLHAea</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a17dcec71f4604ac6173857880d67a537" prot="private" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>backend_name</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1ab30bda62cdac3aa9225936442e7ca92c" prot="private" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>backend_version</name></member>
      <member refid="classGambit_1_1Spec_1a55f346d5bd5a3246a47a5db8404949fb" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>clone</name></member>
      <member refid="classGambit_1_1Spec_1a80dddcba2892f90ccef373a0f51c3710" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>Contents</name></member>
      <member refid="classGambit_1_1Spec_1a7ecd550a7de5305518b34181187c3544" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>D</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a2d8e2422e0846698ee5f8c747710cc29" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>dummyinput</name></member>
      <member refid="classGambit_1_1Spec_1a52e6395fb74217ac8421fbb8beeed75c" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>dummymodel</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1adad2d9b183964cda26672c183b5bbcfb" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>fill_getter_maps</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1aaba044712adba38bfb394180a4aa001b" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>fill_setter_maps</name></member>
      <member refid="classGambit_1_1Spec_1a32039cdccf1c944121203d2eec5e6294" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get</name></member>
      <member refid="classGambit_1_1Spec_1a48c24aae484150638d00063f4f3784ef" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get</name></member>
      <member refid="classGambit_1_1Spec_1a45d36489185d33a2d32ac94a95e61e04" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a4aa3c288df9625876aa5dc1271450a4f" prot="public" virt="non-virtual" ambiguityscope="Gambit::SubSpectrum::"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get</name></member>
      <member refid="classGambit_1_1SubSpectrum_1ad777663700297fc43301c2a71288e56c" prot="public" virt="non-virtual" ambiguityscope="Gambit::SubSpectrum::"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a785b082b5f58bd249dc1a6f6321db435" prot="public" virt="non-virtual" ambiguityscope="Gambit::SubSpectrum::"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a4bb2b60a6f5213b1f447f3a7e731f7f5" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_external_spectrum</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1af21b8689f88b36194b0e7b1240d25101" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_Input</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a30d092152edd911b9339cee9648d1b70" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_Input</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a499a16d6f7cb301837103291aa44bf91" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_lowe_data_from</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a20c2aa33e1a22e0f91009ea73892f979" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_lsp_mass</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a543e556e05298251a77c8cb0bfa44087" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_Model</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1af6f8365bf4cbdb0152910d915653465c" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_Model</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1ac0203c26ba15cf4b791614959eed1154" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>get_numbers_stable_particles</name></member>
      <member refid="classGambit_1_1Spec_1ac2f5dcb72ade4248d48a08316cb2a5ce" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>getName</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a9a54f7a48b7d223f46fe1c79499fae3a" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>GetScale</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a5a6fd9949ec1ffe5d0b1d6b64f568b01" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>getSLHAea</name></member>
      <member refid="classGambit_1_1Spec_1a471ed98efd9bb9072a1b83db0e8ce89b" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>getter_maps</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a54698e0ff91a7bb092eecfb6ff644a31" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>GetterMaps</name></member>
      <member refid="classGambit_1_1SubSpectrum_1aa4b3a1ca4b864081a054b323a1c2f90f" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>hard_lower</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a7f39428653fa985b340c1df498d6ec42" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>hard_upper</name></member>
      <member refid="classGambit_1_1Spec_1a1a03962018f5cf85f34261eeca2106a6" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>has</name></member>
      <member refid="classGambit_1_1Spec_1aad9ca06fbc280f69a1f7be1bd49c571b" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>has</name></member>
      <member refid="classGambit_1_1Spec_1a848841a535a7e421544bfaae913c96b9" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>has</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a4828fe7699db6cd695871eac0e944f90" prot="public" virt="non-virtual" ambiguityscope="Gambit::SubSpectrum::"><scope>Gambit::SpecBit::MSSMSpec</scope><name>has</name></member>
      <member refid="classGambit_1_1SubSpectrum_1ab8004e0a7ca69f1a0fffa7b18a3f7182" prot="public" virt="non-virtual" ambiguityscope="Gambit::SubSpectrum::"><scope>Gambit::SpecBit::MSSMSpec</scope><name>has</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a1ce6d110547e72c5db901dd92c40444b" prot="public" virt="non-virtual" ambiguityscope="Gambit::SubSpectrum::"><scope>Gambit::SpecBit::MSSMSpec</scope><name>has</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a15d94bbe4627accb2a563b680a312f4a" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>index_offset</name></member>
      <member refid="classGambit_1_1Spec_1a11885c8d86ed99101f08a3967f63061b" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>input</name></member>
      <member refid="classGambit_1_1Spec_1a887a14df9f65f1180a6293d376a332a5" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>input</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a536c1b2ccbf5571987bfe571495a747a" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>Input</name></member>
      <member refid="classGambit_1_1Spec_1a8d1d5df6f8e2acca6f370732a8e13304" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>model</name></member>
      <member refid="classGambit_1_1Spec_1ab3ebfb60469691d2e534fd61edb2f321" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>model</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1acbef32603bfe2f951321e938555d51ed" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>Model</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a0352f6c931ee6afbcf1d1e910dc46f5b" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>model_interface</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a59c12ccab66d2e6cec2fb06c910c02bb" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>MSSMSpec</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a603a851d799d849ab0afd88dffc10d9a" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>MSSMSpec</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a9cd42b2aa941317bbb73777957008496" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>MTget</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a8b8aaec9f0adef6bdbc4f611980dda6c" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>MTset</name></member>
      <member refid="classGambit_1_1SubSpectrum_1ae733c2e2d247f846a957dd880d165144" prot="protected" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>override_maps</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a6f23c9146e2d9eab8a3db88f5a5232b6" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>PDG_translator</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a123082cb4740033d2ae243c1d27cea28" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>RunToScale</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a691b616d88f2d06f239372a687801eff" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>RunToScaleOverride</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a12bb8ae854bdbf402adcd3eeab3387e2" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>safeget</name></member>
      <member refid="classGambit_1_1SubSpectrum_1aaeff9db607b0a8118fdcd380ee6a0eba" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>safeget</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a69d2743c3bc07fd881cc83fd5bbe216a" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>safeget</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a8271aef7ca1cca4c7da767e5cade9c59" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>safeget</name></member>
      <member refid="classGambit_1_1SubSpectrum_1adf70c0de7818c1d85c0d0fcd8013aa76" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>safeget</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a622717528952171fa114ae152c7ae340" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>safeget</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a7e3fa3f9930f48da22354699a79d4d3e" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>Self</name></member>
      <member refid="classGambit_1_1Spec_1a3c8274c5d829777b70f0b76a2288fd60" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set</name></member>
      <member refid="classGambit_1_1Spec_1a24d8166cfb2158151a17af9aa692100e" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set</name></member>
      <member refid="classGambit_1_1Spec_1a16af53e2c8878cf0432b99cf63e3161b" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a723f6a66f3875abd2c6a6e8d8e03266d" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override</name></member>
      <member refid="classGambit_1_1SubSpectrum_1ad272d296f35e6ad0168b4e092eb53943" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override</name></member>
      <member refid="classGambit_1_1SubSpectrum_1abc80e335179d3633c2f537325673e0ab" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a456eeb816ef8539eaa8bd85e04d6f1c8" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override</name></member>
      <member refid="classGambit_1_1SubSpectrum_1adef6cacf9f63fcd1cbba22629399ad18" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a8f4bd036dd357d53e34e28615842a803" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override</name></member>
      <member refid="classGambit_1_1SubSpectrum_1ae0c6a2e9b63648b48911b76d6fabf63d" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override_vector</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a53c514918a7a32dce21697dbc9af95d7" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override_vector</name></member>
      <member refid="classGambit_1_1SubSpectrum_1af1551952a18488ce3793e062bf933a7a" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override_vector</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a21cab80b6c51bfb5801fb5e31896e164" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>set_override_vector</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1ae4dbeb2e2fd5dd72d48ad97293791b13" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>SetScale</name></member>
      <member refid="classGambit_1_1Spec_1a0ce21458302cf6f6e7597408ca8cd068" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>setter_maps</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a92e66e1bc7f7d16a34442fb0b5f525c6" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>SetterMaps</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a86e81042c8a0c13821a9c45d616c5b9b" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>soft_lower</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a3fa1af32eea87011aa4c6dce006878c7" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>soft_upper</name></member>
      <member refid="classGambit_1_1Spec_1a42196ab2958c64ec51fdfbc175808dad" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>Spec</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a56f353d2be541104f324b2e449a0e682" prot="public" virt="non-virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>SubSpectrum</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a7f86c4329e031f37ec2faffa5b1a48f4" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>writeSLHAfile</name></member>
      <member refid="classGambit_1_1SpecBit_1_1MSSMSpec_1a9c0ad2c2a6f0966abcab3ad466b6eaa3" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>~MSSMSpec</name></member>
      <member refid="classGambit_1_1Spec_1ac619e173f59a1f523001981952ed30ef" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>~Spec</name></member>
      <member refid="classGambit_1_1SubSpectrum_1a52ae9f8b079817bb6a26b53779fd1df9" prot="public" virt="virtual"><scope>Gambit::SpecBit::MSSMSpec</scope><name>~SubSpectrum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
