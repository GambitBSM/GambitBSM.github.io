<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="base__prior_8hpp" kind="file" language="C++">
    <compoundname>base_prior.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes refid="scanner__utils_8hpp" local="yes">gambit/ScannerBit/scanner_utils.hpp</includes>
    <includedby refid="interface_8hpp" local="yes">interface.hpp</includedby>
    <includedby refid="plugin__defs_8hpp" local="yes">plugin_defs.hpp</includedby>
    <includedby refid="plugin__loader_8hpp" local="yes">plugin_loader.hpp</includedby>
    <includedby refid="priors_8hpp" local="yes">priors.hpp</includedby>
    <includedby refid="python_8hpp" local="yes">python.hpp</includedby>
    <incdepgraph>
      <node id="37">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="1">
        <label>base_prior.hpp</label>
        <link refid="base__prior_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>gambit/ScannerBit/scanner_util_types.hpp</label>
        <link refid="scanner__util__types_8hpp"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>gambit/ScannerBit/scanner_utils.hpp</label>
        <link refid="scanner__utils_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="14">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="38">
        <label>gambit/Utils/factory_registry.hpp</label>
        <link refid="factory__registry_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="18">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Eigen/Dense</label>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="47">
        <label>array</label>
      </node>
      <node id="28">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="23">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="12">
        <label>boost/iterator/zip_iterator.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="24">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="22">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="35">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="36">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="13">
        <label>boost/range.hpp</label>
      </node>
      <node id="21">
        <label>boost/version.hpp</label>
      </node>
      <node id="42">
        <label>cassert</label>
      </node>
      <node id="11">
        <label>cctype</label>
      </node>
      <node id="59">
        <label>cmath</label>
      </node>
      <node id="52">
        <label>complex</label>
      </node>
      <node id="51">
        <label>cstring</label>
      </node>
      <node id="46">
        <label>deque</label>
      </node>
      <node id="17">
        <label>exception</label>
      </node>
      <node id="45">
        <label>forward_list</label>
      </node>
      <node id="41">
        <label>fstream</label>
      </node>
      <node id="40">
        <label>iostream</label>
      </node>
      <node id="58">
        <label>limits</label>
      </node>
      <node id="44">
        <label>list</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="53">
        <label>memory</label>
      </node>
      <node id="50">
        <label>omp.h</label>
      </node>
      <node id="9">
        <label>ostream</label>
      </node>
      <node id="16">
        <label>set</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
      <node id="19">
        <label>unistd.h</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
      <node id="43">
        <label>unordered_set</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="56">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="59">
        <label>container_factory.hpp</label>
        <link refid="container__factory_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>gambit.hpp</label>
        <link refid="gambit_8hpp"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>likelihood_container.hpp</label>
        <link refid="likelihood__container_8hpp"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>container_factory.cpp</label>
        <link refid="container__factory_8cpp"/>
      </node>
      <node id="53">
        <label>core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="54">
        <label>diagnostics.cpp</label>
        <link refid="Core_2src_2diagnostics_8cpp"/>
      </node>
      <node id="63">
        <label>gambit.cpp</label>
        <link refid="gambit_8cpp"/>
      </node>
      <node id="64">
        <label>likelihood_container.cpp</label>
        <link refid="likelihood__container_8cpp"/>
      </node>
      <node id="52">
        <label>ScannerBit_standalone.cpp</label>
        <link refid="ScannerBit__standalone_8cpp"/>
      </node>
      <node id="1">
        <label>base_prior.hpp</label>
        <link refid="base__prior_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>factory_defs.hpp</label>
        <link refid="factory__defs_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>objective_plugin.hpp</label>
        <link refid="objective__plugin_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>plugin_defs.hpp</label>
        <link refid="plugin__defs_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>plugin_factory.hpp</label>
        <link refid="plugin__factory_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>plugin_interface.hpp</label>
        <link refid="plugin__interface_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>plugin_loader.hpp</label>
        <link refid="plugin__loader_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>priors.hpp</label>
        <link refid="priors_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>cauchy.hpp</label>
        <link refid="cauchy_8hpp"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>composite.hpp</label>
        <link refid="composite_8hpp"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>doublelogflatjoin.hpp</label>
        <link refid="doublelogflatjoin_8hpp"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>dummy.hpp</label>
        <link refid="dummy_8hpp"/>
      </node>
      <node id="76">
        <label>fixed_same_as.hpp</label>
        <link refid="fixed__same__as_8hpp"/>
      </node>
      <node id="77">
        <label>flat_log.hpp</label>
        <link refid="flat__log_8hpp"/>
      </node>
      <node id="78">
        <label>gaussian.hpp</label>
        <link refid="gaussian_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>lognormal.hpp</label>
        <link refid="lognormal_8hpp"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>plugin.hpp</label>
        <link refid="plugin_8hpp"/>
      </node>
      <node id="58">
        <label>scan.hpp</label>
        <link refid="scan_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>scanner_plugin.hpp</label>
        <link refid="scanner__plugin_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>scannerbit.hpp</label>
        <link refid="scannerbit_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ais.hpp</label>
        <link refid="ais_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>diver.hpp</label>
        <link refid="diver__1_80_80_2diver_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>diver.hpp</label>
        <link refid="diver__1_80_82_2diver_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>diver.hpp</label>
        <link refid="diver__1_80_84_2diver_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>diver.hpp</label>
        <link refid="diver__1_80_85_2diver_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>great.hpp</label>
        <link refid="great_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>jswarm.hpp</label>
        <link refid="jswarm_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>minuit2.hpp</label>
        <link refid="minuit2_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>multinest.hpp</label>
        <link refid="multinest_2multinest_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>multinest.hpp</label>
        <link refid="multinest__3_810_2multinest_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>multinest.hpp</label>
        <link refid="multinest__3_811_2multinest_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>polychord.hpp</label>
        <link refid="1_817_81_2polychord_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>polychord.hpp</label>
        <link refid="1_818_82_2polychord_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>polychord.hpp</label>
        <link refid="1_820_81_2polychord_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>postprocessor.hpp</label>
        <link refid="postprocessor__1_80_80_2postprocessor_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>postprocessor.hpp</label>
        <link refid="postprocessor__2_80_80_2postprocessor_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>twalk.hpp</label>
        <link refid="twalk_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>interface.hpp</label>
        <link refid="interface_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>python.hpp</label>
        <link refid="python_8hpp_source"/>
      </node>
      <node id="6">
        <label>examples.cpp</label>
        <link refid="examples_8cpp"/>
      </node>
      <node id="68">
        <label>plugin_loader.cpp</label>
        <link refid="plugin__loader_8cpp"/>
      </node>
      <node id="71">
        <label>cauchy.cpp</label>
        <link refid="cauchy_8cpp"/>
      </node>
      <node id="74">
        <label>doublelogflatjoin.cpp</label>
        <link refid="doublelogflatjoin_8cpp"/>
      </node>
      <node id="79">
        <label>gaussian.cpp</label>
        <link refid="gaussian_8cpp"/>
      </node>
      <node id="81">
        <label>lognormal.cpp</label>
        <link refid="lognormal_8cpp"/>
      </node>
      <node id="57">
        <label>scan.cpp</label>
        <link refid="scan_8cpp"/>
      </node>
      <node id="10">
        <label>ais.cpp</label>
        <link refid="ais_8cpp"/>
      </node>
      <node id="13">
        <label>diver.cpp</label>
        <link refid="diver__1_80_80_2diver_8cpp"/>
      </node>
      <node id="19">
        <label>diver.cpp</label>
        <link refid="diver__1_80_82_2diver_8cpp"/>
      </node>
      <node id="17">
        <label>diver.cpp</label>
        <link refid="diver__1_80_84_2diver_8cpp"/>
      </node>
      <node id="15">
        <label>diver.cpp</label>
        <link refid="diver__1_80_85_2diver_8cpp"/>
      </node>
      <node id="21">
        <label>great.cpp</label>
        <link refid="great_8cpp"/>
      </node>
      <node id="24">
        <label>jswarm.cpp</label>
        <link refid="jswarm_8cpp"/>
      </node>
      <node id="25">
        <label>particle.cpp</label>
        <link refid="particle_8cpp"/>
      </node>
      <node id="26">
        <label>particle_swarm.cpp</label>
        <link refid="particle__swarm_8cpp"/>
      </node>
      <node id="27">
        <label>minuit2.cpp</label>
        <link refid="minuit2_8cpp"/>
      </node>
      <node id="30">
        <label>multinest.cpp</label>
        <link refid="multinest__3_810_2multinest_8cpp"/>
      </node>
      <node id="31">
        <label>multinest.cpp</label>
        <link refid="multinest__3_811_2multinest_8cpp"/>
      </node>
      <node id="29">
        <label>multinest.cpp</label>
        <link refid="multinest__3_812_2multinest_8cpp"/>
      </node>
      <node id="37">
        <label>polychord.cpp</label>
        <link refid="polychord__1_817_81_2polychord_8cpp"/>
      </node>
      <node id="36">
        <label>polychord.cpp</label>
        <link refid="polychord__1_818_82_2polychord_8cpp"/>
      </node>
      <node id="35">
        <label>polychord.cpp</label>
        <link refid="polychord__1_820_81_2polychord_8cpp"/>
      </node>
      <node id="7">
        <label>postprocessor.cpp</label>
        <link refid="postprocessor__1_80_80_2postprocessor_8cpp"/>
      </node>
      <node id="44">
        <label>postprocessor_object.cpp</label>
        <link refid="postprocessor__1_80_80_2postprocessor__object_8cpp"/>
      </node>
      <node id="8">
        <label>postprocessor.cpp</label>
        <link refid="postprocessor__2_80_80_2postprocessor_8cpp"/>
      </node>
      <node id="42">
        <label>postprocessor_object.cpp</label>
        <link refid="postprocessor__2_80_80_2postprocessor__object_8cpp"/>
      </node>
      <node id="22">
        <label>grid.cpp</label>
        <link refid="grid_8cpp"/>
      </node>
      <node id="45">
        <label>random.cpp</label>
        <link refid="random_8cpp"/>
      </node>
      <node id="46">
        <label>raster.cpp</label>
        <link refid="raster_8cpp"/>
      </node>
      <node id="47">
        <label>square_grid.cpp</label>
        <link refid="square__grid_8cpp"/>
      </node>
      <node id="48">
        <label>toy_mcmc.cpp</label>
        <link refid="toy__mcmc_8cpp"/>
      </node>
      <node id="49">
        <label>twalk.cpp</label>
        <link refid="twalk_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGambit_1_1Priors_1_1BasePrior" prot="public">Gambit::Priors::BasePrior</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Priors">Gambit::Priors</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Abstract base class for a prior</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@monash.edu.au">benjamin.farmer@monash.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Dec</para>
</simplesect>
<simplesect kind="author"><para>Gregory Martinez (<ulink url="mailto:gregory.david.martinez@gmail.com">gregory.david.martinez@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Feb</para>
</simplesect>
<simplesect kind="author"><para>Andrew Fowlie (<ulink url="mailto:andrew.j.fowlie@qq.com">andrew.j.fowlie@qq.com</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>August 2020</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Abstract<sp/>base<sp/>class<sp/>for<sp/>a<sp/>prior</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@monash.edu.au)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Dec</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\author<sp/>Gregory<sp/>Martinez</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/>(gregory.david.martinez@gmail.com)</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Feb</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>\author<sp/>Andrew<sp/>Fowlie</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/><sp/>(andrew.j.fowlie@qq.com)</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/>\date<sp/>August<sp/>2020</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__BASE_PRIORS_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BASE_PRIORS_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanner__utils_8hpp" kindref="compound">gambit/ScannerBit/scanner_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Priors<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>::Gambit::Scanner::hyper_cube_ref;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>::Gambit::Scanner::map_vector;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Abstract<sp/>base<sp/>class<sp/>for<sp/>priors</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classGambit_1_1Priors_1_1BasePrior" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Priors_1_1BasePrior" kindref="compound">BasePrior</ref><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param_size;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>param_names;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior" kindref="compound">~BasePrior</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior" kindref="compound">BasePrior</ref>()<sp/>:<sp/>param_size(0),<sp/>param_names(0)<sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior" kindref="compound">BasePrior</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param_size)<sp/>:<sp/>param_size(param_size),<sp/>param_names(0)<sp/>{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior" kindref="compound">BasePrior</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;param_names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param_size<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_size(param_size),<sp/>param_names(param_names)<sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior" kindref="compound">BasePrior</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;param_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param_size<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_size(param_size),<sp/>param_names(1,<sp/>param_name)<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Transform<sp/>from<sp/>unit<sp/>hypercube<sp/>to<sp/>physical<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6" kindref="member">transform</ref>(hyper_cube_ref&lt;double&gt;<sp/>unit,<sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;physical)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@overload<sp/>in<sp/>place<sp/>STL<sp/>containers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6" kindref="member">transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;unit,<sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;physical)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6" kindref="member">transform</ref>(map_vector&lt;double&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;unit[0]),<sp/>unit.size()),<sp/>physical);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@overload<sp/>return<sp/>STL<sp/>containers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6" kindref="member">transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;unit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>physical;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6" kindref="member">transform</ref>(unit,<sp/>physical);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>physical;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Transform<sp/>from<sp/>physical<sp/>parameter<sp/>to<sp/>unit<sp/>hypercube<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb" kindref="member">inverse_transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;physical,<sp/>hyper_cube_ref&lt;double&gt;<sp/>unit)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@overload<sp/>in<sp/>place<sp/>STL<sp/>containers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb" kindref="member">inverse_transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;physical,<sp/>std::vector&lt;double&gt;<sp/>&amp;unit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb" kindref="member">inverse_transform</ref>(physical,<sp/>map_vector&lt;double&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;unit[0]),<sp/>unit.size()));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@overload<sp/>return<sp/>STL<sp/>containers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb" kindref="member">inverse_transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;physical)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>unit(param_size);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb" kindref="member">inverse_transform</ref>(physical,<sp/>unit);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unit;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Log<sp/>of<sp/>prior<sp/>density<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classGambit_1_1Priors_1_1BasePrior_1a77005c4519940bf6457e4d3a3aa9c1a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Priors_1_1BasePrior_1a77005c4519940bf6457e4d3a3aa9c1a0" kindref="member">log_prior_density</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>getShownParameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param_names;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param_size;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{<sp/>param_size<sp/>=<sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>sizeRef()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param_size;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>getParameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param_names;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Priors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Gambit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>__BASE_PRIORS_HPP__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp"/>
  </compounddef>
</doxygen>
