<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="spectrum_8hpp" kind="file" language="C++">
    <compoundname>spectrum.hpp</compoundname>
    <includes local="no">complex</includes>
    <includes refid="util__functions_8hpp" local="yes">gambit/Utils/util_functions.hpp</includes>
    <includes refid="yaml__options_8hpp" local="yes">gambit/Utils/yaml_options.hpp</includes>
    <includes refid="sminputs_8hpp" local="yes">gambit/Elements/sminputs.hpp</includes>
    <includes refid="subspectrum_8hpp" local="yes">gambit/Elements/subspectrum.hpp</includes>
    <includes refid="slhaea__spec__helpers_8hpp" local="yes">gambit/Elements/slhaea_spec_helpers.hpp</includes>
    <includes refid="partmap_8hpp" local="yes">gambit/Models/partmap.hpp</includes>
    <includes refid="safe__param__map_8hpp" local="yes">gambit/Models/safe_param_map.hpp</includes>
    <includedby refid="MSSM__translation__helpers_8cpp" local="yes">MSSM_translation_helpers.cpp</includedby>
    <includedby refid="MSSMatMGUT_8cpp" local="yes">MSSMatMGUT.cpp</includedby>
    <includedby refid="MSSMatMGUT__mA_8cpp" local="yes">MSSMatMGUT_mA.cpp</includedby>
    <includedby refid="MSSMatMGUT__mA__mG_8cpp" local="yes">MSSMatMGUT_mA_mG.cpp</includedby>
    <includedby refid="MSSMatMGUT__mG_8cpp" local="yes">MSSMatMGUT_mG.cpp</includedby>
    <includedby refid="MSSMatMSUSY_8cpp" local="yes">MSSMatMSUSY.cpp</includedby>
    <includedby refid="MSSMatMSUSY__mA_8cpp" local="yes">MSSMatMSUSY_mA.cpp</includedby>
    <includedby refid="MSSMatMSUSY__mA__mG_8cpp" local="yes">MSSMatMSUSY_mA_mG.cpp</includedby>
    <includedby refid="MSSMatMSUSY__mG_8cpp" local="yes">MSSMatMSUSY_mG.cpp</includedby>
    <includedby refid="MSSMatQ__mA_8cpp" local="yes">MSSMatQ_mA.cpp</includedby>
    <includedby refid="MSSMatQ__mA__mG_8cpp" local="yes">MSSMatQ_mA_mG.cpp</includedby>
    <includedby refid="QedQcdWrapper_8cpp" local="yes">QedQcdWrapper.cpp</includedby>
    <includedby refid="Models_2src_2models_2ScalarSingletDM_8cpp" local="yes">ScalarSingletDM.cpp</includedby>
    <includedby refid="SpecBit__DMEFT_8cpp" local="yes">SpecBit_DMEFT.cpp</includedby>
    <includedby refid="SpecBit__DMsimpVectorMedDiracDM_8cpp" local="yes">SpecBit_DMsimpVectorMedDiracDM.cpp</includedby>
    <includedby refid="SpecBit__DMsimpVectorMedMajoranaDM_8cpp" local="yes">SpecBit_DMsimpVectorMedMajoranaDM.cpp</includedby>
    <includedby refid="SpecBit__DMsimpVectorMedScalarDM_8cpp" local="yes">SpecBit_DMsimpVectorMedScalarDM.cpp</includedby>
    <includedby refid="SpecBit__DMsimpVectorMedVectorDM_8cpp" local="yes">SpecBit_DMsimpVectorMedVectorDM.cpp</includedby>
    <includedby refid="SpecBit__DiracSingletDM_8cpp" local="yes">SpecBit_DiracSingletDM.cpp</includedby>
    <includedby refid="SpecBit__MDM_8cpp" local="yes">SpecBit_MDM.cpp</includedby>
    <includedby refid="SpecBit__MajoranaSingletDM_8cpp" local="yes">SpecBit_MajoranaSingletDM.cpp</includedby>
    <includedby refid="SpecBit__SM_8cpp" local="yes">SpecBit_SM.cpp</includedby>
    <includedby refid="SpecBit__ScalarSingletDM_8cpp" local="yes">SpecBit_ScalarSingletDM.cpp</includedby>
    <includedby refid="SpecBit__VS_8cpp" local="yes">SpecBit_VS.cpp</includedby>
    <includedby refid="SpecBit__VectorSingletDM_8cpp" local="yes">SpecBit_VectorSingletDM.cpp</includedby>
    <includedby refid="SpecBit__examples_8cpp" local="yes">SpecBit_examples.cpp</includedby>
    <includedby refid="src_2SpecBit__tests_8cpp" local="yes">SpecBit_tests.cpp</includedby>
    <includedby refid="StandardModel__Higgs_8cpp" local="yes">StandardModel_Higgs.cpp</includedby>
    <includedby refid="mssm__slhahelp_8hpp" local="yes">mssm_slhahelp.hpp</includedby>
    <includedby refid="shared__types_8hpp" local="yes">shared_types.hpp</includedby>
    <includedby refid="spectrum_8cpp" local="yes">spectrum.cpp</includedby>
    <includedby refid="spectrum__factories_8hpp" local="yes">spectrum_factories.hpp</includedby>
    <incdepgraph>
      <node id="67">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="69">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="34">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="24">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="60">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="3">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="49">
        <label>array</label>
      </node>
      <node id="52">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="51">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="25">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="20">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="19">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="62">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="18">
        <label>boost/version.hpp</label>
      </node>
      <node id="43">
        <label>cassert</label>
      </node>
      <node id="65">
        <label>cfloat</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>complex</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="48">
        <label>deque</label>
      </node>
      <node id="36">
        <label>exception</label>
      </node>
      <node id="47">
        <label>forward_list</label>
      </node>
      <node id="41">
        <label>fstream</label>
      </node>
      <node id="50">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="40">
        <label>iostream</label>
      </node>
      <node id="58">
        <label>limits</label>
      </node>
      <node id="46">
        <label>list</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="53">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="11">
        <label>omp.h</label>
      </node>
      <node id="35">
        <label>set</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="72">
        <label>stdexcept</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="42">
        <label>type_traits</label>
      </node>
      <node id="16">
        <label>unistd.h</label>
      </node>
      <node id="44">
        <label>unordered_map</label>
      </node>
      <node id="45">
        <label>unordered_set</label>
      </node>
      <node id="37">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="56">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="124">
        <label>backend_macros.hpp</label>
        <link refid="backend__macros_8hpp"/>
      </node>
      <node id="123">
        <label>common_macros.hpp</label>
        <link refid="common__macros_8hpp"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>ATLAS_FullLikes_1_0.cpp</label>
        <link refid="ATLAS__FullLikes__1__0_8cpp"/>
      </node>
      <node id="127">
        <label>Acropolis_1_2_1.cpp</label>
        <link refid="Acropolis__1__2__1_8cpp"/>
      </node>
      <node id="128">
        <label>AlterBBN_2_2.cpp</label>
        <link refid="AlterBBN__2__2_8cpp"/>
      </node>
      <node id="34">
        <label>CalcHEP_3_6_27.cpp</label>
        <link refid="CalcHEP__3__6__27_8cpp"/>
      </node>
      <node id="129">
        <label>CaptnGeneral_2_1.cpp</label>
        <link refid="CaptnGeneral__2__1_8cpp"/>
      </node>
      <node id="130">
        <label>Contur_2_1_1.cpp</label>
        <link refid="Contur__2__1__1_8cpp"/>
      </node>
      <node id="131">
        <label>DDCalc_1_0_0.cpp</label>
        <link refid="DDCalc__1__0__0_8cpp"/>
      </node>
      <node id="132">
        <label>DDCalc_1_1_0.cpp</label>
        <link refid="DDCalc__1__1__0_8cpp"/>
      </node>
      <node id="133">
        <label>DDCalc_1_2_0.cpp</label>
        <link refid="DDCalc__1__2__0_8cpp"/>
      </node>
      <node id="134">
        <label>DDCalc_2_0_0.cpp</label>
        <link refid="DDCalc__2__0__0_8cpp"/>
      </node>
      <node id="135">
        <label>DDCalc_2_1_0.cpp</label>
        <link refid="DDCalc__2__1__0_8cpp"/>
      </node>
      <node id="136">
        <label>DDCalc_2_2_0.cpp</label>
        <link refid="DDCalc__2__2__0_8cpp"/>
      </node>
      <node id="137">
        <label>DDCalc_2_3_0.cpp</label>
        <link refid="DDCalc__2__3__0_8cpp"/>
      </node>
      <node id="138">
        <label>DarkAges_1_2_0.cpp</label>
        <link refid="DarkAges__1__2__0_8cpp"/>
      </node>
      <node id="139">
        <label>DarkSUSY_5_1_3.cpp</label>
        <link refid="DarkSUSY__5__1__3_8cpp"/>
      </node>
      <node id="140">
        <label>DarkSUSY_MSSM_6_1_1.cpp</label>
        <link refid="DarkSUSY__MSSM__6__1__1_8cpp"/>
      </node>
      <node id="141">
        <label>DarkSUSY_MSSM_6_2_2.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__2_8cpp"/>
      </node>
      <node id="142">
        <label>DarkSUSY_MSSM_6_2_5.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__5_8cpp"/>
      </node>
      <node id="143">
        <label>DarkSUSY_MSSM_6_4_0.cpp</label>
        <link refid="DarkSUSY__MSSM__6__4__0_8cpp"/>
      </node>
      <node id="144">
        <label>DarkSUSY_generic_wimp_6_1_1.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__1__1_8cpp"/>
      </node>
      <node id="145">
        <label>DarkSUSY_generic_wimp_6_2_2.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__2_8cpp"/>
      </node>
      <node id="146">
        <label>DarkSUSY_generic_wimp_6_2_5.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__5_8cpp"/>
      </node>
      <node id="147">
        <label>DarkSUSY_generic_wimp_6_4_0.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__4__0_8cpp"/>
      </node>
      <node id="148">
        <label>DirectDM_2_2_0.cpp</label>
        <link refid="DirectDM__2__2__0_8cpp"/>
      </node>
      <node id="149">
        <label>LibMathematicaTest.cpp</label>
        <link refid="LibMathematicaTest_8cpp"/>
      </node>
      <node id="150">
        <label>LibSecond_1_1.cpp</label>
        <link refid="LibSecond__1__1_8cpp"/>
      </node>
      <node id="151">
        <label>LibSecond_1_2.cpp</label>
        <link refid="LibSecond__1__2_8cpp"/>
      </node>
      <node id="152">
        <label>LibThird_1_0.cpp</label>
        <link refid="LibThird__1__0_8cpp"/>
      </node>
      <node id="153">
        <label>LibThird_1_1.cpp</label>
        <link refid="LibThird__1__1_8cpp"/>
      </node>
      <node id="154">
        <label>LibThird_1_2.cpp</label>
        <link refid="LibThird__1__2_8cpp"/>
      </node>
      <node id="155">
        <label>MicrOmegas_DMsimpVectorMedVectorDM_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__DMsimpVectorMedVectorDM__3__6__9__2_8cpp"/>
      </node>
      <node id="156">
        <label>MicrOmegas_DiracSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__DiracSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="28">
        <label>MicrOmegas_MSSM_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__MSSM__3__6__9__2_8cpp"/>
      </node>
      <node id="157">
        <label>MicrOmegas_MajoranaSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__MajoranaSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="158">
        <label>MicrOmegas_ScalarSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__ScalarSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="159">
        <label>MicrOmegas_ScalarSingletDM_Z3_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__ScalarSingletDM__Z3__3__6__9__2_8cpp"/>
      </node>
      <node id="160">
        <label>MicrOmegas_VectorSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__VectorSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="161">
        <label>MontePythonLike_3_3_0.cpp</label>
        <link refid="MontePythonLike__3__3__0_8cpp"/>
      </node>
      <node id="162">
        <label>MontePythonLike_3_5_0.cpp</label>
        <link refid="MontePythonLike__3__5__0_8cpp"/>
      </node>
      <node id="163">
        <label>MultiModeCode_2_0_0.cpp</label>
        <link refid="MultiModeCode__2__0__0_8cpp"/>
      </node>
      <node id="30">
        <label>Prospino_2_1.cpp</label>
        <link refid="Prospino__2__1_8cpp"/>
      </node>
      <node id="164">
        <label>Rivet_3_1_5.cpp</label>
        <link refid="Rivet__3__1__5_8cpp"/>
      </node>
      <node id="165">
        <label>SPheno_3_3_8.cpp</label>
        <link refid="SPheno__3__3__8_8cpp"/>
      </node>
      <node id="166">
        <label>SPheno_4_0_3.cpp</label>
        <link refid="SPheno__4__0__3_8cpp"/>
      </node>
      <node id="31">
        <label>SUSY-HIT_1_5.cpp</label>
        <link refid="SUSY-HIT__1__5_8cpp"/>
      </node>
      <node id="167">
        <label>SUSYHD_1_0_2.cpp</label>
        <link refid="SUSYHD__1__0__2_8cpp"/>
      </node>
      <node id="168">
        <label>SuperIso_4_1.cpp</label>
        <link refid="SuperIso__4__1_8cpp"/>
      </node>
      <node id="169">
        <label>classy_2_6_3.cpp</label>
        <link refid="classy__2__6__3_8cpp"/>
      </node>
      <node id="170">
        <label>classy_2_9_3.cpp</label>
        <link refid="classy__2__9__3_8cpp"/>
      </node>
      <node id="171">
        <label>classy_2_9_4.cpp</label>
        <link refid="classy__2__9__4_8cpp"/>
      </node>
      <node id="172">
        <label>classy_3_1_0.cpp</label>
        <link refid="classy__3__1__0_8cpp"/>
      </node>
      <node id="173">
        <label>classy_exo_2_7_2.cpp</label>
        <link refid="classy__exo__2__7__2_8cpp"/>
      </node>
      <node id="174">
        <label>gamLike_1_0_0.cpp</label>
        <link refid="gamLike__1__0__0_8cpp"/>
      </node>
      <node id="175">
        <label>gamLike_1_0_1.cpp</label>
        <link refid="gamLike__1__0__1_8cpp"/>
      </node>
      <node id="176">
        <label>nulike_1_0_4.cpp</label>
        <link refid="nulike__1__0__4_8cpp"/>
      </node>
      <node id="177">
        <label>nulike_1_0_5.cpp</label>
        <link refid="nulike__1__0__5_8cpp"/>
      </node>
      <node id="178">
        <label>nulike_1_0_6.cpp</label>
        <link refid="nulike__1__0__6_8cpp"/>
      </node>
      <node id="179">
        <label>nulike_1_0_7.cpp</label>
        <link refid="nulike__1__0__7_8cpp"/>
      </node>
      <node id="180">
        <label>nulike_1_0_8.cpp</label>
        <link refid="nulike__1__0__8_8cpp"/>
      </node>
      <node id="181">
        <label>nulike_1_0_9.cpp</label>
        <link refid="nulike__1__0__9_8cpp"/>
      </node>
      <node id="182">
        <label>plc_3_0.cpp</label>
        <link refid="plc__3__0_8cpp"/>
      </node>
      <node id="183">
        <label>salami_0_1_0.cpp</label>
        <link refid="salami__0__1__0_8cpp"/>
      </node>
      <node id="184">
        <label>simple_xs_1_0.cpp</label>
        <link refid="simple__xs__1__0_8cpp"/>
      </node>
      <node id="185">
        <label>xsecBE_1_0_2.cpp</label>
        <link refid="xsecBE__1__0__2_8cpp"/>
      </node>
      <node id="48">
        <label>ColliderBit_eventloop.hpp</label>
        <link refid="ColliderBit__eventloop_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ColliderBit_rollcall.hpp</label>
        <link refid="ColliderBit__rollcall_8hpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ColliderBit_types.hpp</label>
        <link refid="ColliderBit__types_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>Py8Collider.hpp</label>
        <link refid="Py8Collider_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>SetHooksClass.hpp</label>
        <link refid="SetHooksClass_8hpp"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>complete_process_PID_pair_multimaps.hpp</label>
        <link refid="complete__process__PID__pair__multimaps_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>BaseDetector.hpp</label>
        <link refid="BaseDetector_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>BuckFast.hpp</label>
        <link refid="BuckFast_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>generateEventPy8Collider.hpp</label>
        <link refid="generateEventPy8Collider_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>getPy8Collider.hpp</label>
        <link refid="getPy8Collider_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>ALEPHSleptonLimits.hpp</label>
        <link refid="ALEPHSleptonLimits_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>BaseLimitContainer.hpp</label>
        <link refid="BaseLimitContainer_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>L3GauginoLimits.hpp</label>
        <link refid="L3GauginoLimits_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>L3SleptonLimits.hpp</label>
        <link refid="L3SleptonLimits_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>L3SmallDeltaMGauginoLimits.hpp</label>
        <link refid="L3SmallDeltaMGauginoLimits_8hpp_source"/>
      </node>
      <node id="75">
        <label>OPALDegenerateCharginoLimits.hpp</label>
        <link refid="OPALDegenerateCharginoLimits_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>OPALGauginoLimits.hpp</label>
        <link refid="OPALGauginoLimits_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ColliderBit_Higgs.cpp</label>
        <link refid="ColliderBit__Higgs_8cpp"/>
      </node>
      <node id="46">
        <label>ColliderBit_InterpolatedYields.cpp</label>
        <link refid="ColliderBit__InterpolatedYields_8cpp"/>
      </node>
      <node id="18">
        <label>ColliderBit_LEP.cpp</label>
        <link refid="ColliderBit__LEP_8cpp"/>
      </node>
      <node id="47">
        <label>ColliderBit_dummy.cpp</label>
        <link refid="ColliderBit__dummy_8cpp"/>
      </node>
      <node id="49">
        <label>ColliderBit_eventloop.cpp</label>
        <link refid="ColliderBit__eventloop_8cpp"/>
      </node>
      <node id="50">
        <label>ColliderBit_measurements.cpp</label>
        <link refid="ColliderBit__measurements_8cpp"/>
      </node>
      <node id="65">
        <label>LHC_likelihoods.cpp</label>
        <link refid="LHC__likelihoods_8cpp"/>
      </node>
      <node id="51">
        <label>collider_event_weights.cpp</label>
        <link refid="collider__event__weights_8cpp"/>
      </node>
      <node id="68">
        <label>complete_process_PID_pair_multimaps.cpp</label>
        <link refid="complete__process__PID__pair__multimaps_8cpp"/>
      </node>
      <node id="42">
        <label>BuckFast.cpp</label>
        <link refid="BuckFast_8cpp"/>
      </node>
      <node id="55">
        <label>getActiveProcessCodes.cpp</label>
        <link refid="getActiveProcessCodes_8cpp"/>
      </node>
      <node id="56">
        <label>getAnalysisContainer.cpp</label>
        <link refid="getAnalysisContainer_8cpp"/>
      </node>
      <node id="57">
        <label>getBuckFast.cpp</label>
        <link refid="getBuckFast_8cpp"/>
      </node>
      <node id="58">
        <label>getHepMCEvent.cpp</label>
        <link refid="getHepMCEvent_8cpp"/>
      </node>
      <node id="59">
        <label>getLHEvent.cpp</label>
        <link refid="getLHEvent_8cpp"/>
      </node>
      <node id="61">
        <label>getxsec.cpp</label>
        <link refid="getxsec_8cpp"/>
      </node>
      <node id="66">
        <label>lep_mssm_xsecs.cpp</label>
        <link refid="lep__mssm__xsecs_8cpp"/>
      </node>
      <node id="71">
        <label>BaseLimitContainer.cpp</label>
        <link refid="BaseLimitContainer_8cpp"/>
      </node>
      <node id="53">
        <label>SUSY.cpp</label>
        <link refid="SUSY_8cpp"/>
      </node>
      <node id="54">
        <label>SUSY_extras.cpp</label>
        <link refid="SUSY__extras_8cpp"/>
      </node>
      <node id="62">
        <label>process_code_PID_pair_mapping.cpp</label>
        <link refid="process__code__PID__pair__mapping_8cpp"/>
      </node>
      <node id="63">
        <label>runAnalyses.cpp</label>
        <link refid="runAnalyses_8cpp"/>
      </node>
      <node id="64">
        <label>smearEvent.cpp</label>
        <link refid="smearEvent_8cpp"/>
      </node>
      <node id="205">
        <label>container_factory.hpp</label>
        <link refid="container__factory_8hpp"/>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>depresolver.hpp</label>
        <link refid="depresolver_8hpp"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>gambit.hpp</label>
        <link refid="gambit_8hpp"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>likelihood_container.hpp</label>
        <link refid="likelihood__container_8hpp"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>modelgraph.hpp</label>
        <link refid="modelgraph_8hpp"/>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>container_factory.cpp</label>
        <link refid="container__factory_8cpp"/>
      </node>
      <node id="211">
        <label>depresolver.cpp</label>
        <link refid="depresolver_8cpp"/>
      </node>
      <node id="213">
        <label>diagnostics.cpp</label>
        <link refid="diagnostics_8cpp"/>
      </node>
      <node id="209">
        <label>gambit.cpp</label>
        <link refid="gambit_8cpp"/>
      </node>
      <node id="210">
        <label>likelihood_container.cpp</label>
        <link refid="likelihood__container_8cpp"/>
      </node>
      <node id="214">
        <label>modelgraph.cpp</label>
        <link refid="modelgraph_8cpp"/>
      </node>
      <node id="82">
        <label>BBN.cpp</label>
        <link refid="BBN_8cpp"/>
      </node>
      <node id="83">
        <label>Boltzmann.cpp</label>
        <link refid="Boltzmann_8cpp"/>
      </node>
      <node id="84">
        <label>CMB.cpp</label>
        <link refid="CMB_8cpp"/>
      </node>
      <node id="86">
        <label>CosmoALPs.cpp</label>
        <link refid="CosmoALPs_8cpp"/>
      </node>
      <node id="87">
        <label>CosmoBit.cpp</label>
        <link refid="CosmoBit_8cpp"/>
      </node>
      <node id="103">
        <label>Inflation.cpp</label>
        <link refid="Inflation_8cpp"/>
      </node>
      <node id="106">
        <label>MontePython.cpp</label>
        <link refid="MontePython_8cpp"/>
      </node>
      <node id="110">
        <label>Planck.cpp</label>
        <link refid="Planck_8cpp"/>
      </node>
      <node id="19">
        <label>DarkBit_standalone_MSSM.cpp</label>
        <link refid="DarkBit__standalone__MSSM_8cpp"/>
      </node>
      <node id="20">
        <label>DarkBit_standalone_ScalarSingletDM_Z2.cpp</label>
        <link refid="DarkBit__standalone__ScalarSingletDM__Z2_8cpp"/>
      </node>
      <node id="190">
        <label>DarkBit_standalone_WIMP.cpp</label>
        <link refid="DarkBit__standalone__WIMP_8cpp"/>
      </node>
      <node id="80">
        <label>AntiprotonLikelihoods.cpp</label>
        <link refid="AntiprotonLikelihoods_8cpp"/>
      </node>
      <node id="81">
        <label>Axions.cpp</label>
        <link refid="DarkBit_2src_2Axions_8cpp"/>
      </node>
      <node id="85">
        <label>Cascades.cpp</label>
        <link refid="Cascades_8cpp"/>
      </node>
      <node id="88">
        <label>DMEFT.cpp</label>
        <link refid="DarkBit_2src_2DMEFT_8cpp"/>
      </node>
      <node id="89">
        <label>DMsimpVectorMedDiracDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedDiracDM_8cpp"/>
      </node>
      <node id="90">
        <label>DMsimpVectorMedMajoranaDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedMajoranaDM_8cpp"/>
      </node>
      <node id="91">
        <label>DMsimpVectorMedScalarDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedScalarDM_8cpp"/>
      </node>
      <node id="92">
        <label>DMsimpVectorMedVectorDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedVectorDM_8cpp"/>
      </node>
      <node id="93">
        <label>DarkBit.cpp</label>
        <link refid="DarkBit_8cpp"/>
      </node>
      <node id="94">
        <label>DarkBit_utils.cpp</label>
        <link refid="DarkBit__utils_8cpp"/>
      </node>
      <node id="95">
        <label>DiracSingletDM.cpp</label>
        <link refid="DarkBit_2src_2DiracSingletDM_8cpp"/>
      </node>
      <node id="96">
        <label>DirectDetection.cpp</label>
        <link refid="DirectDetection_8cpp"/>
      </node>
      <node id="97">
        <label>EnergyInjection.cpp</label>
        <link refid="EnergyInjection_8cpp"/>
      </node>
      <node id="102">
        <label>IndirectDetectionYields.cpp</label>
        <link refid="IndirectDetectionYields_8cpp"/>
      </node>
      <node id="104">
        <label>MSSM.cpp</label>
        <link refid="DarkBit_2src_2MSSM_8cpp"/>
      </node>
      <node id="105">
        <label>MajoranaSingletDM.cpp</label>
        <link refid="DarkBit_2src_2MajoranaSingletDM_8cpp"/>
      </node>
      <node id="109">
        <label>PPPC.cpp</label>
        <link refid="PPPC_8cpp"/>
      </node>
      <node id="111">
        <label>ProcessCatalog.cpp</label>
        <link refid="ProcessCatalog_8cpp"/>
      </node>
      <node id="112">
        <label>RelicDensity.cpp</label>
        <link refid="RelicDensity_8cpp"/>
      </node>
      <node id="114">
        <label>ScalarSingletDM.cpp</label>
        <link refid="DarkBit_2src_2ScalarSingletDM_8cpp"/>
      </node>
      <node id="115">
        <label>SimpleHist.cpp</label>
        <link refid="SimpleHist_8cpp"/>
      </node>
      <node id="116">
        <label>SimpleLikelihoods.cpp</label>
        <link refid="SimpleLikelihoods_8cpp"/>
      </node>
      <node id="118">
        <label>SunNeutrinos.cpp</label>
        <link refid="SunNeutrinos_8cpp"/>
      </node>
      <node id="119">
        <label>VectorSingletDM.cpp</label>
        <link refid="DarkBit_2src_2VectorSingletDM_8cpp"/>
      </node>
      <node id="120">
        <label>WIMP_EFT.cpp</label>
        <link refid="WIMP__EFT_8cpp"/>
      </node>
      <node id="121">
        <label>decay_chain.cpp</label>
        <link refid="decay__chain_8cpp"/>
      </node>
      <node id="189">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="35">
        <label>decay_utils.hpp</label>
        <link refid="decay__utils_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>DecayBit.cpp</label>
        <link refid="DecayBit_8cpp"/>
      </node>
      <node id="36">
        <label>decay_utils.cpp</label>
        <link refid="decay__utils_8cpp"/>
      </node>
      <node id="33">
        <label>decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>functor_definitions.hpp</label>
        <link refid="functor__definitions_8hpp"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>gambit_module_headers.hpp</label>
        <link refid="gambit__module__headers_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>module_macros_incore.hpp</label>
        <link refid="module__macros__incore_8hpp"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>module_macros_incore_defs.hpp</label>
        <link refid="module__macros__incore__defs_8hpp"/>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>printable_types.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2printable__types_8hpp"/>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="238">
        <label>spectrum_factories.hpp</label>
        <link refid="spectrum__factories_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>standalone_module.hpp</label>
        <link refid="standalone__module_8hpp"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>types_rollcall.hpp</label>
        <link refid="types__rollcall_8hpp"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>decay_table.cpp</label>
        <link refid="decay__table_8cpp"/>
      </node>
      <node id="216">
        <label>functors.cpp</label>
        <link refid="Elements_2src_2functors_8cpp"/>
      </node>
      <node id="38">
        <label>higgs_couplings_table.cpp</label>
        <link refid="higgs__couplings__table_8cpp"/>
      </node>
      <node id="234">
        <label>mssm_slhahelp.cpp</label>
        <link refid="mssm__slhahelp_8cpp"/>
      </node>
      <node id="235">
        <label>sminputs.cpp</label>
        <link refid="sminputs_8cpp"/>
      </node>
      <node id="237">
        <label>spectrum.cpp</label>
        <link refid="spectrum_8cpp"/>
      </node>
      <node id="236">
        <label>subspectrum.cpp</label>
        <link refid="subspectrum_8cpp"/>
      </node>
      <node id="191">
        <label>ExampleBit_A_standalone_example.cpp</label>
        <link refid="ExampleBit__A__standalone__example_8cpp"/>
      </node>
      <node id="98">
        <label>ExampleBit_A.cpp</label>
        <link refid="ExampleBit__A_8cpp"/>
      </node>
      <node id="99">
        <label>ExampleBit_B.cpp</label>
        <link refid="ExampleBit__B_8cpp"/>
      </node>
      <node id="100">
        <label>FlavBit.cpp</label>
        <link refid="FlavBit_8cpp"/>
      </node>
      <node id="101">
        <label>Flav_reader.cpp</label>
        <link refid="Flav__reader_8cpp"/>
      </node>
      <node id="22">
        <label>MSSMSimpleSpec.cpp</label>
        <link refid="MSSMSimpleSpec_8cpp"/>
      </node>
      <node id="107">
        <label>NeutrinoBit.cpp</label>
        <link refid="NeutrinoBit_8cpp"/>
      </node>
      <node id="113">
        <label>RightHandedNeutrinos.cpp</label>
        <link refid="RightHandedNeutrinos_8cpp"/>
      </node>
      <node id="108">
        <label>ObjectivesBit.cpp</label>
        <link refid="ObjectivesBit_8cpp"/>
      </node>
      <node id="29">
        <label>PrecisionBit.cpp</label>
        <link refid="PrecisionBit_8cpp"/>
      </node>
      <node id="193">
        <label>baseprinter.hpp</label>
        <link refid="baseprinter_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>asciiprinter.hpp</label>
        <link refid="asciiprinter_8hpp"/>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>asciireader.hpp</label>
        <link refid="asciireader_8hpp"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>coutprinter.hpp</label>
        <link refid="coutprinter_8hpp"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>hdf5printer.hpp</label>
        <link refid="hdf5printer_8hpp"/>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>hdf5printer_v2.hpp</label>
        <link refid="hdf5printer__v2_8hpp"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>hdf5reader.hpp</label>
        <link refid="hdf5reader_8hpp"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>noneprinter.hpp</label>
        <link refid="noneprinter_8hpp"/>
      </node>
      <node id="228">
        <label>sqliteprinter.hpp</label>
        <link refid="sqliteprinter_8hpp"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>sqlitereader.hpp</label>
        <link refid="sqlitereader_8hpp"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>baseprinter.cpp</label>
        <link refid="baseprinter_8cpp"/>
      </node>
      <node id="227">
        <label>printermanager.cpp</label>
        <link refid="printermanager_8cpp"/>
      </node>
      <node id="195">
        <label>asciiprinter.cpp</label>
        <link refid="asciiprinter_8cpp"/>
      </node>
      <node id="198">
        <label>asciireader.cpp</label>
        <link refid="asciireader_8cpp"/>
      </node>
      <node id="196">
        <label>print_overloads.cpp</label>
        <link refid="asciiprinter_2print__overloads_8cpp"/>
      </node>
      <node id="199">
        <label>retrieve_overloads.cpp</label>
        <link refid="asciiprinter_2retrieve__overloads_8cpp"/>
      </node>
      <node id="202">
        <label>coutprinter.cpp</label>
        <link refid="coutprinter_8cpp"/>
      </node>
      <node id="203">
        <label>print_overloads.cpp</label>
        <link refid="coutprinter_2print__overloads_8cpp"/>
      </node>
      <node id="218">
        <label>hdf5printer.cpp</label>
        <link refid="hdf5printer_8cpp"/>
      </node>
      <node id="219">
        <label>hdf5reader.cpp</label>
        <link refid="hdf5reader_8cpp"/>
      </node>
      <node id="220">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer_2print__overloads_8cpp"/>
      </node>
      <node id="221">
        <label>retrieve_overloads.cpp</label>
        <link refid="hdf5printer_2retrieve__overloads_8cpp"/>
      </node>
      <node id="223">
        <label>hdf5printer_v2.cpp</label>
        <link refid="hdf5printer__v2_8cpp"/>
      </node>
      <node id="224">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer__v2_2print__overloads_8cpp"/>
      </node>
      <node id="229">
        <label>print_overloads.cpp</label>
        <link refid="sqliteprinter_2print__overloads_8cpp"/>
      </node>
      <node id="232">
        <label>retrieve_overloads.cpp</label>
        <link refid="sqliteprinter_2retrieve__overloads_8cpp"/>
      </node>
      <node id="230">
        <label>sqliteprinter.cpp</label>
        <link refid="sqliteprinter_8cpp"/>
      </node>
      <node id="233">
        <label>sqlitereader.cpp</label>
        <link refid="sqlitereader_8cpp"/>
      </node>
      <node id="15">
        <label>SpecBit_examples.cpp</label>
        <link refid="SpecBit__examples_8cpp"/>
      </node>
      <node id="26">
        <label>SpecBit_tests.cpp</label>
        <link refid="examples_2SpecBit__tests_8cpp"/>
      </node>
      <node id="23">
        <label>MSSMSpec.hpp</label>
        <link refid="MSSMSpec_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>SpecBit_externaltests.hpp</label>
        <link refid="SpecBit__externaltests_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>external_examples.hpp</label>
        <link refid="external__examples_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QedQcdWrapper.cpp</label>
        <link refid="QedQcdWrapper_8cpp"/>
      </node>
      <node id="117">
        <label>SpecBit.cpp</label>
        <link refid="SpecBit_8cpp"/>
      </node>
      <node id="3">
        <label>SpecBit_DMEFT.cpp</label>
        <link refid="SpecBit__DMEFT_8cpp"/>
      </node>
      <node id="4">
        <label>SpecBit_DMsimpVectorMedDiracDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedDiracDM_8cpp"/>
      </node>
      <node id="5">
        <label>SpecBit_DMsimpVectorMedMajoranaDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedMajoranaDM_8cpp"/>
      </node>
      <node id="6">
        <label>SpecBit_DMsimpVectorMedScalarDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedScalarDM_8cpp"/>
      </node>
      <node id="7">
        <label>SpecBit_DMsimpVectorMedVectorDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedVectorDM_8cpp"/>
      </node>
      <node id="8">
        <label>SpecBit_DiracSingletDM.cpp</label>
        <link refid="SpecBit__DiracSingletDM_8cpp"/>
      </node>
      <node id="9">
        <label>SpecBit_MDM.cpp</label>
        <link refid="SpecBit__MDM_8cpp"/>
      </node>
      <node id="24">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="10">
        <label>SpecBit_MajoranaSingletDM.cpp</label>
        <link refid="SpecBit__MajoranaSingletDM_8cpp"/>
      </node>
      <node id="11">
        <label>SpecBit_SM.cpp</label>
        <link refid="SpecBit__SM_8cpp"/>
      </node>
      <node id="12">
        <label>SpecBit_ScalarSingletDM.cpp</label>
        <link refid="SpecBit__ScalarSingletDM_8cpp"/>
      </node>
      <node id="13">
        <label>SpecBit_VS.cpp</label>
        <link refid="SpecBit__VS_8cpp"/>
      </node>
      <node id="14">
        <label>SpecBit_VectorSingletDM.cpp</label>
        <link refid="SpecBit__VectorSingletDM_8cpp"/>
      </node>
      <node id="16">
        <label>SpecBit_tests.cpp</label>
        <link refid="src_2SpecBit__tests_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structYAML_1_1convert_3_01sdd_01_4" prot="public">YAML::convert&lt; sdd &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01ssdd_01_4" prot="public">YAML::convert&lt; ssdd &gt;</innerclass>
    <innerclass refid="classGambit_1_1Spectrum" prot="public">Gambit::Spectrum</innerclass>
    <innernamespace refid="namespaceYAML">YAML</innernamespace>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is used to deliver both information defined in the Standard Model (or potentially just QED X QCD) as a low-energy effective theory (as opposed to correspending information defined in a high-energy model) as well as a corresponding high-energy theory. Parameters defined in the low-energy model are often used as input to a physics calculators. In addition, parameters used to define the Standard Model, in SLHA2 format, are provided in the SMINPUTS data member.</para>
<para>Access to the pole masses of either SubSpectrum is provided by the &quot;get_Pole_Mass&quot; function, which will search both subspectra for a match. For running parameters, one should access them via the getters of &quot;LE&quot; or &quot;HE&quot; subspectra.</para>
<para><hruler/>
</para>
<para>Authors:</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Mar</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 May</para>
</simplesect>
<simplesect kind="author"><para>Abram Krislock (<ulink url="mailto:a.m.b.krislock@fys.uio.no">a.m.b.krislock@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Feb</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>to<sp/>deliver<sp/>both<sp/>information<sp/>defined<sp/>in<sp/>the<sp/>Standard</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>Model<sp/>(or<sp/>potentially<sp/>just<sp/>QED<sp/>X<sp/>QCD)<sp/>as<sp/>a<sp/>low-energy<sp/>effective<sp/>theory<sp/>(as</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>opposed<sp/>to<sp/>correspending<sp/>information<sp/>defined<sp/>in<sp/>a<sp/>high-energy<sp/>model)<sp/>as<sp/>well<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>corresponding<sp/>high-energy<sp/>theory.<sp/>Parameters<sp/>defined<sp/>in<sp/>the<sp/>low-energy<sp/>model<sp/>are</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>often<sp/>used<sp/>as<sp/>input<sp/>to<sp/>a<sp/>physics<sp/>calculators.<sp/>In<sp/>addition,<sp/>parameters<sp/>used</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>to<sp/>define<sp/>the<sp/>Standard<sp/>Model,<sp/>in<sp/>SLHA2<sp/>format,<sp/>are<sp/>provided<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>SMINPUTS<sp/>data<sp/>member.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>Access<sp/>to<sp/>the<sp/>pole<sp/>masses<sp/>of<sp/>either<sp/>SubSpectrum<sp/>is<sp/>provided<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>&quot;get_Pole_Mass&quot;<sp/>function,<sp/>which<sp/>will<sp/>search<sp/>both<sp/>subspectra<sp/>for<sp/>a<sp/>match.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>For<sp/>running<sp/>parameters,<sp/>one<sp/>should<sp/>access<sp/>them<sp/>via<sp/>the<sp/>getters<sp/>of<sp/>&quot;LE&quot;<sp/>or</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>&quot;HE&quot;<sp/>subspectra.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>Authors:</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/>&lt;!--<sp/>add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify<sp/>--&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Mar</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>May</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/>\author<sp/>Abram<sp/>Krislock</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a.m.b.krislock@fys.uio.no)</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Feb</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__Spectrum_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Spectrum_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__functions_8hpp" kindref="compound">gambit/Utils/util_functions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="yaml__options_8hpp" kindref="compound">gambit/Utils/yaml_options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sminputs_8hpp" kindref="compound">gambit/Elements/sminputs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="subspectrum_8hpp" kindref="compound">gambit/Elements/subspectrum.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slhaea__spec__helpers_8hpp" kindref="compound">gambit/Elements/slhaea_spec_helpers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="partmap_8hpp" kindref="compound">gambit/Models/partmap.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="safe__param__map_8hpp" kindref="compound">gambit/Models/safe_param_map.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">///<sp/>YAML<sp/>overloads<sp/>for<sp/>mass<sp/>cut<sp/>and<sp/>mass<sp/>cut<sp/>ratio<sp/>constituents</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceYAML" kindref="compound">YAML</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>&gt;<sp/>sdd;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;std::pair&lt;std::string,std::string&gt;,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>&gt;<sp/>ssdd;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="58" refid="structYAML_1_1convert_3_01sdd_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;sdd&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/>encode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sdd&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Node<sp/>node;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.first);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.second.first);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.second.second);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>decode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node&amp;<sp/>node,<sp/>sdd&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!node.IsSequence()<sp/>||<sp/>node.size()<sp/>!=<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.first<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node[0].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.second.first<sp/><sp/>=<sp/>node[1].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.second.second<sp/>=<sp/>node[2].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="80" refid="structYAML_1_1convert_3_01ssdd_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;ssdd&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/>encode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ssdd&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Node<sp/>node;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.first.first);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.first.second);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.second.first);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.push_back(rhs.second.second);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>decode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node&amp;<sp/>node,<sp/>ssdd&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!node.IsSequence()<sp/>||<sp/>node.size()<sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.first.first<sp/><sp/><sp/>=<sp/>node[0].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.first.second<sp/><sp/>=<sp/>node[1].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.second.first<sp/><sp/>=<sp/>node[2].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.second.second<sp/>=<sp/>node[3].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>///<sp/>&quot;Standard<sp/>Model&quot;<sp/>(low-energy)<sp/>plus<sp/>high-energy<sp/>model<sp/>container<sp/>class</highlight></codeline>
<codeline lineno="110" refid="classGambit_1_1Spectrum" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Friend<sp/>function:<sp/>swap<sp/>resources<sp/>of<sp/>two<sp/>Spectrum<sp/>objects</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1af219d597666288914017b861c3572223" kindref="member">swap</ref>(<ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref>&amp;<sp/>first,<sp/><ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref>&amp;<sp/>second);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Typedefs<sp/>for<sp/>making<sp/>it<sp/>easier<sp/>to<sp/>manipulate<sp/>mass<sp/>cut<sp/>and<sp/>mass<sp/>ratio<sp/>cut<sp/>info.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="119" refid="classGambit_1_1Spectrum_1ac2c38b124941a26ba37eed9447c51e71" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;YAML::sdd&gt;<sp/><sp/><ref refid="classGambit_1_1Spectrum_1ac2c38b124941a26ba37eed9447c51e71" kindref="member">mc_info</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;YAML::ssdd&gt;<sp/>mr_info;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Variables</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SubSpectrum&gt;<sp/>LE_new;<sp/></highlight><highlight class="comment">//<sp/>low<sp/>energy<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SubSpectrum&gt;<sp/>HE_new;<sp/></highlight><highlight class="comment">//<sp/>high<sp/>energy<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>*<sp/>LE;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>*<sp/>HE;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref><sp/>SMINPUTS;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;str,<sp/>safe_ptr&lt;const<sp/>double&gt;<sp/>&gt;*<sp/>input_Param;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1ac2c38b124941a26ba37eed9447c51e71" kindref="member">mc_info</ref>*<sp/>mass_cuts;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mr_info*<sp/>mass_ratio_cuts;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialised;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="137"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>object<sp/>has<sp/>been<sp/>fully<sp/>initialised</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_init()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///Calculate<sp/>Wolfenstein<sp/>rho+i*eta<sp/>from<sp/>rhobar<sp/>and<sp/>etabar</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::complex&lt;double&gt;<sp/>rhoplusieta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Constructors/Destructors</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Need<sp/>custom<sp/>copy<sp/>and<sp/>move<sp/>constructors<sp/>plus<sp/>copy-assignment<sp/>operator</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>in<sp/>order<sp/>to<sp/>manage<sp/>the<sp/>unique_ptrs<sp/>properly.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Default<sp/>constructor</highlight></codeline>
<codeline lineno="151"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1a3dbdfab59debd33249d75bbb34005e4f" kindref="member">Spectrum</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Construct<sp/>new<sp/>object,<sp/>cloning<sp/>the<sp/>SubSpectrum<sp/>objects<sp/>supplied<sp/>and<sp/>taking<sp/>possession<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1a3dbdfab59debd33249d75bbb34005e4f" kindref="member">Spectrum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/>le,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/>he,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref>&amp;<sp/>smi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;const double&gt;</ref><sp/>&gt;*<sp/>input_Param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1ac2c38b124941a26ba37eed9447c51e71" kindref="member">mc_info</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mr_info&amp;);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Construct<sp/>new<sp/>object,<sp/>wrapping<sp/>existing<sp/>SubSpectrum<sp/>objects</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>Make<sp/>sure<sp/>the<sp/>original<sp/>objects<sp/>don&apos;t<sp/>get<sp/>deleted<sp/>before<sp/>this<sp/>wrapper<sp/>does!</highlight></codeline>
<codeline lineno="156"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1a3dbdfab59debd33249d75bbb34005e4f" kindref="member">Spectrum</ref>(<ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>le,<sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>he,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref>&amp;<sp/>smi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;const double&gt;</ref><sp/>&gt;*<sp/>input_Param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1ac2c38b124941a26ba37eed9447c51e71" kindref="member">mc_info</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mr_info&amp;);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Construct<sp/>new<sp/>object,<sp/>automatically<sp/>creating<sp/>an<sp/>SMSimpleSpec<sp/>as<sp/>the<sp/>LE<sp/>subspectrum,<sp/>and<sp/>cloning<sp/>the<sp/>HE<sp/>SubSpectrum<sp/>object<sp/>supplied<sp/>and<sp/>taking<sp/>possession<sp/>of<sp/>it.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>(won&apos;t<sp/>make<sp/>a<sp/>version<sp/>of<sp/>this<sp/>taking<sp/>a<sp/>pointer,<sp/>since<sp/>this<sp/>is<sp/>an<sp/>&quot;advanced&quot;<sp/>task,<sp/>let<sp/>people<sp/>use<sp/>the<sp/>full<sp/>contructor<sp/>to<sp/>do<sp/>it.)</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1a3dbdfab59debd33249d75bbb34005e4f" kindref="member">Spectrum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/>he,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref>&amp;<sp/>smi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;const double&gt;</ref><sp/>&gt;*<sp/>input_Param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1ac2c38b124941a26ba37eed9447c51e71" kindref="member">mc_info</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mr_info&amp;);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Copy<sp/>constructor,<sp/>clones<sp/>SubSpectrum<sp/>objects.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Make<sp/>a<sp/>non-const<sp/>copy<sp/>in<sp/>order<sp/>to<sp/>use<sp/>e.g.<sp/>RunBothToScale<sp/>function.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1a3dbdfab59debd33249d75bbb34005e4f" kindref="member">Spectrum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref>&amp;<sp/>other);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Copy-assignment</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Using<sp/>&quot;copy-and-swap&quot;<sp/>idiom</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref>&amp;<sp/><ref refid="classGambit_1_1Spectrum_1a3ae4c74067ac3958d6270b38e18d3426" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref>&amp;<sp/>other);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Move<sp/>constructor</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1a3dbdfab59debd33249d75bbb34005e4f" kindref="member">Spectrum</ref>(<ref refid="classGambit_1_1Spectrum" kindref="compound">Spectrum</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="172"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Linked<sp/>running</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Only<sp/>possible<sp/>with<sp/>non-const<sp/>object</highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a4c252ce17e0e78f491a16453bc42f625" kindref="member">RunBothToScale</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>the<sp/>that<sp/>the<sp/>spectrum<sp/>satisifies<sp/>any<sp/>mass<sp/>cuts<sp/>requested<sp/>from<sp/>the<sp/>yaml<sp/>file.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a49551e0844333a87497ce8d383763d8a" kindref="member">check_mass_cuts</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Standard<sp/>SubSpectrum<sp/>getters</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>references<sp/>to<sp/>internal<sp/>data<sp/>members.<sp/>Make<sp/>sure<sp/>original<sp/>Spectrum<sp/>object<sp/>doesn&apos;t</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>get<sp/>destroyed<sp/>before<sp/>you<sp/>finish<sp/>using<sp/>these<sp/>or<sp/>you<sp/>will<sp/>cause<sp/>a<sp/>segfault.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/><ref refid="classGambit_1_1Spectrum_1a5866a4e046cb405c509bc5fdb647f654" kindref="member">get_LE</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/>get_HE();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref>&amp;<sp/><sp/><sp/><sp/>get_SMInputs();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/><ref refid="classGambit_1_1Spectrum_1a5866a4e046cb405c509bc5fdb647f654" kindref="member">get_LE</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SubSpectrum" kindref="compound">SubSpectrum</ref>&amp;<sp/>get_HE()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1SMInputs" kindref="compound">SMInputs</ref>&amp;<sp/>get_SMInputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="191"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Clone<sp/>SubSpectrum<sp/>getters</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>To<sp/>clone<sp/>whole<sp/>object,<sp/>just<sp/>use<sp/>copy<sp/>constructor.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SubSpectrum&gt;<sp/><ref refid="classGambit_1_1Spectrum_1a6903b65bc4ef25b19623bd43d974ac43" kindref="member">clone_LE</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SubSpectrum&gt;<sp/>clone_HE()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Pole<sp/>mass<sp/>getters</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>&quot;Shortcut&quot;<sp/>getters<sp/>to<sp/>access<sp/>pole<sp/>masses<sp/>in<sp/>hosted<sp/>SubSpectrum<sp/>objects.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>HE<sp/>object<sp/>given<sp/>higher<sp/>priority;<sp/>if<sp/>no<sp/>match<sp/>found,<sp/>LE<sp/>object<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>checked.<sp/>If<sp/>still<sp/>no<sp/>match,<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1aff88e80feb03efe8fbd5d8c7f5a09716" kindref="member">has</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1aff88e80feb03efe8fbd5d8c7f5a09716" kindref="member">has</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1aff88e80feb03efe8fbd5d8c7f5a09716" kindref="member">has</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>PDB<sp/>getter/checker<sp/>overloads</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1aff88e80feb03efe8fbd5d8c7f5a09716" kindref="member">has</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg_code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg_code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1aff88e80feb03efe8fbd5d8c7f5a09716" kindref="member">has</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/>pdgpr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/>pdgpr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classGambit_1_1Spectrum_1aff88e80feb03efe8fbd5d8c7f5a09716" kindref="member">has</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;str,int&gt;<sp/>shortpr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;str,int&gt;<sp/>shortpr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="217"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Getters<sp/>which<sp/>first<sp/>check<sp/>the<sp/>sanity<sp/>of<sp/>the<sp/>thing<sp/>they<sp/>are<sp/>returning</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1aad78a205abff192d8a579ec768610416" kindref="member">safeget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1aad78a205abff192d8a579ec768610416" kindref="member">safeget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1aad78a205abff192d8a579ec768610416" kindref="member">safeget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdg_code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1aad78a205abff192d8a579ec768610416" kindref="member">safeget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/>pdgpr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1aad78a205abff192d8a579ec768610416" kindref="member">safeget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;str,int&gt;<sp/>shortpr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="225"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="227"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>SLHAea<sp/>object<sp/>getter</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>First<sp/>constructs<sp/>an<sp/>SLHAea<sp/>object<sp/>from<sp/>the<sp/>SMINPUTS<sp/>object,<sp/>then<sp/>adds<sp/>the<sp/>info<sp/>from</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>the<sp/>LE<sp/>subspectrum<sp/>(if<sp/>possible),<sp/>followed<sp/>by<sp/>the<sp/>HE<sp/>subspectrum<sp/>(if<sp/>possible).<sp/>Any<sp/>duplicate</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>entries<sp/>are<sp/>overwritten<sp/>at<sp/>each<sp/>step,<sp/>so<sp/>HE<sp/>takes<sp/>precendence<sp/>over<sp/>LE,<sp/>and<sp/>LE<sp/>takes<sp/>precedence</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>over<sp/>SMINPUTS.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref><sp/><ref refid="classGambit_1_1Spectrum_1af316e339aa956ebf2f200d395cbf6cd7" kindref="member">getSLHAea</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Output<sp/>spectrum<sp/>contents<sp/>as<sp/>an<sp/>SLHA<sp/>file,<sp/>using<sp/>getSLHAea.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a991793775a4ac069059c5423214138ac" kindref="member">writeSLHAfile</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Helper<sp/>function<sp/>to<sp/>drop<sp/>SLHA<sp/>files</highlight></codeline>
<codeline lineno="239"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1ac6dcb73fcfc2bf920e08ed9f50517496" kindref="member">drop_SLHAs_if_requested</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;Options&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>PDG<sp/>code<sp/>translation<sp/>map,<sp/>for<sp/>special<sp/>cases<sp/>where<sp/>an<sp/>SLHA<sp/>file<sp/>has<sp/>been<sp/>read<sp/>in<sp/>and<sp/>the<sp/>PDG<sp/>codes<sp/>changed.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>int&gt;&amp;<sp/><ref refid="classGambit_1_1Spectrum_1a4a0a1ef37af824a26cbb21f4473152e2" kindref="member">PDG_translator</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>CKM<sp/>Wolfenstein<sp/>(lambda,<sp/>A,<sp/>rhobar,<sp/>etabar)<sp/>--&gt;<sp/>V_qq<sp/>standard<sp/>parameterisation<sp/>convertors</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="246"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a7e2ac06aec14321c7efb6daf2a5c57af" kindref="member">Wolf2V_ud</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a668d3020c356dbf9d42a444722231d18" kindref="member">Wolf2V_us</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::complex&lt;double&gt;<sp/><ref refid="classGambit_1_1Spectrum_1a123e2cd17b706f89bce8a6118c5323e2" kindref="member">Wolf2V_ub</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::complex&lt;double&gt;<sp/><ref refid="classGambit_1_1Spectrum_1a0d4ec3ad9fd674a18ecb9d0fa80e2b71" kindref="member">Wolf2V_cd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::complex&lt;double&gt;<sp/><ref refid="classGambit_1_1Spectrum_1af856761ab3d8b8973957b575fdfc89cc" kindref="member">Wolf2V_cs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a6525b04fb4d3aa2d3d9dfc52566aa597" kindref="member">Wolf2V_cb</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::complex&lt;double&gt;<sp/><ref refid="classGambit_1_1Spectrum_1a5d0dc9f5284dd7c3fb7fb072921dc887" kindref="member">Wolf2V_td</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::complex&lt;double&gt;<sp/><ref refid="classGambit_1_1Spectrum_1a2a3110308a1c77396e75a89900a25624" kindref="member">Wolf2V_ts</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Spectrum_1a684440c6baf90fb0e3bdd19fb413c9fb" kindref="member">Wolf2V_tb</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Gambit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Elements/include/gambit/Elements/spectrum.hpp"/>
  </compounddef>
</doxygen>
