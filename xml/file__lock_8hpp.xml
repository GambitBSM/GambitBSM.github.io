<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="file__lock_8hpp" kind="file" language="C++">
    <compoundname>file_lock.hpp</compoundname>
    <includes local="no">string</includes>
    <includedby refid="3bithit_8cpp" local="yes">3bithit.cpp</includedby>
    <includedby refid="ColliderBit__InterpolatedYields_8cpp" local="yes">ColliderBit_InterpolatedYields.cpp</includedby>
    <includedby refid="DarkSUSY__5__1__3_8cpp" local="yes">DarkSUSY_5_1_3.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__1__1_8cpp" local="yes">DarkSUSY_MSSM_6_1_1.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__2__2_8cpp" local="yes">DarkSUSY_MSSM_6_2_2.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__2__5_8cpp" local="yes">DarkSUSY_MSSM_6_2_5.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__1__1_8cpp" local="yes">DarkSUSY_generic_wimp_6_1_1.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__2__2_8cpp" local="yes">DarkSUSY_generic_wimp_6_2_2.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__2__5_8cpp" local="yes">DarkSUSY_generic_wimp_6_2_5.cpp</includedby>
    <includedby refid="HiggsBounds__4__2__1_8cpp" local="yes">HiggsBounds_4_2_1.cpp</includedby>
    <includedby refid="HiggsBounds__4__3__1_8cpp" local="yes">HiggsBounds_4_3_1.cpp</includedby>
    <includedby refid="HiggsSignals__1__4_8cpp" local="yes">HiggsSignals_1_4.cpp</includedby>
    <includedby refid="decay__table_8cpp" local="yes">decay_table.cpp</includedby>
    <includedby refid="file__lock_8cpp" local="yes">file_lock.cpp</includedby>
    <includedby refid="hdf5printer__v2_8hpp" local="yes">hdf5printer_v2.hpp</includedby>
    <includedby refid="logging_8hpp" local="yes">logging.hpp</includedby>
    <includedby refid="spectrum_8cpp" local="yes">spectrum.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>file_lock.hpp</label>
        <link refid="file__lock_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>DarkSUSY_5_1_3.cpp</label>
        <link refid="DarkSUSY__5__1__3_8cpp"/>
      </node>
      <node id="5">
        <label>DarkSUSY_MSSM_6_1_1.cpp</label>
        <link refid="DarkSUSY__MSSM__6__1__1_8cpp"/>
      </node>
      <node id="6">
        <label>DarkSUSY_MSSM_6_2_2.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__2_8cpp"/>
      </node>
      <node id="7">
        <label>DarkSUSY_MSSM_6_2_5.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__5_8cpp"/>
      </node>
      <node id="8">
        <label>DarkSUSY_generic_wimp_6_1_1.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__1__1_8cpp"/>
      </node>
      <node id="9">
        <label>DarkSUSY_generic_wimp_6_2_2.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__2_8cpp"/>
      </node>
      <node id="10">
        <label>DarkSUSY_generic_wimp_6_2_5.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__5_8cpp"/>
      </node>
      <node id="18">
        <label>ini_functions.cpp</label>
        <link refid="Backends_2src_2ini__functions_8cpp"/>
      </node>
      <node id="3">
        <label>ColliderBit_InterpolatedYields.cpp</label>
        <link refid="ColliderBit__InterpolatedYields_8cpp"/>
      </node>
      <node id="2">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="11">
        <label>decay_table.cpp</label>
        <link refid="decay__table_8cpp"/>
      </node>
      <node id="17">
        <label>functors.cpp</label>
        <link refid="Elements_2src_2functors_8cpp"/>
      </node>
      <node id="19">
        <label>ini_functions.cpp</label>
        <link refid="Elements_2src_2ini__functions_8cpp"/>
      </node>
      <node id="23">
        <label>spectrum.cpp</label>
        <link refid="spectrum_8cpp"/>
      </node>
      <node id="16">
        <label>logging.hpp</label>
        <link refid="logging_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>logger.cpp</label>
        <link refid="logger_8cpp"/>
      </node>
      <node id="21">
        <label>logging.cpp</label>
        <link refid="logging_8cpp"/>
      </node>
      <node id="22">
        <label>logmaster.cpp</label>
        <link refid="logmaster_8cpp"/>
      </node>
      <node id="13">
        <label>hdf5printer_v2.hpp</label>
        <link refid="hdf5printer__v2_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>hdf5printer_v2.cpp</label>
        <link refid="hdf5printer__v2_8cpp"/>
      </node>
      <node id="15">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer__v2_2print__overloads_8cpp"/>
      </node>
      <node id="1">
        <label>file_lock.hpp</label>
        <link refid="file__lock_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>file_lock.cpp</label>
        <link refid="file__lock_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGambit_1_1Utils_1_1FileLock" prot="public">Gambit::Utils::FileLock</innerclass>
    <innerclass refid="classGambit_1_1Utils_1_1ProcessLock" prot="public">Gambit::Utils::ProcessLock</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Utils">Gambit::Utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>GAMBIT file locking functions Use these to block access to sensitive parts of the code by other processes when we are using them. For example, some backends do stupid things like initialise themselves by writing and reading files; use these routines to force only one process at a time to perform these routines.</para>
<para>Usage:</para>
<para>{ Utils::FileLock mylock(&quot;some_unique_name&quot;); mylock.get_lock(); /* Do sensitive stuff. No other process will be allowed into this code region while we are here. <emphasis><zwj/>/ mylock.release_lock(); } /</emphasis> If not already done, lock is automatically released when &apos;mylock&apos; is destructed *<zwj/>/</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:ben.farmer@gmail.com">ben.farmer@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Feb</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>GAMBIT<sp/>file<sp/>locking<sp/>functions</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>Use<sp/>these<sp/>to<sp/>block<sp/>access<sp/>to<sp/>sensitive<sp/>parts</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>of<sp/>the<sp/>code<sp/>by<sp/>other<sp/>processes<sp/>when<sp/>we<sp/>are</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>using<sp/>them.<sp/>For<sp/>example,<sp/>some<sp/>backends</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>do<sp/>stupid<sp/>things<sp/>like<sp/>initialise<sp/>themselves</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>by<sp/>writing<sp/>and<sp/>reading<sp/>files;<sp/>use<sp/>these</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>routines<sp/>to<sp/>force<sp/>only<sp/>one<sp/>process<sp/>at<sp/>a<sp/>time</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>to<sp/>perform<sp/>these<sp/>routines.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>Usage:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/>Utils::FileLock<sp/>mylock(&quot;some_unique_name&quot;);</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/>mylock.get_lock();</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/>/*<sp/>Do<sp/>sensitive<sp/>stuff.<sp/>No<sp/>other<sp/>process<sp/>will</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>allowed<sp/>into<sp/>this<sp/>code<sp/>region<sp/>while<sp/>we</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>here.<sp/>*/</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/>mylock.release_lock();</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/><sp/>/*<sp/>If<sp/>not<sp/>already<sp/>done,<sp/>lock<sp/>is<sp/>automatically</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/>released<sp/>when<sp/>&apos;mylock&apos;<sp/>is<sp/>destructed<sp/>*/</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ben.farmer@gmail.com)</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Feb</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__file_lock_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__file_lock_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Utils</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Class<sp/>to<sp/>manage<sp/>a<sp/>file<sp/>lock</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Lock<sp/>will<sp/>be<sp/>automatically<sp/>released<sp/>if<sp/>this<sp/>object<sp/>is<sp/>destructed</highlight></codeline>
<codeline lineno="49" refid="classGambit_1_1Utils_1_1FileLock" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Utils_1_1FileLock" kindref="compound">FileLock</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Name<sp/>for<sp/>the<sp/>managed<sp/>lock<sp/>file</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>my_lock_fname;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>C<sp/>file<sp/>descriptor<sp/>for<sp/>the<sp/>lock<sp/>file</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Bool<sp/>to<sp/>indicate<sp/>if<sp/>we<sp/>already<sp/>have<sp/>the<sp/>lock</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_lock;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Bool<sp/>to<sp/>indicate<sp/>that<sp/>hard<sp/>errors<sp/>should<sp/>be<sp/>thrown<sp/>rather<sp/>than<sp/>gambit<sp/>errors<sp/>(e.g.<sp/>for<sp/>use<sp/>in<sp/>loggers)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hard_errors;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Utils_1_1FileLock_1a8bcce9a6c8168d1cf20ce1dfd751c48a" kindref="member">FileLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>harderrs=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Closing<sp/>the<sp/>file<sp/>descriptor<sp/>will<sp/>automatically<sp/>release<sp/>any<sp/>lock<sp/>we<sp/>might<sp/>have</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Utils_1_1FileLock_1a4f030db82976cb88db9737456dfb4c42" kindref="member">~FileLock</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Obtain<sp/>lock<sp/>(or<sp/>wait<sp/>if<sp/>lock<sp/>cannot<sp/>be<sp/>obtained,<sp/>and<sp/>then<sp/>obtain<sp/>lock)</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Utils_1_1FileLock_1a40dc7048003861d5e543f4bf6876f0dd" kindref="member">get_lock</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Release<sp/>a<sp/>lock<sp/>(error<sp/>if<sp/>no<sp/>lock<sp/>held)</highlight></codeline>
<codeline lineno="76"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Utils_1_1FileLock_1a69e8e2574575749e13d78b30af04e2fc" kindref="member">release_lock</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>lockfile<sp/>name</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classGambit_1_1Utils_1_1FileLock_1a8a6da1bd087bec267f997d71ba24cb0f" kindref="member">get_filename</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Class<sp/>to<sp/>manage<sp/>a<sp/>process<sp/>lock,<sp/>using<sp/>a<sp/>file</highlight></codeline>
<codeline lineno="84" refid="classGambit_1_1Utils_1_1ProcessLock" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Utils_1_1ProcessLock" kindref="compound">ProcessLock</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Utils_1_1FileLock" kindref="compound">FileLock</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Static<sp/>variable<sp/>for<sp/>the<sp/>lock-file<sp/>prefix<sp/>path,<sp/>i.e.<sp/>where<sp/>to<sp/>store<sp/>the<sp/>lock<sp/>file</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>lock_prefix;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Static<sp/>variable<sp/>for<sp/>the<sp/>lock-file<sp/>extension</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>lock_suffix;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Utils_1_1ProcessLock_1a7751fcf9d1b1090eef095d5d7b1cb447" kindref="member">ProcessLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>harderrs=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Utils/include/gambit/Utils/file_lock.hpp"/>
  </compounddef>
</doxygen>
