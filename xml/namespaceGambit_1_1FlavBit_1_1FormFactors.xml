<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespaceGambit_1_1FlavBit_1_1FormFactors" kind="namespace" language="C++">
    <compoundname>Gambit::FlavBit::FormFactors</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a1d683b288f4bf6255ed61f82f2aea035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::K1R</definition>
        <argsstring>(int alpha, int beta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; mnu)</argsstring>
        <name>K1R</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::K1R</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="799" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="799" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a7376b1eb0fbb8221d4c60dbcbed58ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::K2L</definition>
        <argsstring>(int alpha, int beta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>K2L</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::K2L</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="806" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="806" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1ab47dbd3cb9f4bbc020132625309855ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::K2R</definition>
        <argsstring>(int alpha, int beta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>K2R</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::K2R</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="813" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="813" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a73603895f11fab73522918581cd062b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::AVLL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>AVLL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::AVLL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="820" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="820" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a493cc56cfa3d599e8f7de4a02c0d8b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::AVLR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>AVLR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::AVLR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="825" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1acf0ce284208429a9e2cad5547422ade9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::AVRL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>AVRL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::AVRL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="830" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="830" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1acd69d3ff3203050a1f7e41e12fc63407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::AVRR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>AVRR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::AVRR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="835" column="14" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a3dedd63d6e48f3ab8dd5320afa506488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::ASLL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>ASLL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::ASLL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="840" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="840" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1aa82fae7903096d4e7ce68b312dfdfb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::ASLR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>ASLR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::ASLR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="845" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="845" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1ab1ccb2145679a4a0b2c8557ba8f7a1c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::ASRL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>ASRL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::ASRL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="850" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1af2246827f6e2d361e52beb25c3293cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::ASRR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>ASRR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::ASRR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="855" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="855" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1aec2c057e9bffe3fa43f13defe5bc0daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BVLL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>BVLL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BVLL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="860" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="860" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1adefa102310e9421c5ef4db3920bafe45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BVLR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>BVLR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BVLR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="865" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="865" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a1d208cec31e79ab59ed39342e2855164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BVRL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>BVRL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BVRL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="870" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="870" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a0e5754a8b40e811d4e441ac391512249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BVRR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>BVRR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BVRR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="875" column="14" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="875" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a283755f7d469186af0ee611f93c188e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BSLL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>BSLL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BSLL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="880" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="880" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a0c33b873fffcedb9cfead29213371698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BSLR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>BSLR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BSLR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="885" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a40b674916daf7c51f54e3e4794b823b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BSRL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>BSRL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BSRL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="890" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="890" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a532dd747f3da5dcc4a5f24c01609309a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::BSRR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>BSRR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::BSRR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="895" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="895" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a091440479df9b5126a51148e728b05d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CVLL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>CVLL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CVLL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="900" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="900" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a7648f0a35e60ef9052615c4a7c5941c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CVLR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>CVLR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CVLR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="905" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="905" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1afb5ee2abe44db23811c955d67d41a795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CVRL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>CVRL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CVRL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="910" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="910" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a8e6d945475ae5a392fcfc5ba86b8c7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CVRR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu)</argsstring>
        <name>CVRR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CVRR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="915" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="915" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a8ae81f4b36f30e205aa0ae9db528ac23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CSLL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>CSLL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CSLL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="920" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="920" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a3666fdd1ac105e96d88b37b0c751ceea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CSLR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>CSLR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CSLR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="925" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="925" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a6905d24781f2c86b96ccc3d2ca4c14c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CSRL</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>CSRL</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CSRL</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="930" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="930" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="flav__loop__functions_8hpp_1a56c1a30b9da7734828ccbed34034bbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>complex&lt; double &gt; Gambit::FlavBit::FormFactors::CSRR</definition>
        <argsstring>(int alpha, int beta, int gamma, int delta, SMInputs sminputs, Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt; U, vector&lt; double &gt; ml, vector&lt; double &gt; mnu, double mh)</argsstring>
        <name>CSRR</name>
        <qualifiedname>Gambit::FlavBit::FormFactors::CSRR</qualifiedname>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>SMInputs</type>
          <declname>sminputs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; complex&lt; double &gt;, 3, 6 &gt;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>ml</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>mnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="935" column="15" bodyfile="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" bodystart="935" bodyend="938"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="FlavBit/include/gambit/FlavBit/flav_loop_functions.hpp" line="796" column="5"/>
  </compounddef>
</doxygen>
