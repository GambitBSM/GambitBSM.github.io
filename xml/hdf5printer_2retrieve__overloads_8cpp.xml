<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="hdf5printer_2retrieve__overloads_8cpp" kind="file" language="C++">
    <compoundname>hdf5printer/retrieve_overloads.cpp</compoundname>
    <includes refid="hdf5reader_8hpp" local="yes">gambit/Printers/printers/hdf5reader.hpp</includes>
    <includes refid="hdf5printer_8hpp" local="yes">gambit/Printers/printers/hdf5printer.hpp</includes>
    <incdepgraph>
      <node id="112">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>gambit/Backends/default_bossed_versions.hpp</label>
        <link refid="default__bossed__versions_8hpp"/>
      </node>
      <node id="109">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="114">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>gambit/Elements/daFunk.hpp</label>
        <link refid="daFunk_8hpp_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>gambit/Elements/decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>gambit/Elements/flav_prediction.hpp</label>
        <link refid="flav__prediction_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>gambit/Elements/halo_types.hpp</label>
        <link refid="halo__types_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>gambit/Elements/higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>gambit/Elements/printable_types.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2printable__types_8hpp"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Elements/shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>gambit/Elements/spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/Elements/types_rollcall.hpp</label>
        <link refid="types__rollcall_8hpp"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>gambit/Elements/wimp_types.hpp</label>
        <link refid="wimp__types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="68">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>gambit/Printers/VertexBufferBase.hpp</label>
        <link refid="VertexBufferBase_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>gambit/Printers/VertexBufferNumeric1D.hpp</label>
        <link refid="VertexBufferNumeric1D_8hpp"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>gambit/Printers/VertexBuffer_mpitags.hpp</label>
        <link refid="VertexBuffer__mpitags_8hpp"/>
      </node>
      <node id="5">
        <label>gambit/Printers/basebaseprinter.hpp</label>
        <link refid="basebaseprinter_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Printers/baseprinter.hpp</label>
        <link refid="baseprinter_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gambit/Printers/baseprintermanager.hpp</label>
        <link refid="baseprintermanager_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Printers/printer_id_tools.hpp</label>
        <link refid="printer__id__tools_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>gambit/Printers/printers/hdf5printer.hpp</label>
        <link refid="hdf5printer_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>gambit/Printers/printers/hdf5printer/DataSetInterfaceBase.hpp</label>
        <link refid="DataSetInterfaceBase_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>gambit/Printers/printers/hdf5printer/DataSetInterfaceScalar.hpp</label>
        <link refid="DataSetInterfaceScalar_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>gambit/Printers/printers/hdf5printer/VertexBufferNumeric1D_HDF5.hpp</label>
        <link refid="VertexBufferNumeric1D__HDF5_8hpp"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>gambit/Printers/printers/hdf5printer/hdf5tools.hpp</label>
        <link refid="hdf5tools_8hpp"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Printers/printers/hdf5reader.hpp</label>
        <link refid="hdf5reader_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>gambit/Printers/printers/hdf5types.hpp</label>
        <link refid="hdf5types_8hpp"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>retrieve_overloads.cpp</label>
        <link refid="hdf5printer_2retrieve__overloads_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gambit/ScannerBit/printable_types.hpp</label>
        <link refid="ScannerBit_2include_2gambit_2ScannerBit_2printable__types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="36">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="64">
        <label>gambit/Utils/factory_registry.hpp</label>
        <link refid="factory__registry_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Utils/mpiwrapper.hpp</label>
        <link refid="mpiwrapper_8hpp"/>
      </node>
      <node id="62">
        <label>gambit/Utils/new_mpi_datatypes.hpp</label>
        <link refid="new__mpi__datatypes_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="76">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="80">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="65">
        <label>algorithm</label>
      </node>
      <node id="51">
        <label>array</label>
      </node>
      <node id="101">
        <label>assert.h</label>
      </node>
      <node id="83">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="113">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="82">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="27">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="22">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="103">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="23">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="35">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="8">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="70">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="78">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="102">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="123">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="20">
        <label>boost/version.hpp</label>
      </node>
      <node id="45">
        <label>cassert</label>
      </node>
      <node id="86">
        <label>cfloat</label>
      </node>
      <node id="67">
        <label>chrono</label>
      </node>
      <node id="61">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>complex</label>
      </node>
      <node id="131">
        <label>cstddef</label>
      </node>
      <node id="121">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="50">
        <label>deque</label>
      </node>
      <node id="38">
        <label>exception</label>
      </node>
      <node id="49">
        <label>forward_list</label>
      </node>
      <node id="43">
        <label>fstream</label>
      </node>
      <node id="116">
        <label>gambit/Backends/backend_types_rollcall.hpp</label>
      </node>
      <node id="117">
        <label>gambit/Elements/module_types_rollcall.hpp</label>
      </node>
      <node id="118">
        <label>gambit/Models/model_types_rollcall.hpp</label>
      </node>
      <node id="81">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="105">
        <label>gsl/gsl_errno.h</label>
      </node>
      <node id="104">
        <label>gsl/gsl_integration.h</label>
      </node>
      <node id="122">
        <label>hdf5.h</label>
      </node>
      <node id="127">
        <label>iomanip</label>
      </node>
      <node id="42">
        <label>iostream</label>
      </node>
      <node id="60">
        <label>limits</label>
      </node>
      <node id="48">
        <label>list</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="84">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="12">
        <label>omp.h</label>
      </node>
      <node id="63">
        <label>ostream</label>
      </node>
      <node id="37">
        <label>set</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="93">
        <label>stdexcept</label>
      </node>
      <node id="96">
        <label>stdio.h</label>
      </node>
      <node id="97">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="18">
        <label>unistd.h</label>
      </node>
      <node id="46">
        <label>unordered_map</label>
      </node>
      <node id="47">
        <label>unordered_set</label>
      </node>
      <node id="39">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="58">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structGambit_1_1Printers_1_1SLHAcombo" prot="public">Gambit::Printers::SLHAcombo</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Printers">Gambit::Printers</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" prot="public" static="no">
        <name>RETRIEVE</name>
        <param><defname>TYPE</defname></param>
        <initializer>        _retrieve(TYPE&amp; out, const std::string&amp; l, const uint r, const ulong p) \
        { return  _retrieve_template(out,l,0,r,p); }</initializer>
        <briefdescription>
<para>Retrieve functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Templatable retrieve functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/src/printers/hdf5printer/retrieve_overloads.cpp" line="35" column="14" bodyfile="Printers/src/printers/hdf5printer/retrieve_overloads.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="hdf5printer_2retrieve__overloads_8cpp_1a36fce0eee1948ed1c34c0d6fa06f8d16" prot="public" static="no">
        <name>RETRIEVEFROM</name>
        <param><defname>INTYPE</defname></param>
        <param><defname>OUTTYPE</defname></param>
        <initializer>        _retrieve(INTYPE&amp; out, const std::string&amp; l, const uint r, const ulong p) \
        { \
           OUTTYPE outtmp; \
           bool valid = _retrieve_template(outtmp,l,0,r,p); \
           out = (INTYPE)outtmp; \
           return valid; \
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/src/printers/hdf5printer/retrieve_overloads.cpp" line="45" column="14"/>
      </memberdef>
      <memberdef kind="define" id="hdf5printer_2retrieve__overloads_8cpp_1abc99841142259905382f709ff6b7941e" prot="public" static="no">
        <name>LABELNXN</name>
        <param><defname>N</defname></param>
        <param><defname>baseentry</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>block</defname></param>
        <initializer>          for(int i=1; i&lt;=N; i++){ for(int j=1; j&lt;=N; j++) { \
            std::stringstream entry; \
            entry&lt;&lt;baseentry&lt;&lt;&quot;_(&quot;&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;&quot;)&quot;; \
            labels_to_SLHA[entry.str()] = SLHAcombo(tag, block, i, j); \
          }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/src/printers/hdf5printer/retrieve_overloads.cpp" line="327" column="17"/>
      </memberdef>
      <memberdef kind="define" id="hdf5printer_2retrieve__overloads_8cpp_1a70b61c76061745d53f2d0681862d0534" prot="public" static="no">
        <name>LABEL3X3DIAG</name>
        <param><defname>baseentry</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>block</defname></param>
        <initializer>          for(int i=1; i&lt;=3; i++){ \
            std::stringstream entry; \
            entry&lt;&lt;baseentry&lt;&lt;&quot;_(&quot;&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;i&lt;&lt;&quot;)&quot;; \
            labels_to_SLHA[entry.str()] = SLHAcombo(tag, block, i, i); \
          }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/src/printers/hdf5printer/retrieve_overloads.cpp" line="364" column="17"/>
      </memberdef>
      <memberdef kind="define" id="hdf5printer_2retrieve__overloads_8cpp_1abbcef11c2ef802807367d790a30b73ed" prot="public" static="no">
        <name>GETPAR</name>
        <param><defname>OUT</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>TAG</defname></param>
        <param><defname>TEMP_INDEX</defname></param>
        <initializer>        { \
           bool found_tmp; \
           retrieve_and_add_to_SLHAea(out, found_tmp, spec_type, NAME, SLHAcombo(TAG, &quot;TEMP&quot;, TEMP_INDEX), all_dataset_labels, rank, pointID); \
           <ref refid="DarkSUSY__MSSM__6__4__0_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" kindref="member">if</ref>(not found_tmp) \
           { \
              std::ostringstream err; \
              err&lt;&lt;&quot;Failed to find &quot;&lt;&lt;NAME&lt;&lt;&quot; (&quot;&lt;&lt;TAG&lt;&lt;&quot;) needed to compute SLHA spectrum information!&quot;; \
              printer_error().raise(LOCAL_INFO,err.str()); \
           } \
           OUT = SLHAea_get(out,&quot;TEMP&quot;,TEMP_INDEX); \
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/src/printers/hdf5printer/retrieve_overloads.cpp" line="383" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>HDF5 interface reaader class retrieve function overloads. Add a new overload of the _retrieve function in this file if you want to be able to read a new type for postprocessing.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@monash.edu.au">benjamin.farmer@monash.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2017 Jan</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2017 March</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>HDF5<sp/>interface<sp/>reaader<sp/>class<sp/>retrieve<sp/>function</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>overloads.<sp/><sp/>Add<sp/>a<sp/>new<sp/>overload<sp/>of<sp/>the<sp/>_retrieve</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>function<sp/>in<sp/>this<sp/>file<sp/>if<sp/>you<sp/>want<sp/>to<sp/>be<sp/>able</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>to<sp/>read<sp/>a<sp/>new<sp/>type<sp/>for<sp/>postprocessing.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@monash.edu.au)</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\date<sp/>2017<sp/>Jan</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\date<sp/>2017<sp/>March</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hdf5reader_8hpp" kindref="compound">gambit/Printers/printers/hdf5reader.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hdf5printer_8hpp" kindref="compound">gambit/Printers/printers/hdf5printer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Printers</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Retrieve<sp/>functions</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>///<sp/>Templatable<sp/>retrieve<sp/>functions</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>#define<sp/>RETRIEVE(TYPE)<sp/>_retrieve(TYPE&amp;<sp/>out,<sp/>const<sp/>std::string&amp;<sp/>l,<sp/>const<sp/>uint<sp/>r,<sp/>const<sp/>ulong<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>return<sp/><sp/>_retrieve_template(out,l,0,r,p);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" kindref="member">HDF5Reader::RETRIEVE</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" kindref="member">HDF5Reader::RETRIEVE</ref>(uint<sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" kindref="member">HDF5Reader::RETRIEVE</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" kindref="member">HDF5Reader::RETRIEVE</ref>(ulong<sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" kindref="member">HDF5Reader::RETRIEVE</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5printer_2retrieve__overloads_8cpp_1a3f3a7f1284f38642c5f6d19088e1bde5" kindref="member">HDF5Reader::RETRIEVE</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>RETRIEVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>#define<sp/>RETRIEVEFROM(INTYPE,OUTTYPE)<sp/>_retrieve(INTYPE&amp;<sp/>out,<sp/>const<sp/>std::string&amp;<sp/>l,<sp/>const<sp/>uint<sp/>r,<sp/>const<sp/>ulong<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTTYPE<sp/>outtmp;<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>valid<sp/>=<sp/>_retrieve_template(outtmp,l,0,r,p);<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(INTYPE)outtmp;<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>valid;<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HDF5Reader::RETRIEVEFROM(longlong,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HDF5Reader::RETRIEVEFROM(ulonglong,<sp/>ulong)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>RETRIEVEFROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bools<sp/>can&apos;t<sp/>quite<sp/>use<sp/>the<sp/>template<sp/>function<sp/>directly,<sp/>since<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>some<sp/>issues<sp/>with<sp/>bools<sp/>and<sp/>MPI/HDF5<sp/>types.<sp/>Easier<sp/>to<sp/>just<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bool<sp/>to<sp/>an<sp/>int<sp/>first<sp/>(this<sp/>is<sp/>how<sp/>they<sp/>are<sp/>printed<sp/>in<sp/>the<sp/>first<sp/>place<sp/>anyway).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>rank,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/>pID)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>tmp_out;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp_ret;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_ret<sp/>=<sp/>_retrieve_template(tmp_out,l,0,rank,pID);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>tmp_out;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_ret;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(ModelParameters&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>modelname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>rank,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/>pointID)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Work<sp/>out<sp/>all<sp/>the<sp/>output<sp/>labels<sp/>which<sp/>correspond<sp/>to<sp/>the<sp/>input<sp/>modelname</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found_at_least_one(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Searching<sp/>for<sp/>ModelParameters<sp/>of<sp/>model<sp/>&apos;&quot;&lt;&lt;modelname&lt;&lt;&quot;&apos;&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>names<sp/>in<sp/>HDF5<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;std::string&gt;::const_iterator</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>all_datasets.begin();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it!=<sp/>all_datasets.end();<sp/>++it)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Candidate:<sp/>&quot;<sp/>&lt;&lt;*it&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>param_name;<sp/></highlight><highlight class="comment">//<sp/>*output*<sp/>of<sp/>parsing<sp/>function,<sp/>parameter<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>label_root;<sp/></highlight><highlight class="comment">//<sp/>*output*<sp/>of<sp/>parsing<sp/>function,<sp/>label<sp/>minus<sp/>parameter<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceGambit_1_1Printers_1a6f3c9fd5b21e27c128b993b8852db46f" kindref="member">parse_label_for_ModelParameters</ref>(*it,<sp/>modelname,<sp/>param_name,<sp/>label_root))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>found<sp/>parameter<sp/>name<sp/>to<sp/>the<sp/>ModelParameters<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out._definePar(param_name);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found_at_least_one)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.getOutputName()!=label_root)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>HDF5Reader<sp/>could<sp/>not<sp/>retrieve<sp/>ModelParameters<sp/>matching<sp/>the<sp/>model<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;modelname&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>in<sp/>the<sp/>HDF5<sp/>file:group<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;file&lt;&lt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">&lt;&lt;group</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>(while<sp/>calling<sp/>&apos;retrieve&apos;).<sp/>Candidate<sp/>parameters<sp/>WERE<sp/>found,<sp/>however<sp/>their<sp/>dataset<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;labels<sp/>indicate<sp/>the<sp/>presence<sp/>of<sp/>an<sp/>inconsistency<sp/>or<sp/>ambiguity<sp/>in<sp/>the<sp/>output.<sp/>For<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;example,<sp/>we<sp/>just<sp/>tried<sp/>to<sp/>retrive<sp/>a<sp/>model<sp/>parameter<sp/>from<sp/>the<sp/>dataset:\n<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;*it</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\nand<sp/>successfully<sp/>found<sp/>the<sp/>parameter<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;param_name</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>however<sp/>the<sp/>root<sp/>of<sp/>the<sp/>label,<sp/>that<sp/>is,\n<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;label_root</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\ndoes<sp/>not<sp/>match<sp/>the<sp/>root<sp/>expected<sp/>based<sp/>upon<sp/>previous<sp/>parameter<sp/>retrievals<sp/>for<sp/>this<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;model,<sp/>which<sp/>was\n<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;out.getOutputName()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\nThis<sp/>may<sp/>indicate<sp/>that<sp/>multiple<sp/>sets<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;of<sp/>model<sp/>parameters<sp/>are<sp/>present<sp/>in<sp/>the<sp/>output<sp/>file<sp/>for<sp/>the<sp/>same<sp/>model!<sp/>This<sp/>is<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;allowed,<sp/>please<sp/>report<sp/>this<sp/>bug<sp/>against<sp/>whatever<sp/>master<sp/>YAML<sp/>file<sp/>(or<sp/>external<sp/>code?)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;produced<sp/>the<sp/>output<sp/>file<sp/>you<sp/>are<sp/>trying<sp/>to<sp/>read.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,err.str());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setOutputName(label_root);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>corresponding<sp/>value<sp/>out<sp/>of<sp/>the<sp/>data<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value;<sp/></highlight><highlight class="comment">//<sp/>*output*<sp/>of<sp/>retrieve<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp_is_valid;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_is_valid<sp/>=<sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">_retrieve</ref>(value,<sp/>*it,<sp/>rank,<sp/>pointID);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found_at_least_one<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp_is_valid)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setValue(param_name,<sp/>value);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>one<sp/>parameter<sp/>value<sp/>is<sp/>&apos;invalid&apos;<sp/>then<sp/>we<sp/>cannot<sp/>reconstruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ModelParameters<sp/>object,<sp/>so<sp/>we<sp/>mark<sp/>the<sp/>whole<sp/>thing<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setValue(param_name,<sp/>0);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>found_at_least_one)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Didn&apos;t<sp/>find<sp/>any<sp/>matches!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>HDF5Reader<sp/>failed<sp/>to<sp/>find<sp/>any<sp/>ModelParameters<sp/>matching<sp/>the<sp/>model<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal">&lt;&lt;modelname&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>in<sp/>the<sp/>HDF5<sp/>file:group<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;file&lt;&lt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">&lt;&lt;group&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>(while<sp/>calling<sp/>&apos;retrieve&apos;).<sp/>Please<sp/>check<sp/>that<sp/>model<sp/>name<sp/>and<sp/>input<sp/>file/group<sp/>are<sp/>correct.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,err.str());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>done!</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_valid;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structGambit_1_1Printers_1_1SLHAcombo" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1SLHAcombo" kindref="compound">SLHAcombo</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1Printers_1_1SLHAcombo" kindref="compound">SLHAcombo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>tag(t)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>block(b)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>indices{i}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1Printers_1_1SLHAcombo" kindref="compound">SLHAcombo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>tag(t)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>block(b)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>indices{i,j}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1Printers_1_1SLHAcombo" kindref="compound">SLHAcombo</ref>()<sp/>:<sp/>tag(),<sp/>block(),<sp/>indices()<sp/>{}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>block;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HDF5Reader::retrieve_and_add_to_SLHAea(<ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>out,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>found,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>spec_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>entry,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1Printers_1_1SLHAcombo" kindref="compound">SLHAcombo</ref>&amp;<sp/>item,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>all_dataset_labels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>rank,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/>pointID)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/><sp/><sp/>=<sp/>item.tag;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>block<sp/>=<sp/>item.block;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>indices<sp/>=<sp/>item.indices;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>full<sp/>dataset<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>dataset_label;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset_label&lt;&lt;</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">&lt;&lt;spec_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>@SpecBit::get_MSSM_spectrum_as_map::&quot;</highlight><highlight class="normal">&lt;&lt;entry;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tag!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>dataset_label&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tag;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;dataset_label.str()&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jt<sp/>=<sp/>all_dataset_labels.find(dataset_label.str());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jt==all_dataset_labels.end())</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>entry<sp/>with<sp/>this<sp/>name!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok,<sp/>found!<sp/>Now<sp/>retrieve<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>-999;<sp/></highlight><highlight class="comment">//<sp/>*output*<sp/>of<sp/>retrieve<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp_is_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_is_valid<sp/>=<sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">_retrieve</ref>(value,<sp/>dataset_label.str(),<sp/>rank,<sp/>pointID);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Spectrum<sp/>entry<sp/>found!<sp/>entry:&quot;&lt;&lt;entry&lt;&lt;&quot;,<sp/>tag:&quot;&lt;&lt;tag&lt;&lt;&quot;,<sp/>valid:&quot;&lt;&lt;tmp_is_valid&lt;&lt;&quot;,<sp/>value:&quot;&lt;&lt;value&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp_is_valid)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stick<sp/>entry<sp/>into<sp/>the<sp/>SLHAea<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aae31de64c8868ea47a466b1c9e900b68" kindref="member">SLHAea_check_block</ref>(out,<sp/>block);<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>block<sp/>exists<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indices.size()==1)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/>block,<sp/>indices.at(0),<sp/>value,<sp/>entry+</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">+tag+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indices.size()==2)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/>block,<sp/>indices.at(0),<sp/>indices.at(1),<sp/>value,<sp/>entry+</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">+tag+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err&lt;&lt;</highlight><highlight class="stringliteral">&quot;Received<sp/>invalid<sp/>number<sp/>of<sp/>target<sp/>SLHA<sp/>indices<sp/>for<sp/>dataset:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;dataset_label.str()&lt;&lt;std::endl&lt;&lt;</highlight><highlight class="stringliteral">&quot;Indices<sp/>were:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;indices;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,err.str());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_is_valid;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>(SLHA-only)<sp/>SM<sp/>spectrum<sp/>information<sp/>as<sp/>an<sp/>SLHAea<sp/>object</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(SMslha_SLHAstruct&amp;<sp/>out_main,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>spec_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>rank,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/>pointID)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>out(out_main);<sp/></highlight><highlight class="comment">//<sp/>Interpret<sp/>as<sp/>ordinary<sp/>SLHAea<sp/>base<sp/>class<sp/>to<sp/>get<sp/>operator[]<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,SLHAcombo&gt;<sp/>labels_to_SLHA;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>dataset<sp/>labels<sp/>into<sp/>a<sp/>structure<sp/>that<sp/>we<sp/>can<sp/>search<sp/>quickly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/>all_dataset_labels<sp/>=<sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a03e88f72d504b1bd0e1d0d489b424b3c" kindref="member">get_all_labels</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>24);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>11);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>13);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>7);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>6);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>5);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;nu_1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>12);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;nu_2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>14);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;nu_3&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>8);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Light<sp/>quark<sp/>running<sp/>masses<sp/>(always<sp/>at<sp/>2<sp/>GeV,<sp/>I<sp/>think<sp/>it<sp/>is.<sp/>Whatever<sp/>SLHA<sp/>standard<sp/>says.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;u_1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>22);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;d_1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>21);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;d_2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMINPUTS&quot;</highlight><highlight class="normal">,<sp/>23);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>extract<sp/>and<sp/>add<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=labels_to_SLHA.begin();<sp/>it!=labels_to_SLHA.end();<sp/>++it)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp_is_valid<sp/>=<sp/>retrieve_and_add_to_SLHAea(out,<sp/>found,<sp/>spec_type,<sp/>it-&gt;first,<sp/>it-&gt;second,<sp/>all_dataset_labels,<sp/>rank,<sp/>pointID);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>found)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>HDF5Reader<sp/>encountered<sp/>an<sp/>error<sp/>while<sp/>attempting<sp/>to<sp/>read<sp/>a<sp/>spectrum<sp/>of<sp/>type<sp/>&apos;&quot;</highlight><highlight class="normal">&lt;&lt;spec_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>from<sp/>the<sp/>HDF5<sp/>file:group<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;file&lt;&lt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">&lt;&lt;group&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>(while<sp/>calling<sp/>&apos;retrieve&apos;).<sp/>A<sp/>required<sp/>dataset<sp/>could<sp/>not<sp/>be<sp/>found<sp/>(&quot;</highlight><highlight class="normal">&lt;&lt;it-&gt;first&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,err.str());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>tmp_is_valid)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>read<sp/>any<sp/>more<sp/>if<sp/>some<sp/>required<sp/>spectrum<sp/>entries<sp/>are<sp/>invalid.<sp/>Whole<sp/>spectrum<sp/>is<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_valid;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>MSSM<sp/>spectrum<sp/>information<sp/>as<sp/>an<sp/>SLHAea<sp/>object</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(MSSM_SLHAstruct&amp;<sp/>out_main,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>spec_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>rank,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/>pointID)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>out(out_main);<sp/></highlight><highlight class="comment">//<sp/>Interpret<sp/>as<sp/>ordinary<sp/>SLHAea<sp/>base<sp/>class<sp/>to<sp/>get<sp/>operator[]<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rather<sp/>than<sp/>iterate<sp/>through<sp/>the<sp/>datasets,<sp/>we<sp/>know<sp/>what<sp/>entries<sp/>we<sp/>need<sp/>to<sp/>find,<sp/>so<sp/>we<sp/>will<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directly<sp/>look<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>can<sp/>automate<sp/>this<sp/>after<sp/>the<sp/>SpecBit<sp/>redesign,<sp/>and<sp/>probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>use<sp/>the<sp/>spectrum<sp/>&quot;setter&quot;<sp/>functions<sp/>to<sp/>insert<sp/>this<sp/>data<sp/>directly<sp/>into<sp/>Spectrum<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unfortunately<sp/>those<sp/>don&apos;t<sp/>exist<sp/>in<sp/>the<sp/>current<sp/>SimpleSpectrum<sp/>objects,<sp/>but<sp/>they<sp/>will<sp/>exist<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>redesign.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,SLHAcombo&gt;<sp/>labels_to_SLHA;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;A0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>36);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;H+&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>37);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>24);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;h0_1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>25);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;h0_2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>35);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~g&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000021);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000024);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000037);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000022);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000023);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000025);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000035);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000001);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000003);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~d_3&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000005);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~d_4&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000001);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~d_5&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000003);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~d_6&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000005);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000002);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000004);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~u_3&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000006);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~u_4&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000002);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~u_5&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000004);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~u_6&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000006);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000011);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000013);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~e-_3&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000015);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~e-_4&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000011);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~e-_5&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000013);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~e-_6&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>2000015);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~nu_1&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000012);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~nu_2&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000014);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;~nu_3&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;Pole_Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal">,<sp/>1000016);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Standard<sp/>Model<sp/>masses.<sp/>Turns<sp/>out<sp/>we<sp/>do<sp/>need<sp/>to<sp/>retrieve<sp/>these,<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>might<sp/>have<sp/>shifted<sp/>from<sp/>SMINPUTS<sp/>in<sp/>the<sp/>spectrum<sp/>generation<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSOFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;M1&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;M2&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;M3&quot;</highlight><highlight class="normal"><sp/><sp/>]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;mHd2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/>21);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;mHu2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/>22);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;Mu&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>these<sp/>two<sp/>for<sp/>Higgs<sp/>vev<sp/>and<sp/>tanbeta.<sp/>Not<sp/>SLHA,<sp/>so<sp/>store<sp/>in<sp/>TEMP<sp/>block<sp/>temporarily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//labels_to_SLHA[&quot;vd&quot;]<sp/><sp/>=<sp/>SLHAcombo(&quot;mass1&quot;,<sp/>&quot;TEMP&quot;,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//labels_to_SLHA[&quot;vu&quot;]<sp/><sp/>=<sp/>SLHAcombo(&quot;mass1&quot;,<sp/>&quot;TEMP&quot;,<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//labels_to_SLHA[&quot;mA2&quot;]<sp/>=<sp/>SLHAcombo(&quot;mass2&quot;,<sp/>&quot;HMIX&quot;,<sp/>4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TD,<sp/>TU,<sp/>TE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>LABELNXN(N,baseentry,tag,block)<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=1;<sp/>i&lt;=N;<sp/>i++){<sp/>for(int<sp/>j=1;<sp/>j&lt;=N;<sp/>j++)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>entry;<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry&lt;&lt;baseentry&lt;&lt;&quot;_(&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;&quot;)&quot;;<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[entry.str()]<sp/>=<sp/>SLHAcombo(tag,<sp/>block,<sp/>i,<sp/>j);<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,</highlight><highlight class="stringliteral">&quot;TYd&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;TD&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;TYu&quot;,&quot;mass1&quot;,&quot;TU&quot;)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;TYe&quot;,&quot;mass1&quot;,&quot;TE&quot;)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSQ2,<sp/>MSL2,<sp/>MSD2,<sp/>MSU2,<sp/>MSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;mq2&quot;,&quot;mass2&quot;,&quot;MSQ2&quot;)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;ml2&quot;,&quot;mass2&quot;,&quot;MSL2&quot;)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;md2&quot;,&quot;mass2&quot;,&quot;MSD2&quot;)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;mu2&quot;,&quot;mass2&quot;,&quot;MSU2&quot;)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;me2&quot;,&quot;mass2&quot;,&quot;MSE2&quot;)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NMIX,<sp/>UMIX,<sp/>VMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(4,&quot;~chi0&quot;,&quot;Pole_Mixing&quot;,&quot;NMIX&quot;)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(2,&quot;~chi-&quot;,&quot;Pole_Mixing&quot;,&quot;UMIX&quot;)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(2,&quot;~chi+&quot;,&quot;Pole_Mixing&quot;,&quot;VMIX&quot;)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>USQMIX,<sp/>DSQMIX,<sp/>SELMIX,<sp/>SNUMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(6,&quot;~u&quot;,&quot;Pole_Mixing&quot;,&quot;USQMIX&quot;)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(6,&quot;~d&quot;,&quot;Pole_Mixing&quot;,&quot;DSQMIX&quot;)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(6,&quot;~e-&quot;,&quot;Pole_Mixing&quot;,&quot;SELMIX&quot;)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(3,&quot;~nu&quot;,&quot;Pole_Mixing&quot;,&quot;SNUMIX&quot;)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SCALARMIX,<sp/>PSEUDOSCALARMIX,<sp/>CHARGEMIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>These<sp/>are<sp/>not<sp/>SLHA!<sp/>Will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changed<sp/>after<sp/>SpecBit<sp/>redesign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(2,&quot;h0&quot;,&quot;Pole_Mixing&quot;,&quot;SCALARMIX&quot;)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(2,&quot;A0&quot;,&quot;Pole_Mixing&quot;,&quot;PSEUDOSCALARMIX&quot;)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABELNXN(2,&quot;H+&quot;,&quot;Pole_Mixing&quot;,&quot;CHARGEMIX&quot;)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>LABELNXN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YD,<sp/>YU,<sp/>YE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>LABEL3X3DIAG(baseentry,tag,block)<sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=1;<sp/>i&lt;=3;<sp/>i++){<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>entry;<sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry&lt;&lt;baseentry&lt;&lt;&quot;_(&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;i&lt;&lt;&quot;)&quot;;<sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[entry.str()]<sp/>=<sp/>SLHAcombo(tag,<sp/>block,<sp/>i,<sp/>i);<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABEL3X3DIAG(</highlight><highlight class="stringliteral">&quot;Yd&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;dimensionless&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;YD&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABEL3X3DIAG(&quot;Yu&quot;,&quot;dimensionless&quot;,&quot;YU&quot;)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LABEL3X3DIAG(&quot;Ye&quot;,&quot;dimensionless&quot;,&quot;YE&quot;)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>LABEL3X3DIAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GAUGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;g2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;dimensionless&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GAUGE&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels_to_SLHA[</highlight><highlight class="stringliteral">&quot;g3&quot;</highlight><highlight class="normal">]<sp/>=<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;dimensionless&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GAUGE&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>dataset<sp/>labels<sp/>into<sp/>a<sp/>structure<sp/>that<sp/>we<sp/>can<sp/>search<sp/>quickly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/>all_dataset_labels<sp/>=<sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a03e88f72d504b1bd0e1d0d489b424b3c" kindref="member">get_all_labels</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Macro<sp/>to<sp/>help<sp/>retrive<sp/>parameters<sp/>for<sp/>custom<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>GETPAR(OUT,NAME,TAG,TEMP_INDEX)<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>found_tmp;<sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retrieve_and_add_to_SLHAea(out,<sp/>found_tmp,<sp/>spec_type,<sp/>NAME,<sp/>SLHAcombo(TAG,<sp/>&quot;TEMP&quot;</highlight><highlight class="normal">,<sp/>TEMP_INDEX),<sp/>all_dataset_labels,<sp/>rank,<sp/>pointID);<sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(not<sp/>found_tmp)<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;<sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err&lt;&lt;&quot;Failed<sp/>to<sp/>find<sp/>&quot;&lt;&lt;NAME&lt;&lt;&quot;<sp/>(&quot;&lt;&lt;TAG&lt;&lt;&quot;)<sp/>needed<sp/>to<sp/>compute<sp/>SLHA<sp/>spectrum<sp/>information!&quot;;<sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer_error().raise(LOCAL_INFO,err.str());<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>=<sp/>SLHAea_get(out,&quot;TEMP&quot;,TEMP_INDEX);<sp/>\</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manually<sp/>compute<sp/>tanb<sp/>and<sp/>mA2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vd,vu,BMu;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(vd,</highlight><highlight class="stringliteral">&quot;vd&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mass1&quot;</highlight><highlight class="normal">,1)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(vu,&quot;vu&quot;,&quot;mass1&quot;,2)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(BMu,&quot;BMu&quot;,&quot;mass2&quot;,4)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tb<sp/>=<sp/>vu/vd;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>cos(atan(tb));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2b<sp/>=<sp/>cos(2*atan(tb));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sb<sp/>=<sp/>sin(atan(tb));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vev<sp/>=<sp/>sqrt(vu*vu<sp/>+<sp/>vd*vd);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mA2<sp/>=<sp/>BMu<sp/>/<sp/>(cb*sb);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g1,g2,gprime;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(g1,&quot;g1&quot;,&quot;dimensionless&quot;,31)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(g2,&quot;g2&quot;,&quot;dimensionless&quot;,32)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gprime<sp/>=<sp/>g1*sqrt(3./5.);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin2thetaW<sp/>=<sp/>(gprime*gprime)<sp/>/<sp/>(gprime*gprime<sp/>+<sp/>g2*g2);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TYu3,yt;<sp/></highlight><highlight class="comment">//<sp/>3rd<sp/>gen<sp/>trilinear<sp/>and<sp/>Yukawa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(TYu3,&quot;TYu_(3,3)&quot;,&quot;mass1&quot;,41)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(yt,&quot;Yu_(3,3)&quot;,&quot;dimensionless&quot;,42)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>At<sp/>=<sp/>TYu3<sp/>/<sp/>yt;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tree<sp/>level<sp/>Z<sp/>and<sp/>top<sp/>masses,<sp/>needed<sp/>for<sp/>MSUSY<sp/>reconstruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>old<sp/>data<sp/>sets<sp/>where<sp/>the<sp/>scale<sp/>was<sp/>not<sp/>saved<sp/>in<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MZ<sp/>=<sp/>(1/2.)*sqrt(gprime*gprime<sp/>+<sp/>g2*g2)*vev;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Mt<sp/>=<sp/>yt*vu/sqrt(2.);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Mu;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(Mu,&quot;Mu&quot;,&quot;mass1&quot;,51)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>mixing<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Xt<sp/>=<sp/>At<sp/>-<sp/>Mu<sp/>/<sp/>tb;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mq2_3,<sp/>mu2_3;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(mq2_3,&quot;mq2_(3,3)&quot;,&quot;mass2&quot;,20)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETPAR(mu2_3,&quot;mu2_(3,3)&quot;,&quot;mass2&quot;,21)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reconstruct<sp/>stop<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>mq2_3<sp/>+<sp/>mu2_3<sp/>+<sp/>0.5*MZ*MZ*c2b<sp/>+<sp/>2*Mt*Mt;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>mq2_3<sp/>-<sp/>mu2_3<sp/>+<sp/>(0.5-(4./3.)*sin2thetaW)*MZ*MZ*c2b;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2st1<sp/>=<sp/>0.5*(A<sp/>-<sp/>sqrt(B*B<sp/>+<sp/>4*Mt*Mt*Xt*Xt));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2st2<sp/>=<sp/>0.5*(A<sp/>+<sp/>sqrt(B*B<sp/>+<sp/>4*Mt*Mt*Xt*Xt));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>no<sp/>family<sp/>mixing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MSUSY<sp/>=<sp/>sqrt(sqrt(m2st1)*sqrt(m2st2));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>GETPAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>&quot;scale&quot;<sp/>entry,<sp/>since<sp/>we<sp/>need<sp/>to<sp/>add<sp/>this<sp/>info<sp/>to<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retrieve_and_add_to_SLHAea(out,<sp/>found,<sp/>spec_type,<sp/></highlight><highlight class="stringliteral">&quot;scale(Q)&quot;</highlight><highlight class="normal">,<sp/>SLHAcombo(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TEMP&quot;</highlight><highlight class="normal">,<sp/>0),<sp/>all_dataset_labels,<sp/>rank,<sp/>pointID);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>found)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>some<sp/>older<sp/>datasets<sp/>we<sp/>forgot<sp/>to<sp/>add<sp/>the<sp/>scale<sp/>to<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now<sp/>we<sp/>will<sp/>assume<sp/>the<sp/>spectrum<sp/>was<sp/>output<sp/>by<sp/>FlexibleSUSY,<sp/>in<sp/>which<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>running<sp/>parameters<sp/>will<sp/>be<sp/>defined<sp/>at<sp/>the<sp/>SUSY<sp/>scale<sp/>(geometric<sp/>mean<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DRbar<sp/>stop<sp/>masses).<sp/>TODO:<sp/>Set<sp/>this<sp/>behaviour<sp/>with<sp/>an<sp/>option,<sp/>maybe?<sp/>Not<sp/>sure<sp/>how<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Proper<sp/>calculation<sp/>of<sp/>DRbar<sp/>stop<sp/>masses,<sp/>from<sp/>https://arxiv.org/pdf/0904.2169.pdf<sp/>Eq.<sp/>29<sp/>(with<sp/>non-MSSM<sp/>bits<sp/>removed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>that<sp/>there<sp/>is<sp/>no<sp/>flavour/family<sp/>mixing,<sp/>which<sp/>is<sp/>true<sp/>for<sp/>all<sp/>our<sp/>scans<sp/>so<sp/>far.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Make<sp/>sure<sp/>that<sp/>scale<sp/>is<sp/>output<sp/>if<sp/>we<sp/>do<sp/>have<sp/>this<sp/>mixing<sp/>in<sp/>the<sp/>future!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>extra<sp/>needed<sp/>values<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>MSUSY;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="namespaceGambit_1af4208f4dcce77db90e8b4025bdfdca0e" kindref="member">SLHAea_get</ref>(out,</highlight><highlight class="stringliteral">&quot;TEMP&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>blocks<sp/>that<sp/>require<sp/>scale<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;GAUGE&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;YU&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;YD&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;YE&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;TU&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;TD&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;TE&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;MSQ2&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;MSL2&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;MSD2&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;MSU2&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;MSE2&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1afa79cfbed52e42869789f7c0848411a3" kindref="member">SLHAea_add_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;MSOFT&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>extract<sp/>and<sp/>add<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=labels_to_SLHA.begin();<sp/>it!=labels_to_SLHA.end();<sp/>++it)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp_is_valid<sp/>=<sp/>retrieve_and_add_to_SLHAea(out,<sp/>found,<sp/>spec_type,<sp/>it-&gt;first,<sp/>it-&gt;second,<sp/>all_dataset_labels,<sp/>rank,<sp/>pointID);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>found)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>HDF5Reader<sp/>encountered<sp/>an<sp/>error<sp/>while<sp/>attempting<sp/>to<sp/>read<sp/>a<sp/>spectrum<sp/>of<sp/>type<sp/>&apos;&quot;</highlight><highlight class="normal">&lt;&lt;spec_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>from<sp/>the<sp/>HDF5<sp/>file:group<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;file&lt;&lt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">&lt;&lt;group&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>(while<sp/>calling<sp/>&apos;retrieve&apos;).<sp/>A<sp/>required<sp/>dataset<sp/>could<sp/>not<sp/>be<sp/>found<sp/>(&quot;</highlight><highlight class="normal">&lt;&lt;it-&gt;first&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,err.str());</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>tmp_is_valid)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>read<sp/>any<sp/>more<sp/>if<sp/>some<sp/>required<sp/>spectrum<sp/>entries<sp/>are<sp/>invalid.<sp/>Whole<sp/>spectrum<sp/>is<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>manually<sp/>fix<sp/>up<sp/>a<sp/>few<sp/>entries<sp/>where<sp/>we<sp/>didn&apos;t<sp/>store<sp/>the<sp/>spectrum<sp/>info<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>SLHA<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_valid)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>tb,<sp/></highlight><highlight class="stringliteral">&quot;tan<sp/>beta<sp/>(Q)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>vev,<sp/></highlight><highlight class="stringliteral">&quot;Higgs<sp/>vev<sp/>(Q)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;HMIX&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>mA2,<sp/></highlight><highlight class="stringliteral">&quot;m_A^2<sp/>=<sp/>BMu/(cb*sb)<sp/>(Q)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalisation<sp/>of<sp/>g1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;GAUGE&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>gprime,<sp/></highlight><highlight class="stringliteral">&quot;g&apos;<sp/>(Q)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>off-diagonal<sp/>Yukawa<sp/>terms<sp/>(all<sp/>zero<sp/>due<sp/>to<sp/>SLHA<sp/>conventions,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>require<sp/>them<sp/>internally<sp/>due<sp/>to<sp/>automated<sp/>handling<sp/>of<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>this<sp/>here<sp/>rather<sp/>than<sp/>read<sp/>the<sp/>zeros<sp/>from<sp/>the<sp/>output<sp/>in<sp/>case<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>bother<sp/>to<sp/>output<sp/>them<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>blocks<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Yu&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Yd&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Ye&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=blocks.begin();<sp/>it!=blocks.end();<sp/>++it)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=3;<sp/>i++){<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;=3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>label;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label&lt;&lt;(*it)&lt;&lt;</highlight><highlight class="stringliteral">&quot;_(&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&lt;&lt;j&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=j)<sp/><ref refid="namespaceGambit_1ae1cc619314afbb2c26095b7232eac18e" kindref="member">SLHAea_add</ref>(out,<sp/>(*it),<sp/>i,<sp/>j,<sp/>0,<sp/>label.str());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_valid;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(std::vector&lt;double&gt;&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(<ref refid="namespaceGambit_1a98f19afeabdc4fcaa456c944cc19a50c" kindref="member">map_str_dbl</ref>&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(<ref refid="namespaceGambit_1ae96b932df1a511063b912a23631f260b" kindref="member">map_str_str</ref>&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(<ref refid="namespaceGambit_1a55029f6c6c6f6ab07a979608d79d5a0b" kindref="member">map_const_str_dbl</ref>&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(<ref refid="namespaceGambit_1a89325f4443e809eee69d8f00d882c52f" kindref="member">map_str_map_str_dbl</ref>&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(<ref refid="namespaceGambit_1ab73aeae729acb498a53c7cff54636e84" kindref="member">map_const_str_map_const_str_dbl</ref>&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(triplet&lt;double&gt;&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(<ref refid="namespaceGambit_1a1ff4cae18c1ff210e4f214a673d90d49" kindref="member">map_intpair_dbl</ref>&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(flav_prediction&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>SCANNER_STANDALONE<sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>types<sp/>inside<sp/>HDF5_BACKEND_TYPES<sp/>need<sp/>to<sp/>go<sp/>inside<sp/>this<sp/>def<sp/>guard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(DM_nucleon_couplings&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Reader_1a080c5bf796d9bb764c3abe7037957570" kindref="member">HDF5Reader::_retrieve</ref>(BBN_container&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*label*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/></highlight><highlight class="comment">/*rank*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/></highlight><highlight class="comment">/*pointID*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,</highlight><highlight class="stringliteral">&quot;NOT<sp/>YET<sp/>IMPLEMENTED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>///<sp/>Helper<sp/>function<sp/>to<sp/>parse<sp/>a<sp/>capability<sp/>name<sp/>to<sp/>a<sp/>dataset<sp/>name</highlight></codeline>
<codeline lineno="561"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HDF5Reader::parse_capability_label(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>capability_label,<sp/>std::string&amp;<sp/>dataset_label)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>dataset<sp/>label<sp/>to<sp/>default<sp/>to<sp/>the<sp/>given<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset_label<sp/>=<sp/>capability_label;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>rest<sp/>only<sp/>if<sp/>the<sp/>label<sp/>does<sp/>not<sp/>have<sp/>the<sp/>form<sp/>of<sp/>a<sp/>dataset<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capability_label[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>capability_label;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataset<sp/>:<sp/>all_datasets)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>capability<sp/>name<sp/>from<sp/>the<sp/>dataset<sp/>and<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cap<sp/>=<sp/>Utils::delimiterSplit(dataset,</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)[0];</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ss.str()<sp/>==<sp/>cap)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset_label<sp/>=<sp/>dataset;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="585"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Printers/src/printers/hdf5printer/retrieve_overloads.cpp"/>
  </compounddef>
</doxygen>
