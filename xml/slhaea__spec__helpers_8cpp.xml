<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="slhaea__spec__helpers_8cpp" kind="file" language="C++">
    <compoundname>slhaea_spec_helpers.cpp</compoundname>
    <includes refid="standalone__error__handlers_8hpp" local="yes">gambit/Utils/standalone_error_handlers.hpp</includes>
    <includes refid="version_8hpp" local="yes">gambit/Utils/version.hpp</includes>
    <includes refid="slhaea__helpers_8hpp" local="yes">gambit/Utils/slhaea_helpers.hpp</includes>
    <includes refid="slhaea__spec__helpers_8hpp" local="yes">gambit/Elements/slhaea_spec_helpers.hpp</includes>
    <includes refid="subspectrum_8hpp" local="yes">gambit/Elements/subspectrum.hpp</includes>
    <incdepgraph>
      <node id="52">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>slhaea_spec_helpers.cpp</label>
        <link refid="slhaea__spec__helpers_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="54">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="23">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="12">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="49">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="58">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>gambit/Utils/version.hpp</label>
        <link refid="version_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="47">
        <label>array</label>
      </node>
      <node id="62">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="61">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="14">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="8">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="20">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="9">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="19">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="7">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="18">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="22">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="16">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="17">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="51">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="41">
        <label>cassert</label>
      </node>
      <node id="56">
        <label>cfloat</label>
      </node>
      <node id="59">
        <label>chrono</label>
      </node>
      <node id="60">
        <label>cmath</label>
      </node>
      <node id="35">
        <label>complex</label>
      </node>
      <node id="34">
        <label>cstring</label>
      </node>
      <node id="46">
        <label>deque</label>
      </node>
      <node id="26">
        <label>exception</label>
      </node>
      <node id="45">
        <label>forward_list</label>
      </node>
      <node id="39">
        <label>fstream</label>
      </node>
      <node id="48">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="38">
        <label>iostream</label>
      </node>
      <node id="44">
        <label>list</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="36">
        <label>memory</label>
      </node>
      <node id="63">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="33">
        <label>omp.h</label>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="32">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="40">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>unistd.h</label>
      </node>
      <node id="42">
        <label>unordered_map</label>
      </node>
      <node id="43">
        <label>unordered_set</label>
      </node>
      <node id="28">
        <label>utility</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper functions for dealing with SLHAea and spectrum objects</para>
<para><hruler/>
</para>
<para>Authors:</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Mar</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Jul</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:tomas.gonzalo@monash.edu">tomas.gonzalo@monash.edu</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Jul, Dec</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Helper<sp/>functions<sp/>for<sp/>dealing<sp/>with<sp/>SLHAea<sp/>and</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>spectrum<sp/>objects</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>Authors:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Mar</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jul</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tomas.gonzalo@monash.edu)</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\date<sp/>2020<sp/>Jul,<sp/>Dec</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="standalone__error__handlers_8hpp" kindref="compound">gambit/Utils/standalone_error_handlers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version_8hpp" kindref="compound">gambit/Utils/version.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slhaea__helpers_8hpp" kindref="compound">gambit/Utils/slhaea_helpers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slhaea__spec__helpers_8hpp" kindref="compound">gambit/Elements/slhaea_spec_helpers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="subspectrum_8hpp" kindref="compound">gambit/Elements/subspectrum.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>///<sp/>Add<sp/>an<sp/>entry<sp/>from<sp/>a<sp/>subspectrum<sp/>getter<sp/>to<sp/>an<sp/>SLHAea<sp/>object;<sp/>SLHA<sp/>index<sp/>given<sp/>by<sp/>pdg<sp/>code</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(<ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>slha<sp/></highlight><highlight class="comment">/*modify*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>local_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>subspec,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,<sp/>int&gt;&amp;<sp/>pdg_pair,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>comment,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_if_missing,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rescale)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(subspec.has(partype,pdg_pair))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a269b63d64e41a85a70d9ab89a91b29e8" kindref="member">SLHAea_overwrite_block</ref>(slha,<sp/>block,<sp/>pdg_pair.first,<sp/>subspec.get(partype,pdg_pair)*rescale,<sp/>(comment<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>comment));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_if_missing)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>SLHAea<sp/>output<sp/>from<sp/>SubSpectrum<sp/>object!<sp/>Required<sp/>entry<sp/>not<sp/>found<sp/>(paramtype=&quot;</highlight><highlight class="normal">&lt;&lt;Par::toString.at(partype)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>pdg:context=&quot;</highlight><highlight class="normal">&lt;&lt;pdg_pair.first&lt;&lt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">&lt;&lt;pdg_pair.second&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(local_info,errmsg.str());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>skip<sp/>this<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>///<sp/>Add<sp/>an<sp/>entry<sp/>from<sp/>a<sp/>subspectrum<sp/>getter<sp/>to<sp/>an<sp/>SLHAea<sp/>object;<sp/>1<sp/>SLHA<sp/>index</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(<ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>slha<sp/></highlight><highlight class="comment">/*modify*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>local_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>subspec,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slha_index,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>comment,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_if_missing,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rescale)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(subspec.has(partype,name))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a269b63d64e41a85a70d9ab89a91b29e8" kindref="member">SLHAea_overwrite_block</ref>(slha,<sp/>block,<sp/>slha_index,<sp/>subspec.get(partype,name)*rescale,<sp/>(comment<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>comment));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_if_missing)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>SLHAea<sp/>output<sp/>from<sp/>SubSpectrum<sp/>object!<sp/>Required<sp/>entry<sp/>not<sp/>found<sp/>(paramtype=&quot;</highlight><highlight class="normal">&lt;&lt;Par::toString.at(partype)&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>name=&quot;</highlight><highlight class="normal">&lt;&lt;name&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(local_info,errmsg.str());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>skip<sp/>this<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>///<sp/>Add<sp/>an<sp/>entry<sp/>from<sp/>a<sp/>subspectrum<sp/>getter<sp/>to<sp/>an<sp/>SLHAea<sp/>object;<sp/>two<sp/>SubSpectrum<sp/>getter<sp/>indices,<sp/>two<sp/>SLHA<sp/>indices</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(<ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>slha<sp/></highlight><highlight class="comment">/*modify*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>local_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>subspec,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4" kindref="member">Par::Tags</ref><sp/>partype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>block,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slha_index1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slha_index2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>comment,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_if_missing,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rescale)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(subspec.has(partype,name,index1,index2))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a269b63d64e41a85a70d9ab89a91b29e8" kindref="member">SLHAea_overwrite_block</ref>(slha,<sp/>block,<sp/>slha_index1,<sp/>slha_index2,<sp/>subspec.get(partype,name,index1,index2)*rescale,<sp/>(comment<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>comment));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_if_missing)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>SLHAea<sp/>output<sp/>from<sp/>SubSpectrum<sp/>object!<sp/>Required<sp/>entry<sp/>not<sp/>found<sp/>(paramtype=&quot;</highlight><highlight class="normal">&lt;&lt;Par::toString.at(partype)&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>name=&quot;</highlight><highlight class="normal">&lt;&lt;name&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>index1=&quot;</highlight><highlight class="normal">&lt;&lt;index1&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>index2=&quot;</highlight><highlight class="normal">&lt;&lt;index2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(local_info,errmsg.str());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>skip<sp/>this<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/>///<sp/>Adds<sp/>QNUMBERS<sp/>entry<sp/>for<sp/>a<sp/>particle,<sp/>SLHA<sp/>index<sp/>given<sp/>by<sp/>the<sp/>PDG<sp/>code</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2069170788af5a0c328592e428dfef20" kindref="member">SLHAea_add_QNumbers_from_subspec</ref>(<ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>slha,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>subspec,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/>pdg_pair)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subspec.has(<ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4a32659f80534c7cfd1734a08c89541edc" kindref="member">Par::Pole_Mass</ref>,pdg_pair))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>long_name<sp/>=<sp/><ref refid="namespaceGambit_1_1Models_1ac9dc2c9287420eaa1e348f6ff70e6cb0" kindref="member">Models::ParticleDB</ref>().<ref refid="classGambit_1_1Models_1_1partmap_1af6c66f10b424cb55f26662552d4c6f54" kindref="member">long_name</ref>(pdg_pair);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spinx2<sp/>=<sp/><ref refid="namespaceGambit_1_1Models_1ac9dc2c9287420eaa1e348f6ff70e6cb0" kindref="member">Models::ParticleDB</ref>().<ref refid="classGambit_1_1Models_1_1partmap_1a1908c53c2d1d4d417a0e578a1fe52703" kindref="member">get_spinx2</ref>(long_name);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chargex3<sp/>=<sp/><ref refid="namespaceGambit_1_1Models_1ac9dc2c9287420eaa1e348f6ff70e6cb0" kindref="member">Models::ParticleDB</ref>().<ref refid="classGambit_1_1Models_1_1partmap_1a5d04c28642374298ac4ea97582e5fb4a" kindref="member">get_chargex3</ref>(long_name);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color<sp/>=<sp/><ref refid="namespaceGambit_1_1Models_1ac9dc2c9287420eaa1e348f6ff70e6cb0" kindref="member">Models::ParticleDB</ref>().<ref refid="classGambit_1_1Models_1_1partmap_1a47b6ac3e52be525be0611149f5649d02" kindref="member">get_color</ref>(long_name);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_anti<sp/>=<sp/><ref refid="namespaceGambit_1_1Models_1ac9dc2c9287420eaa1e348f6ff70e6cb0" kindref="member">Models::ParticleDB</ref>().<ref refid="classGambit_1_1Models_1_1partmap_1af5bc10378abdda7c184ee9c56ea1bd09" kindref="member">has_antiparticle</ref>(long_name);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SLHAea::Block<sp/>QNblock(</highlight><highlight class="stringliteral">&quot;QNUMBERS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SLHAea::Line<sp/>line1,<sp/>line2,<sp/>line3,<sp/>line4,<sp/>line5;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BLOCK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;QNUMBERS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pdg_pair.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>long_name;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line2<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>chargex3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>3<sp/>times<sp/>electric<sp/>charge&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line3<sp/>&lt;&lt;<sp/>2<sp/>&lt;&lt;<sp/>spinx2+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>number<sp/>of<sp/>spin<sp/>states<sp/>(2S+1)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line4<sp/>&lt;&lt;<sp/>3<sp/>&lt;&lt;<sp/>color<sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>colour<sp/>rep<sp/>(1:<sp/>singlet,<sp/>3:<sp/>triplet,<sp/>8:<sp/>octet)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line5<sp/>&lt;&lt;<sp/>4<sp/>&lt;&lt;<sp/>is_anti<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Particle/Antiparticle<sp/>distinction<sp/>(0=own<sp/>anti)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QNblock.push_back(line1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QNblock.push_back(line2);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QNblock.push_back(line3);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QNblock.push_back(line4);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QNblock.push_back(line5);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slha.push_front(QNblock);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/>///<sp/>Write<sp/>a<sp/>SimpleSpectrum<sp/>to<sp/>an<sp/>SLHAea<sp/>object.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2b1784799b76c3c950d2a92510426cf2" kindref="member">add_SimpleSpec_to_SLHAea</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>subspec,<sp/><ref refid="namespaceGambit_1a4df3d966ed9733910719e3497cb886c6" kindref="member">SLHAstruct</ref>&amp;<sp/>slha,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrumContents&amp;<sp/>contents)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pick<sp/>out<sp/>the<sp/>parameters<sp/>whose<sp/>SLHA<sp/>block<sp/>name<sp/>is<sp/>not:<sp/>SMINPUTS,<sp/>CKMBLOCK,<sp/>YUKAWA,<sp/>or<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpectrumParameter&gt;<sp/>bsm<sp/>=<sp/>contents.all_BSM_parameters();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>assign<sp/>them<sp/>to<sp/>the<sp/>correct<sp/>part<sp/>of<sp/>the<sp/>SLHAea<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;SpectrumParameter&gt;::const_iterator<sp/>it<sp/>=<sp/>bsm.begin();<sp/>it<sp/>!=<sp/>bsm.end();<sp/>++it)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>SLHAea<sp/>comment<sp/>changes<sp/>based<sp/>on<sp/>the<sp/>ParType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>comment;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>a<sp/>mass,<sp/>we<sp/>always<sp/>want<sp/>to<sp/>write<sp/>it<sp/>to<sp/>the<sp/>MASS<sp/>block.<sp/>Otherwise<sp/>use<sp/>what&apos;s<sp/>been<sp/>specified<sp/>explicitly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>blockname<sp/>=<sp/>(it-&gt;tag()<sp/>==<sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4a32659f80534c7cfd1734a08c89541edc" kindref="member">Par::Pole_Mass</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;MASS&quot;</highlight><highlight class="normal"><sp/>:<sp/>it-&gt;blockname());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;tag()<sp/>==<sp/><ref refid="namespaceGambit_1_1Par_1ac8185e571d2b5febfc74c2ce6b8f27d4a32659f80534c7cfd1734a08c89541edc" kindref="member">Par::Pole_Mass</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comment<sp/>&lt;&lt;<sp/>it-&gt;name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mass.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>pdg_pair<sp/>=<sp/><ref refid="namespaceGambit_1_1Models_1ac9dc2c9287420eaa1e348f6ff70e6cb0" kindref="member">Models::ParticleDB</ref>().<ref refid="classGambit_1_1Models_1_1partmap_1abbd3fba183feb23a6729e8d4ab9b3c66" kindref="member">pdg_pair</ref>(it-&gt;name());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(slha,<sp/>LOCAL_INFO,<sp/>subspec,<sp/>it-&gt;tag(),<sp/>pdg_pair,<sp/>blockname,<sp/>comment.str());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a2069170788af5a0c328592e428dfef20" kindref="member">SLHAea_add_QNumbers_from_subspec</ref>(slha,<sp/>subspec,<sp/>pdg_pair);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scalar<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;shape().size()==1<sp/>and<sp/>it-&gt;shape()[0]==1)<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(slha,<sp/>LOCAL_INFO,<sp/>subspec,<sp/>it-&gt;tag(),<sp/>it-&gt;name(),<sp/>blockname,<sp/>it-&gt;blockindex(),<sp/>comment.str());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>(1<sp/>index)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;shape().size()<sp/>==<sp/>1<sp/>and<sp/>it-&gt;shape()[0]<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;it-&gt;shape()[0]+1;<sp/>++i)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>+1<sp/>to<sp/>each<sp/>entry<sp/>for<sp/>the<sp/>BLOCKNAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(slha,<sp/>LOCAL_INFO,<sp/>subspec,<sp/>it-&gt;tag(),<sp/>it-&gt;name(),<sp/>blockname,<sp/>it-&gt;blockindex()+i,<sp/>comment.str());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>(2<sp/>indices)<sp/>--<sp/>blockindex()<sp/>should<sp/>just<sp/>start<sp/>from<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;shape().size()<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;it-&gt;shape()[0]+1;<sp/>++i)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;it-&gt;shape()[0]+1;<sp/>++j)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a118e1a1a69132ec0187ae6da8c865850" kindref="member">SLHAea_add_from_subspec</ref>(slha,<sp/>LOCAL_INFO,<sp/>subspec,<sp/>it-&gt;tag(),<sp/>it-&gt;name(),<sp/>i,<sp/>j,<sp/>blockname,<sp/>i,<sp/>j,<sp/>comment.str());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="Elements/src/slhaea_spec_helpers.cpp"/>
  </compounddef>
</doxygen>
