<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdaFunk_1_1FunkDerived" kind="class" language="C++" prot="public">
    <compoundname>daFunk::FunkDerived</compoundname>
    <basecompoundref refid="classdaFunk_1_1FunkBase" prot="public" virt="non-virtual">daFunk::FunkBase</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdaFunk_1_1FunkDerived_1a0be665224b780c89a3776a7a84d07c65" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string daFunk::FunkDerived::my_arg</definition>
        <argsstring></argsstring>
        <name>my_arg</name>
        <qualifiedname>daFunk::FunkDerived::my_arg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="675" column="25" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdaFunk_1_1FunkDerived_1a5bcf4822d42b73f6bdc66d7a716d7a2a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; daFunk::FunkDerived::my_index</definition>
        <argsstring></argsstring>
        <name>my_index</name>
        <qualifiedname>daFunk::FunkDerived::my_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="687" column="25" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="687" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdaFunk_1_1FunkDerived_1a4e336ce9c22c1c8af342f833e8874fca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>daFunk::FunkDerived::FunkDerived</definition>
        <argsstring>(Funk f, std::string arg, Funk g)</argsstring>
        <name>FunkDerived</name>
        <qualifiedname>daFunk::FunkDerived::FunkDerived</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>f</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>Funk</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="616" column="13" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="616" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkDerived_1a7e043b4d977449c0c5d962a5b4c28501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>daFunk::FunkDerived::FunkDerived</definition>
        <argsstring>(Funk f, std::string arg, double x)</argsstring>
        <name>FunkDerived</name>
        <qualifiedname>daFunk::FunkDerived::FunkDerived</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>f</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="621" column="13" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="621" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkDerived_1aa790546c6bc3522178c3fafe5b6ff16f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void daFunk::FunkDerived::resolve</definition>
        <argsstring>(std::map&lt; std::string, size_t &gt; datamap, size_t &amp;datalen, size_t bindID, std::map&lt; std::string, size_t &gt; &amp;argmap)</argsstring>
        <name>resolve</name>
        <qualifiedname>daFunk::FunkDerived::resolve</qualifiedname>
        <reimplements refid="classdaFunk_1_1FunkBase_1a7bcba52829e2cd811df21971a8fcae0b">resolve</reimplements>
        <param>
          <type>std::map&lt; std::string, size_t &gt;</type>
          <declname>datamap</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>datalen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bindID</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, size_t &gt; &amp;</type>
          <declname>argmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="627" column="18" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="627" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classdaFunk_1_1FunkDerived_1a45d034ac4ca706be806d974ded89cd12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double daFunk::FunkDerived::value</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;data, size_t bindID)</argsstring>
        <name>value</name>
        <qualifiedname>daFunk::FunkDerived::value</qualifiedname>
        <reimplements refid="classdaFunk_1_1FunkBase_1a8646477e9ad3843343f86466b8a34f14">value</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bindID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="667" column="20" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="667" bodyend="672"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdaFunk_1_1FunkDerived_1ab21ba5c3f33129ff6df13541e8ac22f8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void daFunk::FunkDerived::setup</definition>
        <argsstring>(Funk f, std::string arg, Funk g)</argsstring>
        <name>setup</name>
        <qualifiedname>daFunk::FunkDerived::setup</qualifiedname>
        <param>
          <type>Funk</type>
          <declname>f</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>Funk</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/daFunk.hpp" line="678" column="18" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="678" bodyend="686"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>enable_shared_from_this&lt; FunkBase &gt;</label>
      </node>
      <node id="2">
        <label>daFunk::FunkBase</label>
        <link refid="classdaFunk_1_1FunkBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>daFunk::FunkDerived</label>
        <link refid="classdaFunk_1_1FunkDerived"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>enable_shared_from_this&lt; FunkBase &gt;</label>
      </node>
      <node id="2">
        <label>daFunk::FunkBase</label>
        <link refid="classdaFunk_1_1FunkBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>daFunk::FunkDerived</label>
        <link refid="classdaFunk_1_1FunkDerived"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Elements/include/gambit/Elements/daFunk.hpp" line="613" column="5" bodyfile="Elements/include/gambit/Elements/daFunk.hpp" bodystart="614" bodyend="688"/>
    <listofallmembers>
      <member refid="classdaFunk_1_1FunkBase_1a73ec0ca81fe7249e7ee09b67a59e471b" prot="protected" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>arguments</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a679402022fce75370ad30477b92f502d" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>assert_args</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ad7ab386a6519b1ef6cba6ac0b391e431" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>bind</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ab80524b8e5c7a60570f18df12af05ae8" prot="protected" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>datalen</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a020c9ed50ea915133590d9dd8a8731be" prot="protected" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>functions</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a7a657dce4094e02dbc3d8b135a260181" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>FunkBase</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1a4e336ce9c22c1c8af342f833e8874fca" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>FunkDerived</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1a7e043b4d977449c0c5d962a5b4c28501" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>FunkDerived</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a0d349a5a4c0bedb82e59e884d06cd605" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>getArgs</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a674bc7d66557067d147143f0d33f4c96" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>getNArgs</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a37d346d0ce8455da5181eac03b1ec086" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>getSingl</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a696c3b38624a384adb3964bc46b6daab" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>gsl_integration</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a11d7ff51370a518e5ce71973084ee762" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>hasArg</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ac95b8e5d3310cca11d0ac66b0f3bd3c2" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>hasArgs</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ab858b68aa634343727b8937f40975b1f" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>help</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a310cde28ae9265ee10ff7a971483a71f" prot="protected" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>indices</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1a0be665224b780c89a3776a7a84d07c65" prot="private" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>my_arg</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1a5bcf4822d42b73f6bdc66d7a716d7a2a" prot="private" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>my_index</name></member>
      <member refid="classdaFunk_1_1FunkBase_1abd4786ace406ae301e73c792576d46e4" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a1a35ec40bfe8cacc5db1bf1702b26b23" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a014b761207f78de72402ffe2ac9574b7" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1acb8abf10f25053ecd960cca112d62079" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a9a13d87e37788d771820668138e510d8" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1acd7b36586f8c1d403ab328d3f45bcdb2" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ae740382c4e301e4b263848036d8878d5" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a8765d42b92b146d43005f5768ddc2d4e" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>plain</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a8b0a5b7c978dfa79238cb6f4632c5ff4" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>print</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1aa790546c6bc3522178c3fafe5b6ff16f" prot="public" virt="virtual"><scope>daFunk::FunkDerived</scope><name>resolve</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a59ef787d56af732ab2249a94f07bb52b" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1aae15a3e1d861fef9e58201d90290a833" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a91ad28e40caf2b14207f6b52481a08fe" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a0aa7469b732ce5e6770bad99613d4dd2" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1ac626df236aa4854e90958246de82305a" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>set</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a4a1d787379bf836b29d2d0c6e4a4cad6" prot="public" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>set_singularity</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1ab21ba5c3f33129ff6df13541e8ac22f8" prot="private" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>setup</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a004962513ef67993ce7e66870073fab7" prot="protected" virt="non-virtual"><scope>daFunk::FunkDerived</scope><name>singularities</name></member>
      <member refid="classdaFunk_1_1FunkDerived_1a45d034ac4ca706be806d974ded89cd12" prot="public" virt="virtual"><scope>daFunk::FunkDerived</scope><name>value</name></member>
      <member refid="classdaFunk_1_1FunkBase_1a874043a27bdbd03c118c22c179f58b32" prot="public" virt="virtual"><scope>daFunk::FunkDerived</scope><name>~FunkBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
