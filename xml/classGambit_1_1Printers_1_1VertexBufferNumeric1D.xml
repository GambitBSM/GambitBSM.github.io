<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Printers_1_1VertexBufferNumeric1D" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gambit::Printers::VertexBufferNumeric1D</compoundname>
    <basecompoundref refid="classGambit_1_1Printers_1_1VertexBufferBase" prot="public" virt="non-virtual">Gambit::Printers::VertexBufferBase</basecompoundref>
    <includes refid="VertexBufferNumeric1D_8hpp" local="no">VertexBufferNumeric1D.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>LENGTH</declname>
        <defname>LENGTH</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ab8f467d8d15154110534c7e142e7069c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::buffer_valid[LENGTH]</definition>
        <argsstring>[LENGTH]</argsstring>
        <name>buffer_valid</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::buffer_valid</qualifiedname>
        <briefdescription>
<para>Buffer variables for sequential writing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="98" column="17" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a06becce09189b0922a9815709bcbc5c5" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::buffer_entries[LENGTH]</definition>
        <argsstring>[LENGTH]</argsstring>
        <name>buffer_entries</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::buffer_entries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="99" column="17" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a108ca51ed061c80bff7932047ed9ca55" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::RA_write_queue[LENGTH]</definition>
        <argsstring>[LENGTH]</argsstring>
        <name>RA_write_queue</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::RA_write_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer variables for random access writing Queue for random access writes to dataset (independent of main buffer) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="123" column="17" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a758bb4a211dc5b92e4a11d4a54c44bb9" prot="protected" static="no" mutable="no">
        <type><ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref></type>
        <definition>PPIDpair Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::RA_write_locations[LENGTH]</definition>
        <argsstring>[LENGTH]</argsstring>
        <name>RA_write_locations</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::RA_write_locations</qualifiedname>
        <briefdescription>
<para>Target pointIDs for RA writes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="125" column="20" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a320ed04456a04135e095041dcfa97f58" prot="protected" static="no" mutable="no">
        <type>uint</type>
        <definition>uint Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::RA_queue_length</definition>
        <argsstring></argsstring>
        <name>RA_queue_length</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::RA_queue_length</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Current length of the RA write queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="127" column="17" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a3cf28ff1606a390b8e13697b882226bd" prot="protected" static="no" mutable="no">
        <type>uint</type>
        <definition>uint Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::myRank</definition>
        <argsstring></argsstring>
        <name>myRank</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::myRank</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>MPI rank for this process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="153" column="16" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a85413583b1e0619039af26a73128c87f" prot="private" static="yes" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::bufferlength</definition>
        <argsstring></argsstring>
        <name>bufferlength</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::bufferlength</qualifiedname>
        <initializer>= LENGTH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="156" column="36" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a17a792978b8d22d1e8967699f1850a7d" prot="private" static="yes" mutable="no">
        <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref></type>
        <definition>const PPIDpair Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::null_PPID</definition>
        <argsstring></argsstring>
        <name>null_PPID</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::null_PPID</qualifiedname>
        <initializer>= <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>()</initializer>
        <briefdescription>
<para>Special value for the above to use for skipping the double-append check (e.g. when receiving many points via MPI) </para>
        </briefdescription>
        <detaileddescription>
<para>Static member definitions.</para>
<para>Use to skip the double-append check (for receiving many points via MPI) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="162" column="33" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a22dce92732a8cb4efae5774f661f717a" prot="private" static="no" mutable="no">
        <type><ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref></type>
        <definition>PPIDpair Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::PPID_of_last_append</definition>
        <argsstring></argsstring>
        <name>PPID_of_last_append</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::PPID_of_last_append</qualifiedname>
        <briefdescription>
<para>Variable to check that &quot;append&quot; is not called twice in a row for the same scan point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="159" column="20" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1aa456895a922a37cec681d65a07c266f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::VertexBufferNumeric1D</definition>
        <argsstring>()</argsstring>
        <name>VertexBufferNumeric1D</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::VertexBufferNumeric1D</qualifiedname>
        <briefdescription>
<para>Constructors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="166" column="11" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a0a738a673894f6ae67de83b2ca3b5d55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::VertexBufferNumeric1D</definition>
        <argsstring>(const std::string &amp;label, const int vID, const unsigned int i, const bool sync, const bool sil, const bool resume, const char access)</argsstring>
        <name>VertexBufferNumeric1D</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::VertexBufferNumeric1D</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>vID</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>sync</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>sil</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>resume</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>access</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="208" column="11" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="208" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1adda8f278945e40fd34cb2395d27363fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::~VertexBufferNumeric1D</definition>
        <argsstring>()</argsstring>
        <name>~VertexBufferNumeric1D</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::~VertexBufferNumeric1D</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="232" column="11" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="232" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ac5d529c2bdb86f7704b3f548048ea663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::append</definition>
        <argsstring>(const T &amp;value, const PPIDpair pID=null_PPID)</argsstring>
        <name>append</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::append</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
          <defname>data</defname>
        </param>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref></type>
          <declname>pID</declname>
          <defval>null_PPID</defval>
        </param>
        <briefdescription>
<para>Append a record to the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D" kindref="compound">VertexBufferNumeric1D</ref> function definitions.</para>
<para>Append a record to the buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="236" column="16" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="313" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a1d8b05c9ec23ae54d00a1bb46d4cf61c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned long</type>
        <definition>virtual unsigned long Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::dset_head_pos</definition>
        <argsstring>()=0</argsstring>
        <name>dset_head_pos</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::dset_head_pos</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1VertexBufferBase_1a9ce2a5fe047877b59815c0eb1b40c29c">dset_head_pos</reimplements>
        <reimplementedby refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D__HDF5_1a9f0ed357d9498d373dce883e25b17285">dset_head_pos</reimplementedby>
        <briefdescription>
<para>Virtual for debugging; find out what the absolute sync position is from the derived class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="239" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ab9b07f219be3041825645163cac93b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::update_dset_head_pos</definition>
        <argsstring>()=0</argsstring>
        <name>update_dset_head_pos</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::update_dset_head_pos</qualifiedname>
        <reimplementedby refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D__HDF5_1afa6d56811de60b1cd2dfbd59e4e6d509">update_dset_head_pos</reimplementedby>
        <briefdescription>
<para>Virtual for debugging: Update the variables needed to track the currently target dset slot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="242" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1abe0a5600f473b49f5ffbbf4a46d642d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::RA_write</definition>
        <argsstring>(const T &amp;value, const PPIDpair pID, const std::map&lt; PPIDpair, ulong &gt; &amp;PPID_to_dsetindex)</argsstring>
        <name>RA_write</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::RA_write</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref></type>
          <declname>pID</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>, ulong &gt; &amp;</type>
          <declname>PPID_to_dsetindex</declname>
        </param>
        <briefdescription>
<para>Queue up a desynchronised (&quot;random access&quot;) dataset write to previous scan iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="245" column="16" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="540" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ababb397a0ed95d0211b3e5b4e0766689" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::skip_append</definition>
        <argsstring>()</argsstring>
        <name>skip_append</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::skip_append</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1VertexBufferBase_1abaca845ed3d53775a6cc201045f33a27">skip_append</reimplements>
        <briefdescription>
<para>No data to append this iteration; skip this slot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="248" column="24" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="373" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ab2442b4be363dee6e46c9fdf1f7f061c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::N_skip_append</definition>
        <argsstring>(ulong N)</argsstring>
        <name>N_skip_append</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::N_skip_append</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1VertexBufferBase_1a83a121e88581d68207012dfd40007551">N_skip_append</reimplements>
        <param>
          <type>ulong</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip several/many positions NOTE! This is meant for initialising new buffers to the correct position. If buffer overflows it may get cleared without data being written, so don&apos;t use this in other contexts.</para>
<para>TODO: Deprecated. Skip several/many positions NOTE! This is meant for initialising new buffers to the correct position. If buffer overflows it will be cleared without data being written, so don&apos;t use this in other contexts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="254" column="24" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="824" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ad88a686c9b2f6f0489b8f8542350499f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::flush</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1VertexBufferBase_1a61f5716deb3f5ae1d967d168b9a60315">flush</reimplements>
        <briefdescription>
<para>Either send sync buffer data to master node via MPI, or trigger the write to disk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="257" column="24" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="405" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1afd26e1c5dc2dc687e3e0a6292db49c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::RA_flush</definition>
        <argsstring>(const std::map&lt; PPIDpair, ulong &gt; &amp;PPID_to_dsetindex)</argsstring>
        <name>RA_flush</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::RA_flush</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1VertexBufferBase_1a072c1b13e70b57299b67a4fb478aab50">RA_flush</reimplements>
        <param>
          <type>const std::map&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>, ulong &gt; &amp;</type>
          <declname>PPID_to_dsetindex</declname>
        </param>
        <briefdescription>
<para>Either send random-access buffer data to master node via MPI, or trigger the write to disk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="260" column="24" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="468" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a79181c3969e8fc6dafe68ebb90d5275e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::write_to_disk</definition>
        <argsstring>()=0</argsstring>
        <name>write_to_disk</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::write_to_disk</qualifiedname>
        <reimplementedby refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D__HDF5_1a9a994758abc471400605cd0310de9782">write_to_disk</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="263" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a12857c50db85a4b1bf53d1d074a214b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::RA_write_to_disk</definition>
        <argsstring>(const std::map&lt; PPIDpair, ulong &gt; &amp;PPID_to_dsetindex)=0</argsstring>
        <name>RA_write_to_disk</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::RA_write_to_disk</qualifiedname>
        <reimplementedby refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D__HDF5_1a02748544b4e30532b2299c4b4df33367">RA_write_to_disk</reimplementedby>
        <param>
          <type>const std::map&lt; <ref refid="structGambit_1_1Printers_1_1PPIDpair" kindref="compound">PPIDpair</ref>, ulong &gt; &amp;</type>
          <declname>PPID_to_dsetindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="266" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a8f0e432917b9d060614f486b96c804d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::write_external_to_disk</definition>
        <argsstring>(const T(&amp;values)[LENGTH], const bool(&amp;isvalid)[LENGTH])=0</argsstring>
        <name>write_external_to_disk</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::write_external_to_disk</qualifiedname>
        <param>
          <type>const T(&amp;)</type>
          <declname>values</declname>
          <array>[LENGTH]</array>
        </param>
        <param>
          <type>const bool(&amp;)</type>
          <declname>isvalid</declname>
          <array>[LENGTH]</array>
        </param>
        <briefdescription>
<para>Write externally-supplied buffer to HDF5 dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="269" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a43f0da822195f49f0ed510a182b4dbb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>uint</type>
        <definition>virtual uint Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;::get_RA_queue_length</definition>
        <argsstring>()</argsstring>
        <name>get_RA_queue_length</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::get_RA_queue_length</qualifiedname>
        <reimplements refid="classGambit_1_1Printers_1_1VertexBufferBase_1ab97a7a19588f02c2e6c91c373034105f">get_RA_queue_length</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="291" column="24" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a458f1c7554671628afe5013c6c830e6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::get_entry</definition>
        <argsstring>(const std::size_t i) const</argsstring>
        <name>get_entry</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::get_entry</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Extract (copy) a record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="294" column="13" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="775" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a627b74b147e74badd18bbdd89cba1ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Printers::VertexBufferNumeric1D&lt; T, L &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Gambit::Printers::VertexBufferNumeric1D::clear</qualifiedname>
        <briefdescription>
<para>Clear the buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="297" column="16" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="794" bodyend="816"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>VertexBuffer for simple numerical types. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Gambit::Printers::VertexBufferBase</label>
        <link refid="classGambit_1_1Printers_1_1VertexBufferBase"/>
      </node>
      <node id="1">
        <label>Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;</label>
        <link refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Gambit::Printers::PPIDpair</label>
        <link refid="structGambit_1_1Printers_1_1PPIDpair"/>
      </node>
      <node id="2">
        <label>Gambit::Printers::VertexBufferBase</label>
        <link refid="classGambit_1_1Printers_1_1VertexBufferBase"/>
      </node>
      <node id="1">
        <label>Gambit::Printers::VertexBufferNumeric1D&lt; T, LENGTH &gt;</label>
        <link refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>RA_write_locations</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" line="93" column="7" bodyfile="Printers/include/gambit/Printers/VertexBufferNumeric1D.hpp" bodystart="94" bodyend="299"/>
    <listofallmembers>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1ad083101b23acabf8024a6a0697bf0fe7" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>access_mode</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ac5d529c2bdb86f7704b3f548048ea663" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>append</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a06becce09189b0922a9815709bcbc5c5" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>buffer_entries</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ab8f467d8d15154110534c7e142e7069c" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>buffer_valid</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a85413583b1e0619039af26a73128c87f" prot="private" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>bufferlength</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a627b74b147e74badd18bbdd89cba1ad4" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>clear</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a6079ced4f6f510c1fe3d85264934359f" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>donepoint</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a1d8b05c9ec23ae54d00a1bb46d4cf61c" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>dset_head_pos</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1adde5bfc46955ed177c81ea7022e0515a" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>error_if_done</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a4c15d88d883284ad97cbefa62778c575" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>fast_forward</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a11ac3feb6814a7e4f0edd1cf59b6f8ae" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>finalise</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ad88a686c9b2f6f0489b8f8542350499f" prot="public" virt="virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>flush</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1ad8a7e7367b221c913631c8746b3edf11" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_dataset_length</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a458f1c7554671628afe5013c6c830e6b" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_entry</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1aa071bb482a23fbbd578aea729ca534cb" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_head_position</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a3bae7cd827f00466a3eb6b3b1bfd2227" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_index</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a4dd2b063cf8456113c687a838d94ed91" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_label</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a43f0da822195f49f0ed510a182b4dbb4" prot="public" virt="virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_RA_queue_length</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a44c7bab538791a4206adbadf24bcf7c5" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>get_vertexID</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1adc71de68b2a4c7e345b693f7e0c0a5b8" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>is_silenced</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a5dc76613405b066c7efddee2c236ff0a" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>is_synchronised</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a78795bef154761551d37dcc0092d1b63" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>move_head_to_next_slot</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a64b7aea2062bf584feb936310956fcd9" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>MPI_mode</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a453e34e4328999e42d46cc03a9d1d7b9" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>MPImode_only</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a3cf28ff1606a390b8e13697b882226bd" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>myRank</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ab2442b4be363dee6e46c9fdf1f7f061c" prot="public" virt="virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>N_skip_append</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a17a792978b8d22d1e8967699f1850a7d" prot="private" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>null_PPID</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a40dd8b5d9a56b2af02d5271079375e91" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>postponed_RA_queue_length</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a22dce92732a8cb4efae5774f661f717a" prot="private" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>PPID_of_last_append</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1afd26e1c5dc2dc687e3e0a6292db49c4b" prot="public" virt="virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>RA_flush</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a320ed04456a04135e095041dcfa97f58" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>RA_queue_length</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1abe0a5600f473b49f5ffbbf4a46d642d7" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>RA_write</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a758bb4a211dc5b92e4a11d4a54c44bb9" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>RA_write_locations</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a108ca51ed061c80bff7932047ed9ca55" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>RA_write_queue</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a12857c50db85a4b1bf53d1d074a214b1" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>RA_write_to_disk</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a5894374258753ecbda91765638a4791e" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>reset</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a840488230e66ea0075cc2fba4687733e" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>reset_head</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a0ed70906bdd4b9c4f6953a0ad17e7785" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>resume_mode</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a46920ecbf759313e5b79ad4d9e7ddb99" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>set_donepoint</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ababb397a0ed95d0211b3e5b4e0766689" prot="public" virt="virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>skip_append</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1ab1e4920d3c89f3e417c8c69167824d90" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>sync_buffer_empty</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a9554bb9968e6bd57e4679522d70643f2" prot="protected" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>sync_buffer_full</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a2485f1f5fd7e31e8bc873bf54bbf891f" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>sync_buffer_is_empty</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a8135d16a78063daaa7967b1e34a88ab4" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>sync_buffer_is_full</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a0670c2e8db291fe9da626ef7bbd5756e" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>sync_report</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a218c6e9ad5aaffc188b8de54a2ca1f16" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>synchronise_output_to_position</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1ab9b07f219be3041825645163cac93b5a" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>update_dset_head_pos</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a7c0bbe2362a37e8d5d94ecaa20577ace" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>VertexBufferBase</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1aa8502dbfb99028ac2a6f31efc234a66e" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>VertexBufferBase</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1aa456895a922a37cec681d65a07c266f0" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>VertexBufferNumeric1D</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a0a738a673894f6ae67de83b2ca3b5d55" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>VertexBufferNumeric1D</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a8f0e432917b9d060614f486b96c804d5" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>write_external_to_disk</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1a79181c3969e8fc6dafe68ebb90d5275e" prot="public" virt="pure-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>write_to_disk</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferBase_1a2f373ced831612fced6beb148cc87ca5" prot="public" virt="virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>~VertexBufferBase</name></member>
      <member refid="classGambit_1_1Printers_1_1VertexBufferNumeric1D_1adda8f278945e40fd34cb2395d27363fb" prot="public" virt="non-virtual"><scope>Gambit::Printers::VertexBufferNumeric1D</scope><name>~VertexBufferNumeric1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
