<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ExampleBit__A__rollcall_8hpp" kind="file" language="C++">
    <compoundname>ExampleBit_A_rollcall.hpp</compoundname>
    <includedby refid="ExampleBit__A_8cpp" local="yes">ExampleBit_A.cpp</includedby>
    <includedby refid="ExampleBit__A__standalone__example_8cpp" local="yes">ExampleBit_A_standalone_example.cpp</includedby>
    <invincdepgraph>
      <node id="3">
        <label>ExampleBit_A_standalone_example.cpp</label>
        <link refid="ExampleBit__A__standalone__example_8cpp"/>
      </node>
      <node id="1">
        <label>ExampleBit_A_rollcall.hpp</label>
        <link refid="ExampleBit__A__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ExampleBit_A.cpp</label>
        <link refid="ExampleBit__A_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" prot="public" static="no">
        <name>MODULE</name>
        <initializer>ExampleBit_A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="35" column="9" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>nevents</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="39" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>nevents_pred</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="42" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>nevents_pred_rounded</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="47" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>Example_lnL_A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="55" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>nevents_like</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="58" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>eventLoopManagement</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="67" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>eventLoopManager</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="70" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>event</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="77" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>exampleEventGen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="80" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>exampleCut</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="85" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>eventAccumulation</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="94" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>eventAccumulator</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="97" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>particle_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="106" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>particle_identity</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="109" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>damu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="117" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>example_damu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="119" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a0a2c1c9dc69b1048ddca06fb58542b86" prot="public" static="no">
        <name>CONDITIONAL_DEPENDENCY</name>
        <initializer>xsection</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="127" column="15"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>xsection</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="136" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>test_sigma</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="138" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>normaldist_loglike</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="164" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>lnL_gaussian</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="166" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>function_pointer</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="174" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>function_pointer_retriever</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="176" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>test_Farrays</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="186" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>do_Farray_stuff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="188" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>test_marg_lnlike</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="205" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>marg_poisson_test</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="207" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>large_print</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="217" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>large_print</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="219" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>test_BE_Array</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="226" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>Backend_array_test</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="228" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>test_flat_likelihood</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="237" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>flat_likelihood</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="239" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>recursive_sum</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="246" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>recursive_add_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="249" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>recursive_add_2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="254" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>recursive_add_3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="259" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>recursive_add_4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="264" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>starting_value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="272" column="11" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ExampleBit__A__rollcall_8hpp_1aee0cf83ee6d754df700e396da8987f1f" prot="public" static="no">
        <name>FUNCTION</name>
        <initializer>const_one</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="274" column="13" bodyfile="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ExampleBit__A__rollcall_8hpp_1a86e98f618860bd5d6c0c804709eb8d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>START_FUNCTION</definition>
        <argsstring>(double) DEPENDENCY(xsection</argsstring>
        <name>START_FUNCTION</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="ExampleBit__A__rollcall_8hpp_1a79cf810b2bf5ecf8884e00bf96775659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>START_FUNCTION</definition>
        <argsstring>(int) DEPENDENCY(nevents</argsstring>
        <name>START_FUNCTION</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="ExampleBit__A__rollcall_8hpp_1a230191c1dc5591811283dfbfda086d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DEPENDENCY</definition>
        <argsstring>(eventAccumulation, int) START_CAPABILITY START_FUNCTION(void</argsstring>
        <name>DEPENDENCY</name>
        <param>
          <type>eventAccumulation</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp" line="61" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Rollcall header for module ExampleBit_A.</para>
<para>Compile-time registration of available observables and likelihoods, as well as their dependencies.</para>
<para>Add to this if you want to add an observable or likelihood to this module.</para>
<para>Don&apos;t put typedefs or other type definitions in this file; see <ref refid="types__rollcall_8hpp" kindref="compound">Elements/include/gambit/Elements/types_rollcall.hpp</ref> for further instructions on how to add new types.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:patscott@physics.mcgill.ca">patscott@physics.mcgill.ca</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2012 Nov </para>
</simplesect>
<simplesect kind="date"><para>2013 Jan, Feb</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Rollcall<sp/>header<sp/>for<sp/>module<sp/>ExampleBit_A.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>Compile-time<sp/>registration<sp/>of<sp/>available</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>observables<sp/>and<sp/>likelihoods,<sp/>as<sp/>well<sp/>as<sp/>their</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>dependencies.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>Add<sp/>to<sp/>this<sp/>if<sp/>you<sp/>want<sp/>to<sp/>add<sp/>an<sp/>observable</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>or<sp/>likelihood<sp/>to<sp/>this<sp/>module.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>Don&apos;t<sp/>put<sp/>typedefs<sp/>or<sp/>other<sp/>type<sp/>definitions</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>in<sp/>this<sp/>file;<sp/>see</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>Elements/include/gambit/Elements/types_rollcall.hpp</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>for<sp/>further<sp/>instructions<sp/>on<sp/>how<sp/>to<sp/>add<sp/>new</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>types.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(patscott@physics.mcgill.ca)</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\date<sp/>2012<sp/>Nov</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Jan,<sp/>Feb</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ExampleBit_A_rollcall_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ExampleBit_A_rollcall_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE<sp/>ExampleBit_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="module__macros__incore_8hpp_1af4bd70b6b79b5dbc96eb177423fd8781" kindref="member">START_MODULE</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>nevents<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>physical<sp/>observable<sp/>or<sp/>likelihood<sp/>that<sp/>this<sp/>module<sp/>can<sp/>calculate.<sp/><sp/>There<sp/>may<sp/>be<sp/>one<sp/>or<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functions<sp/>in<sp/>this<sp/>module<sp/>that<sp/>can<sp/>calculate<sp/>this<sp/>particular<sp/>thing<sp/>in<sp/>different<sp/>ways.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>nevents_pred<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Name<sp/>of<sp/>an<sp/>observable<sp/>function:<sp/>floating-point<sp/>number<sp/>of<sp/>events<sp/>in<sp/>some<sp/>hypothetical<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>that<sp/>this<sp/>function<sp/>calculates<sp/>the<sp/>nevents<sp/>observable<sp/>as<sp/>a<sp/>double<sp/>precision<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(xsection,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dependencies:<sp/>Number<sp/>of<sp/>events<sp/>depends<sp/>on<sp/>cross-section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>nevents_pred_rounded<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Name<sp/>of<sp/>an<sp/>observable<sp/>function:<sp/>integral<sp/>number<sp/>of<sp/>events<sp/>in<sp/>some<sp/>hypothetical<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>that<sp/>this<sp/>function<sp/>calculates<sp/>the<sp/>nevents<sp/>observable<sp/>as<sp/>an<sp/>integer<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(nevents,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dependencies:<sp/>Integral<sp/>number<sp/>of<sp/>events<sp/>depends<sp/>on<sp/>floating-point<sp/>nevents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>Example_lnL_A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>likelihood<sp/>that<sp/>this<sp/>module<sp/>can<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>nevents_like<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Likelihood:<sp/>Likelihood<sp/>of<sp/>seeing<sp/>number<sp/>of<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>calculates<sp/>the<sp/>nevents_like<sp/>likelihood<sp/>as<sp/>a<sp/>double<sp/>precision<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(nevents,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dependency:<sp/>Likelihood<sp/>calculation<sp/>requires<sp/>number<sp/>of<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(eventAccumulation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Depends<sp/>on<sp/>the<sp/>accumulated<sp/>events<sp/>that<sp/>pass<sp/>the<sp/>make-believe<sp/>cuts<sp/>in<sp/>the<sp/>make-believe<sp/>event<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>eventLoopManagement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>eventLoopManager<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Module<sp/>functions<sp/>that<sp/>have<sp/>been<sp/>designed<sp/>to<sp/>manage<sp/>loops<sp/>over<sp/>other<sp/>module<sp/>functions<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>CAN_MANAGE_LOOPS)<sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>declared<sp/>with<sp/>the<sp/>optional<sp/>CAN_MANAGE_LOOPS<sp/>flag.<sp/><sp/>When<sp/>this<sp/>flag<sp/>is<sp/>absent,<sp/>or<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>CANNOT_MANAGE_LOOPS<sp/>is<sp/>given<sp/>instead,<sp/>GAMBIT<sp/>assumes<sp/>that<sp/>the<sp/>function<sp/>should<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>allowed<sp/>to<sp/>manage<sp/>loops.<sp/><sp/>Functions<sp/>cannot<sp/>have<sp/>void<sp/>result<sp/>types<sp/>unless<sp/>they<sp/>CAN_MANAGE_LOOPS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>exampleEventGen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a61bd23bef8de86ec3973508d5498577d" kindref="member">NEEDS_MANAGER</ref>(eventLoopManagement)<sp/></highlight><highlight class="comment">//<sp/>Declares<sp/>that<sp/>the<sp/>module<sp/>function<sp/>can<sp/>only<sp/>run<sp/>inside<sp/>a<sp/>loop,<sp/>and<sp/>that<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>managed<sp/>by<sp/>another<sp/>module<sp/>function<sp/>that<sp/>has<sp/>CAPABILITY<sp/>eventLoopManagement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(and<sp/>has<sp/>been<sp/>declared<sp/>as<sp/>a<sp/>potential<sp/>manager<sp/>with<sp/>the<sp/>flag<sp/>CAN_MANAGE_LOOPS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>exampleCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a61bd23bef8de86ec3973508d5498577d" kindref="member">NEEDS_MANAGER</ref>(eventLoopManagement)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(event,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>eventAccumulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>eventAccumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>CANNOT_MANAGE_LOOPS)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a61bd23bef8de86ec3973508d5498577d" kindref="member">NEEDS_MANAGER</ref>(eventLoopManagement)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>particle_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>physical<sp/>observable<sp/>or<sp/>likelihood<sp/>that<sp/>this<sp/>module<sp/>can<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>particle_identity<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Observable:<sp/>particle<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(std::string)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>returns<sp/>the<sp/>identity<sp/>of<sp/>the<sp/>particle<sp/>as<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mock<sp/>muon<sp/>(g-2)<sp/>anomalous<sp/>contribution;<sp/>an<sp/>example<sp/>of<sp/>how<sp/>to<sp/>interact<sp/>with<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>damu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>example_damu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>must<sp/>be<sp/>used<sp/>with<sp/>one<sp/>model<sp/>from<sp/>group1<sp/>(NormalDist)<sp/>and<sp/>one<sp/>from<sp/>group2<sp/>(CMSSM<sp/>or<sp/>SingletDM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(NormalDist,<sp/>SingletDM,<sp/>CMSSM)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a744649941b5289338bd6e58bec67873e" kindref="member">MODEL_GROUP</ref>(group1,<sp/>(NormalDist))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a744649941b5289338bd6e58bec67873e" kindref="member">MODEL_GROUP</ref>(group2,<sp/>(CMSSM,<sp/>SingletDM))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a7e1390bea9543ff21187afe1e55c4112" kindref="member">ALLOW_MODEL_COMBINATION</ref>(group1,<sp/>group2)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>dependency<sp/>that<sp/>only<sp/>counts<sp/>under<sp/>certain<sp/>conditions<sp/>(must<sp/>come<sp/>after<sp/>all<sp/>BACKEND_REQs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#define<sp/>CONDITIONAL_DEPENDENCY<sp/>xsection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1af75783a13f0eca324c064867de3c846b" kindref="member">START_CONDITIONAL_DEPENDENCY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1acc4ee7ea690ed3dfa9ddb7ac02cd5df3" kindref="member">ACTIVATE_FOR_MODELS</ref>(CMSSM)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>CONDITIONAL_DEPENDENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>function<sp/>for<sp/>fulfilling<sp/>the<sp/>dependency<sp/>of<sp/>nevents.<sp/><sp/>Also<sp/>gives<sp/>another<sp/>more<sp/>complicated<sp/>example<sp/>of<sp/>model<sp/>group<sp/>usage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>xsection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>test_sigma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>can<sp/>be<sp/>used<sp/>if<sp/>either<sp/>NormalDist<sp/>or<sp/>SingletDM<sp/>alone<sp/>are<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a914ec6f557b5dc34284eb74649e7da07" kindref="member">ALLOW_MODELS</ref>(NormalDist,<sp/>SingletDM)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>can<sp/>also<sp/>be<sp/>used<sp/>if<sp/>CMSSM<sp/>is<sp/>in<sp/>use,<sp/>so<sp/>long<sp/>as<sp/>either<sp/>NormalDist<sp/>or<sp/>SingletDM<sp/>is<sp/>in<sp/>use<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(CMSSM)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a744649941b5289338bd6e58bec67873e" kindref="member">MODEL_GROUP</ref>(group1,<sp/>(NormalDist,<sp/>SingletDM))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a744649941b5289338bd6e58bec67873e" kindref="member">MODEL_GROUP</ref>(group2,<sp/>(CMSSM))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a7e1390bea9543ff21187afe1e55c4112" kindref="member">ALLOW_MODEL_COMBINATION</ref>(group1,<sp/>group2)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>can<sp/>also<sp/>be<sp/>used<sp/>if<sp/>either<sp/>NUHM1<sp/>or<sp/>NUHM2<sp/>is<sp/>in<sp/>use,<sp/>so<sp/>long<sp/>as<sp/>either<sp/>NormalDist<sp/>or<sp/>SingletDM<sp/>is<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>automatically<sp/>means<sp/>that<sp/>if<sp/>CMSSM<sp/>+<sp/>(NUHM1<sp/>or<sp/>NUHM2)<sp/>+<sp/>(NormalDist<sp/>or<sp/>SingletDM)<sp/>is<sp/>in<sp/>use,<sp/>the<sp/>function<sp/>can<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>it<sp/>does<sp/>not<sp/>allow<sp/>the<sp/>function<sp/>to<sp/>be<sp/>used<sp/>if<sp/>only<sp/>CMSSM<sp/>+<sp/>(NUHM1<sp/>or<sp/>NUHM2)<sp/>are<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(NUHM1,<sp/>NUHM2)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a744649941b5289338bd6e58bec67873e" kindref="member">MODEL_GROUP</ref>(group3,<sp/>(NUHM1,<sp/>NUHM2))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a7e1390bea9543ff21187afe1e55c4112" kindref="member">ALLOW_MODEL_COMBINATION</ref>(group1,<sp/>group3)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>can<sp/>also<sp/>be<sp/>used<sp/>if<sp/>MSSM19atQ<sp/>is<sp/>in<sp/>use,<sp/>but<sp/>only<sp/>if<sp/>CMSSM<sp/>+<sp/>(NUHM1<sp/>or<sp/>NUHM2)<sp/>+<sp/>(NormalDist<sp/>or<sp/>SingletDM)<sp/>are<sp/>in<sp/>use<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOW_MODEL_DEPENDENCE(MSSM19atQ)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a744649941b5289338bd6e58bec67873e" kindref="member">MODEL_GROUP</ref>(group4,<sp/>(MSSM19atQ))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a7e1390bea9543ff21187afe1e55c4112" kindref="member">ALLOW_MODEL_COMBINATION</ref>(group1,<sp/>group2,<sp/>group3,<sp/>group4)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>test<sp/>likelihood:<sp/>normal<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>normaldist_loglike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>lnL_gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a914ec6f557b5dc34284eb74649e7da07" kindref="member">ALLOW_MODELS</ref>(NormalDist)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tester<sp/>that<sp/>shows<sp/>how<sp/>to<sp/>retrieve<sp/>pointers<sp/>to<sp/>backend<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>function_pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>function_pointer_retriever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(<ref refid="namespaceGambit_1a04c2b410df3814a62ad944736c6f5487" kindref="member">fptr</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a80e9237858ed78192dc55b4bdff133b0" kindref="member">BACKEND_GROUP</ref>(external_funcs)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ_FROM_GROUP(external_funcs,<sp/>externalFunction,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ_FROM_GROUP(external_funcs,<sp/>externalComplicatedFunction,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tester<sp/>for<sp/>Fortran<sp/>array<sp/>overlay<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>test_Farrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>do_Farray_stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTestCommonBlock,<sp/>(match),<sp/>libFarrayTest_CB_type)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTestCommonBlock2,<sp/>(match),<sp/>libFarrayTest_CB2_type)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTestCommonBlock3,<sp/>(match),<sp/>libFarrayTest_CB3_type)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTest_printStuff,<sp/>(match),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTest_fillArrays,<sp/>(match),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>())</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTest_fptrRoutine,<sp/>(match),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>(Farray&lt;<sp/>Fdouble,1,3&gt;&amp;,<sp/>Finteger&amp;,<sp/>Fdouble(*)(Farray&lt;<sp/>Fdouble,1,3&gt;&amp;)))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTest_doubleFuncArray,<sp/>(match),<sp/>Fdouble,<sp/>(Farray&lt;<sp/>Fdouble,1,3&gt;&amp;))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTest_doubleFuncArray2,<sp/>(match),<sp/>Fdouble,<sp/>(Fdouble*))</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(libFarrayTest_doubleFuncArray3,<sp/>(match),<sp/>Fdouble,<sp/>(Farray&lt;Fdouble,<sp/>1,2,<sp/>2,3&gt;&amp;))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a0761ba4d29c692ada0716491c66d57cb" kindref="member">BACKEND_OPTION</ref>((LibFarrayTest),<sp/>(match))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tester<sp/>for<sp/>marginalised<sp/>Poisson<sp/>likelihood.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>test_marg_lnlike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>marg_poisson_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ_FROM_GROUP(lnlike_marg_poisson,<sp/>lnlike_marg_poisson_lognormal_error,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;)<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>BACKEND_REQ_FROM_GROUP(lnlike_marg_poisson,<sp/>lnlike_marg_poisson_gaussian_error,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;)<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a80e9237858ed78192dc55b4bdff133b0" kindref="member">BACKEND_GROUP</ref>(lnlike_marg_poisson)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>test<sp/>for<sp/>various<sp/>aspects<sp/>of<sp/>the<sp/>printer<sp/>buffer<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>1000<sp/>items<sp/>to<sp/>be<sp/>printed<sp/>per<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>large_print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>large_print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(<ref refid="namespaceGambit_1a98f19afeabdc4fcaa456c944cc19a50c" kindref="member">map_str_dbl</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tester<sp/>for<sp/>C/C++<sp/>backend<sp/>array<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>test_BE_Array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>Backend_array_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(example_be_array_1D,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(example_be_array_2D,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)[10]))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__common_8hpp_1a9d53302470f0656e79118389a48727ce" kindref="member">BACKEND_REQ</ref>(example_be_array_3D,<sp/>(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)[10][10]))</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flat<sp/>test<sp/>likelihood<sp/>for<sp/>checking<sp/>prior<sp/>distributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>test_flat_likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>flat_likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="DarkBit__rollcall_8hpp_1a914ec6f557b5dc34284eb74649e7da07" kindref="member">ALLOW_MODELS</ref>(TestModel1D)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Testers<sp/>for<sp/>functionChain<sp/>field<sp/>in<sp/>ObsLikes.<sp/>Sum<sp/>numbers<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>recursive_sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>recursive_add_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(starting_value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>recursive_add_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(recursive_sum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>recursive_add_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(recursive_sum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>recursive_add_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="module__macros__incore_8hpp_1a6b4d1ca0beaad9490ec178d15c775fef" kindref="member">DEPENDENCY</ref>(recursive_sum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>point<sp/>for<sp/>the<sp/>recursive<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>starting_value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="module__macros__incore_8hpp_1a8171a83100431546898e4c5b8216b414" kindref="member">START_CAPABILITY</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>const_one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>START_FUNCTION(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODULE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__ExampleBit_A_rollcall_hpp__)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="ExampleBit_A/include/gambit/ExampleBit_A/ExampleBit_A_rollcall.hpp"/>
  </compounddef>
</doxygen>
