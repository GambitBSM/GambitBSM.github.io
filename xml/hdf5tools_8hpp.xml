<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="hdf5tools_8hpp" kind="file" language="C++">
    <compoundname>hdf5tools.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">algorithm</includes>
    <includes refid="standalone__error__handlers_8hpp" local="yes">gambit/Utils/standalone_error_handlers.hpp</includes>
    <includes refid="mpiwrapper_8hpp" local="yes">gambit/Utils/mpiwrapper.hpp</includes>
    <includes local="no">hdf5.h</includes>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includedby refid="hdf5__combine__tools_8cpp" local="yes">hdf5_combine_tools.cpp</includedby>
    <includedby refid="hdf5__combine__tools_8hpp" local="yes">hdf5_combine_tools.hpp</includedby>
    <includedby refid="hdf5printer_8cpp" local="yes">hdf5printer.cpp</includedby>
    <includedby refid="hdf5printer_8hpp" local="yes">hdf5printer.hpp</includedby>
    <includedby refid="hdf5printer__v2_8cpp" local="yes">hdf5printer_v2.cpp</includedby>
    <includedby refid="hdf5printer__v2_8hpp" local="yes">hdf5printer_v2.hpp</includedby>
    <includedby refid="hdf5reader_8cpp" local="yes">hdf5reader.cpp</includedby>
    <includedby refid="hdf5reader_8hpp" local="yes">hdf5reader.hpp</includedby>
    <includedby refid="hdf5tools_8cpp" local="yes">hdf5tools.cpp</includedby>
    <incdepgraph>
      <node id="34">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="1">
        <label>hdf5tools.hpp</label>
        <link refid="hdf5tools_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="28">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="17">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gambit/Utils/mpiwrapper.hpp</label>
        <link refid="mpiwrapper_8hpp"/>
      </node>
      <node id="7">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="8">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="19">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="13">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="25">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="14">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="24">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="12">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="23">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="26">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="22">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="37">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="11">
        <label>boost/version.hpp</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="31">
        <label>exception</label>
      </node>
      <node id="36">
        <label>hdf5.h</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="30">
        <label>set</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
      <node id="33">
        <label>utility</label>
      </node>
      <node id="32">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>hdf5printer.hpp</label>
        <link refid="hdf5printer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>hdf5_combine_tools.hpp</label>
        <link refid="hdf5__combine__tools_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hdf5tools.hpp</label>
        <link refid="hdf5tools_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hdf5printer_v2.hpp</label>
        <link refid="hdf5printer__v2_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hdf5reader.hpp</label>
        <link refid="hdf5reader_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hdf5_combine_tools.cpp</label>
        <link refid="hdf5__combine__tools_8cpp"/>
      </node>
      <node id="4">
        <label>hdf5printer.cpp</label>
        <link refid="hdf5printer_8cpp"/>
      </node>
      <node id="7">
        <label>hdf5reader.cpp</label>
        <link refid="hdf5reader_8cpp"/>
      </node>
      <node id="14">
        <label>hdf5tools.cpp</label>
        <link refid="hdf5tools_8cpp"/>
      </node>
      <node id="8">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer_2print__overloads_8cpp"/>
      </node>
      <node id="9">
        <label>retrieve_overloads.cpp</label>
        <link refid="hdf5printer_2retrieve__overloads_8cpp"/>
      </node>
      <node id="10">
        <label>hdf5printer_v2.cpp</label>
        <link refid="hdf5printer__v2_8cpp"/>
      </node>
      <node id="12">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer__v2_2print__overloads_8cpp"/>
      </node>
      <node id="5">
        <label>manual_hdf5_combine.cpp</label>
        <link refid="manual__hdf5__combine_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01char_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; char &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01short_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; short &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01int_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; int &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01long_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; long &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01long_01long_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; long long &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01char_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; unsigned char &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01short_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; unsigned short &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01int_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; unsigned int &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01long_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; unsigned long &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01long_01long_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; unsigned long long &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01float_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; float &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01double_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; double &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01long_01double_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; long double &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01bool_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; bool &gt;</innerclass>
    <innerclass refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01std_1_1string_01_4" prot="public">Gambit::Printers::get_hdf5_data_type&lt; std::string &gt;</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Printers">Gambit::Printers</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Printers_1_1HDF5">Gambit::Printers::HDF5</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="hdf5tools_8hpp_1a4f09f55f6f966b36666cce4df55c269a" prot="public" static="no">
        <name>H5_OUTPUT_TYPES</name>
        <initializer>        (char) \
        (short) \
        (int) \
        (long) \
        (long long) \
        (unsigned char) \
        (unsigned short) \
        (unsigned int) \
        (unsigned long) \
        (unsigned long long) \
        (float) \
        (double) \
        (long double) \
        (bool) \
        (std::string)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp" line="256" column="15" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="hdf5tools_8hpp_1a84dd2c8c1a75b9679cf4dc2860bc8d9c" prot="public" static="no">
        <name>HDF5_STRING_MAX_LEN</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp" line="51" column="9" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" prot="public" static="no">
        <name>SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</name>
        <param><defname>TYPEDEFD_TYPE</defname></param>
        <param><defname>RETURN_HDF5_TYPE</defname></param>
        <initializer>      template&lt;typename T&gt;                                                                                                   \
      struct get_hdf5_data_type&lt;T, typename boost::enable_if_c&lt; std::is_same&lt;T, TYPEDEFD_TYPE&gt;::value                     &amp;&amp; \
                                                               !std::is_same&lt;char, TYPEDEFD_TYPE&gt;::value                  &amp;&amp; \
                                                               !std::is_same&lt;short, TYPEDEFD_TYPE&gt;::value                 &amp;&amp; \
                                                               !std::is_same&lt;int, TYPEDEFD_TYPE&gt;::value                   &amp;&amp; \
                                                               !std::is_same&lt;long, TYPEDEFD_TYPE&gt;::value                  &amp;&amp; \
                                                               !std::is_same&lt;long long, TYPEDEFD_TYPE&gt;::value             &amp;&amp; \
                                                               !std::is_same&lt;unsigned char, TYPEDEFD_TYPE&gt;::value         &amp;&amp; \
                                                               !std::is_same&lt;unsigned short, TYPEDEFD_TYPE&gt;::value        &amp;&amp; \
                                                               !std::is_same&lt;unsigned int, TYPEDEFD_TYPE&gt;::value          &amp;&amp; \
                                                               !std::is_same&lt;unsigned long, TYPEDEFD_TYPE&gt;::value         &amp;&amp; \
                                                               !std::is_same&lt;unsigned long long, TYPEDEFD_TYPE&gt;::value    &amp;&amp; \
                                                               !std::is_same&lt;float, TYPEDEFD_TYPE&gt;::value                 &amp;&amp; \
                                                               !std::is_same&lt;double, TYPEDEFD_TYPE&gt;::value                &amp;&amp; \
                                                               !std::is_same&lt;long double, TYPEDEFD_TYPE&gt;::value           &amp;&amp; \
                                                               !std::is_same&lt;bool, TYPEDEFD_TYPE&gt;::value                  &amp;&amp; \
                                                               !std::is_same&lt;std::string, TYPEDEFD_TYPE&gt;::value&gt;::type &gt;            \
      {                                                                                                                      \
         static hid_t type() { return RETURN_HDF5_TYPE; }                                                            \
      };                                                                                                                     \</initializer>
        <briefdescription>
<para>Provide template specialisation of get_hdf5_data_type only if the requested type hasn&apos;t been used to define one already. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp" line="54" column="9" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A collection of tools for interacting with HDF5 databases.</para>
<para>Currently I am using the C++ bindings for HDF5, however they are a bit crap and it may be better to just write our own.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 May</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Jul</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:tomas.gonzalo@monash.edu">tomas.gonzalo@monash.edu</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 June</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>A<sp/>collection<sp/>of<sp/>tools<sp/>for<sp/>interacting<sp/>with</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>HDF5<sp/>databases.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>Currently<sp/>I<sp/>am<sp/>using<sp/>the<sp/>C++<sp/>bindings<sp/>for</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>HDF5,<sp/>however<sp/>they<sp/>are<sp/>a<sp/>bit<sp/>crap<sp/>and<sp/>it<sp/>may</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>be<sp/>better<sp/>to<sp/>just<sp/>write<sp/>our<sp/>own.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>May</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jul</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tomas.gonzalo@monash.edu)</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\date<sp/>2020<sp/>June</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__hdf5tools_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__hdf5tools_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GAMBIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="standalone__error__handlers_8hpp" kindref="compound">gambit/Utils/standalone_error_handlers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpiwrapper_8hpp" kindref="compound">gambit/Utils/mpiwrapper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HDF5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hdf5.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>length<sp/>of<sp/>HDF5<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDF5_STRING_MAX_LEN<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">///<sp/>Provide<sp/>template<sp/>specialisation<sp/>of<sp/>get_hdf5_data_type<sp/>only<sp/>if<sp/>the<sp/>requested<sp/>type<sp/>hasn&apos;t<sp/>been<sp/>used<sp/>to<sp/>define<sp/>one<sp/>already.</highlight></codeline>
<codeline lineno="54" refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED(TYPEDEFD_TYPE,<sp/>RETURN_HDF5_TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>get_hdf5_data_type&lt;T,<sp/>typename<sp/>boost::enable_if_c&lt;<sp/>std::is_same&lt;T,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;char,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;short,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;int,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;long<sp/>long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>char,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>short,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>int,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>long<sp/>long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;float,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;double,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;long<sp/>double,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;bool,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;std::string,<sp/>TYPEDEFD_TYPE&gt;::value&gt;::type<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>hid_t<sp/>type()<sp/>{<sp/>return<sp/>RETURN_HDF5_TYPE;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Printers</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Base<sp/>template<sp/>is<sp/>left<sp/>undefined<sp/>in<sp/>order<sp/>to<sp/>raise</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>a<sp/>compile<sp/>error<sp/>if<sp/>specialisation<sp/>doesn&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="85" refid="structGambit_1_1Printers_1_1get__hdf5__data__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HDF5</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>File<sp/>and<sp/>group<sp/>manipulation</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Create<sp/>or<sp/>open<sp/>hdf5<sp/>file</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>overwrite=true<sp/>then<sp/>any<sp/>existing<sp/>file<sp/>will<sp/>be<sp/>deleted<sp/>and<sp/>replaced.<sp/>USE<sp/>CAREFULLY!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>argument<sp/>&quot;oldfile&quot;<sp/>is<sp/>used<sp/>to<sp/>report<sp/>whether<sp/>an<sp/>existing<sp/>file<sp/>was<sp/>opened<sp/>(true<sp/>if<sp/>yes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>openFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>oldfile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>access_type=</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>openFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>access_type=</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Close<sp/>hdf5<sp/>file</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>closeFile(hid_t<sp/>file);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>hdf5<sp/>file<sp/>exists<sp/>and<sp/>can<sp/>be<sp/>opened<sp/>in<sp/>read/write<sp/>mode</highlight></codeline>
<codeline lineno="102"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkFileReadable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/>std::string&amp;<sp/>msg);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Thin<sp/>wrapper<sp/>for<sp/>the<sp/>above<sp/>to<sp/>discard<sp/>failure<sp/>message</highlight></codeline>
<codeline lineno="104" refid="hdf5tools_8hpp_1aa65f4633a5ed9075461ca4826333c07f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5tools_8hpp_1a2a45689cd37ec65db48020efcc5cc202" kindref="member">checkFileReadable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>std::string<sp/>garbage;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hdf5tools_8hpp_1a2a45689cd37ec65db48020efcc5cc202" kindref="member">checkFileReadable</ref>(fname,<sp/>garbage);<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>a<sp/>group<sp/>exists<sp/>and<sp/>can<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkGroupReadable(hid_t<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>groupname,<sp/>std::string&amp;<sp/>msg);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Thin<sp/>wrapper<sp/>for<sp/>the<sp/>above<sp/>to<sp/>discard<sp/>failure<sp/>message</highlight></codeline>
<codeline lineno="110" refid="hdf5tools_8hpp_1a661c29c36a43cdafa49c3f0f289e0e94" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5tools_8hpp_1a403afdca4ce9ea9114f8d1d7779875ad" kindref="member">checkGroupReadable</ref>(hid_t<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>groupname)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>std::string<sp/>garbage;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hdf5tools_8hpp_1a403afdca4ce9ea9114f8d1d7779875ad" kindref="member">checkGroupReadable</ref>(location,<sp/>groupname,<sp/>garbage);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>a<sp/>dataset<sp/>exists<sp/>and<sp/>can<sp/>be<sp/>read<sp/>from<sp/>fully</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>(Reads<sp/>through<sp/>entire<sp/>dataset<sp/>to<sp/>make<sp/>sure!<sp/>May<sp/>take<sp/>some<sp/>time)</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;bool,std::size_t&gt;<sp/>checkDatasetReadable(hid_t<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dsetname);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Create<sp/>hdf5<sp/>file<sp/>(always<sp/>overwrite<sp/>existing<sp/>files)</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>createFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Create<sp/>a<sp/>group<sp/>inside<sp/>the<sp/>specified<sp/>location</highlight></codeline>
<codeline lineno="121"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>&quot;location&quot;<sp/>can<sp/>be<sp/>a<sp/>pointer<sp/>to<sp/>either<sp/>a<sp/>file<sp/>or<sp/>another<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>createGroup(hid_t<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Silence<sp/>error<sp/>report<sp/>(e.g.<sp/>while<sp/>probing<sp/>for<sp/>file<sp/>existence)</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>errorsOff();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Restore<sp/>error<sp/>report</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>errorsOn();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Modified<sp/>minimally<sp/>from<sp/>https://github.com/gregreen/h5utils/blob/master/src/h5utils.cpp#L92</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Credit:<sp/>Gregory<sp/>Green<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Opens<sp/>a<sp/>group,<sp/>creating<sp/>it<sp/>if<sp/>it<sp/>does<sp/>not<sp/>exist.<sp/>Nonexistent<sp/>parent<sp/>groups<sp/>are<sp/>also</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>created.<sp/>This<sp/>works<sp/>similarly<sp/>to<sp/>the<sp/>Unix/Linux<sp/>command</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mkdir<sp/>-p<sp/>/parent/subgroup/group</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>that<sp/>if<sp/>/parent<sp/>and<sp/>/parent/subgroup<sp/>do<sp/>not<sp/>exist,<sp/>they<sp/>will<sp/>be<sp/>created.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>no<sp/>accessmode<sp/>has<sp/>H5Utils::DONOTCREATE<sp/>flag<sp/>set,<sp/>then<sp/>returns<sp/>NULL<sp/>if<sp/>group</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>does<sp/>not<sp/>yet<sp/>exist.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>openGroup(hid_t<sp/>file_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nocreate=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Close<sp/>group</highlight></codeline>
<codeline lineno="145" refid="hdf5tools_8hpp_1ab1874c1d1489ed4d2865669f0d7a2648" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1ab1874c1d1489ed4d2865669f0d7a2648" kindref="member">closeGroup</ref>(hid_t<sp/>group);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>List<sp/>object<sp/>names<sp/>in<sp/>a<sp/>group</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="hdf5tools_8hpp_1a09bb76c8a3793cba06d40f6e379d59ad" kindref="member">lsGroup</ref>(hid_t<sp/>group_id);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>type<sp/>of<sp/>an<sp/>object<sp/>in<sp/>a<sp/>group</highlight></codeline>
<codeline lineno="151"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1aece2076b406c21490c641952824fa800" kindref="member">getH5DatasetType</ref>(hid_t<sp/>group_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dset_name);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Release<sp/>datatype<sp/>identifier</highlight></codeline>
<codeline lineno="154" refid="hdf5tools_8hpp_1a44da0cf5bcf2392967fa9675033d57ac" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1a44da0cf5bcf2392967fa9675033d57ac" kindref="member">closeType</ref>(hid_t<sp/>type_id);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Dataset<sp/>and<sp/>dataspace<sp/>manipulation</highlight></codeline>
<codeline lineno="159"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Open<sp/>dataset</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1a5a35aa2dea07b8bd548803f1be27dc9a" kindref="member">openDataset</ref>(hid_t<sp/>dset_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_off=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Close<sp/>dataset</highlight></codeline>
<codeline lineno="164" refid="hdf5tools_8hpp_1a2e95f5e32712addd7db876d87b239b7e" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1a2e95f5e32712addd7db876d87b239b7e" kindref="member">closeDataset</ref>(hid_t<sp/>dset_id);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>dataspace</highlight></codeline>
<codeline lineno="167" refid="hdf5tools_8hpp_1abda955745e920e5039774cbbe79359d1" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1abda955745e920e5039774cbbe79359d1" kindref="member">getSpace</ref>(hid_t<sp/>dset_id);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Close<sp/>dataspace</highlight></codeline>
<codeline lineno="170" refid="hdf5tools_8hpp_1ac99d127f74df7a9cdeaa1f301fe4f97c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="hdf5tools_8hpp_1ac99d127f74df7a9cdeaa1f301fe4f97c" kindref="member">closeSpace</ref>(hid_t<sp/>space_id);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>simple<sp/>dataspace<sp/>extent</highlight></codeline>
<codeline lineno="173" refid="hdf5tools_8hpp_1a3aae4048cacb50049b235e66d869df6c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hssize_t<sp/><ref refid="hdf5tools_8hpp_1a3aae4048cacb50049b235e66d869df6c" kindref="member">getSimpleExtentNpoints</ref>(hid_t<sp/>dset_id);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>name<sp/>of<sp/>dataset</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="hdf5tools_8hpp_1addae07ab6041965424b1d9684a95af63" kindref="member">getName</ref>(hid_t<sp/>dset_id);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Select<sp/>a<sp/>simple<sp/>hyperslab<sp/>in<sp/>a<sp/>1D<sp/>dataset</highlight></codeline>
<codeline lineno="179"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;hid_t,hid_t&gt;<sp/><ref refid="hdf5tools_8hpp_1aa183487983cd8a7e15d681cc0f22f92e" kindref="member">selectChunk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hid_t<sp/>dset_id,<sp/>std::size_t<sp/>offset,<sp/>std::size_t<sp/>length);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>an<sp/>object<sp/>in<sp/>a<sp/>group<sp/>is<sp/>a<sp/>dataset</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hdf5tools_8hpp_1a1ae11ab53d31f2bee387b2182be3f329" kindref="member">isDataSet</ref>(hid_t<sp/>group_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>a<sp/>chunk<sp/>of<sp/>data<sp/>from<sp/>a<sp/>simple<sp/>dataset</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>NOTE!<sp/>Doesn&apos;t<sp/>work<sp/>for<sp/>T=bool!<sp/>Have<sp/>a<sp/>custom<sp/>specialisation<sp/>in<sp/>the<sp/>source<sp/>file<sp/>for<sp/>that.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="187" refid="hdf5tools_8hpp_1aa54ecc5c2dddc703833c91b6ab2a06c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="hdf5tools_8hpp_1aa54ecc5c2dddc703833c91b6ab2a06c7" kindref="member">getChunk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hid_t<sp/>dset_id,<sp/>std::size_t<sp/>offset,<sp/>std::size_t<sp/>length)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>receive<sp/>data<sp/>(and<sp/>return<sp/>from<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>chunkdata(length);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>hyperslab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;hid_t,hid_t&gt;<sp/>selection_ids<sp/>=<sp/><ref refid="hdf5tools_8hpp_1aa183487983cd8a7e15d681cc0f22f92e" kindref="member">selectChunk</ref>(dset_id,offset,length);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>memspace_id<sp/>=<sp/>selection_ids.first;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>dspace_id<sp/><sp/><sp/>=<sp/>selection_ids.second;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>receive<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>chunkdata.data();<sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>contiguous<sp/>memory<sp/>within<sp/>the<sp/>buffer<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>data<sp/>from<sp/>the<sp/>hyperslab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>hdftype_id<sp/>=<sp/><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type&lt;T&gt;::type</ref>();<sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>you<sp/>already<sp/>know<sp/>this<sp/>is<sp/>the<sp/>right<sp/>type<sp/>for<sp/>the<sp/>dataset!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err_read<sp/>=<sp/>H5Dread(dset_id,<sp/>hdftype_id,<sp/>memspace_id,<sp/>dspace_id,<sp/>H5P_DEFAULT,<sp/>buffer);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err_read&lt;0)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>retrieving<sp/>chunk<sp/>(offset=&quot;</highlight><highlight class="normal">&lt;&lt;offset&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>length=&quot;</highlight><highlight class="normal">&lt;&lt;length&lt;&lt;</highlight><highlight class="stringliteral">&quot;)<sp/>from<sp/>dataset<sp/>in<sp/>HDF5<sp/>file.<sp/>H5Dread<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>offset+length<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>offset+length<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sclose(dspace_id);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sclose(memspace_id);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chunkdata;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bool<sp/>version<sp/>to<sp/>deal<sp/>with<sp/>bool<sp/>weirdness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>getChunk(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hid_t<sp/>dset_id,<sp/>std::size_t<sp/>offset,<sp/>std::size_t<sp/>length);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>fixed<sp/>integers<sp/>to<sp/>HDF5<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inttype_from_h5type(hid_t<sp/>h5type);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Query<sp/>whether<sp/>type<sp/>integer<sp/>indicates<sp/>general<sp/>&apos;float&apos;<sp/>or<sp/>&apos;int&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_float_type(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inttype);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>True<sp/>types</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="233" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01char_01_4" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;char&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_CHAR<sp/><sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="234" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01short_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;short&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_SHORT<sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="235" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01int_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;int&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_INT<sp/><sp/><sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="236" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01long_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;long&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_LONG<sp/><sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="237" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01long_01long_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;long<sp/>long&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_LLONG<sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="238" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01char_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;unsigned<sp/>char&gt;<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_UCHAR<sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="239" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01short_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;unsigned<sp/>short&gt;<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_USHORT<sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="240" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01int_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;unsigned<sp/>int&gt;<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_UINT<sp/><sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="241" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01long_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;unsigned<sp/>long&gt;<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_ULONG<sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="242" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01unsigned_01long_01long_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;unsigned<sp/>long<sp/>long&gt;{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_ULLONG<sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="243" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01float_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;float&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_FLOAT<sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="244" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01double_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;double&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_DOUBLE<sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="245" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01long_01double_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;long<sp/>double&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_LDOUBLE;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bools<sp/>are<sp/>a<sp/>bit<sp/>trickier<sp/>because<sp/>C<sp/>has<sp/>no<sp/>built-in<sp/>boolean<sp/>type<sp/>(until<sp/>recently;<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>HDF5<sp/>libraries<sp/>were<sp/>written<sp/>in<sp/>C<sp/>before<sp/>this<sp/>existed).<sp/>We<sp/>also<sp/>want<sp/>something<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>recognised<sp/>as<sp/>a<sp/>bool<sp/>by<sp/>h5py.<sp/>For<sp/>now<sp/>we<sp/>just<sp/>use<sp/>an<sp/>unsigned<sp/>int.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01bool_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;bool&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5T_NATIVE_UINT8<sp/><sp/>;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>hdf5<sp/>native<sp/>type<sp/>H5T_C_S1<sp/>is<sp/>a<sp/>string<sp/>of<sp/>a<sp/>single<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>longer<sp/>strings<sp/>we<sp/>copy<sp/>the<sp/>type<sp/>and<sp/>extend<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structGambit_1_1Printers_1_1get__hdf5__data__type_3_01std_1_1string_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1Printers_1_1get__hdf5__data__type" kindref="compound">get_hdf5_data_type</ref>&lt;std::string&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hid_t<sp/>type()<sp/>{<sp/>hid_t<sp/>strtype<sp/>=<sp/>H5Tcopy(H5T_C_S1);<sp/>H5Tset_size<sp/>(strtype,<sp/>H5T_VARIABLE);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strtype;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Macro<sp/>sequence<sp/>for<sp/>iterating<sp/>over<sp/>all<sp/>allowed<sp/>output<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>H5_OUTPUT_TYPES<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(char)<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(short)<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long<sp/>long)<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>char)<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>short)<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>long)<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>long<sp/>long)<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long<sp/>double)<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bool)<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>DEBUG:<sp/>print<sp/>to<sp/>stdout<sp/>all<sp/>HDF5<sp/>type<sp/>IDs</highlight></codeline>
<codeline lineno="274"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Printers_1aafad32618cedacf143e092844f867a29" kindref="member">printAllH5Types</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="277"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Typedef&apos;d<sp/>types;<sp/>enabled<sp/>only<sp/>where<sp/>they<sp/>differ<sp/>from<sp/>the<sp/>true<sp/>types.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="280"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(int8_t,<sp/><sp/><sp/>H5T_NATIVE_INT8)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(uint8_t,<sp/><sp/>H5T_NATIVE_UINT8)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(int16_t,<sp/><sp/>H5T_NATIVE_INT16)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(uint16_t,<sp/>H5T_NATIVE_UINT16)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(int32_t,<sp/><sp/>H5T_NATIVE_INT32)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(uint32_t,<sp/>H5T_NATIVE_UINT32)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(int64_t,<sp/><sp/>H5T_NATIVE_INT64)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hdf5tools_8hpp_1aeb130e1b718daea392af7b90a99aa204" kindref="member">SPECIALISE_HDF5_DATA_TYPE_IF_NEEDED</ref>(uint64_t,<sp/>H5T_NATIVE_UINT64)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="289"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Template<sp/>function<sp/>to<sp/>match<sp/>datatypes<sp/>to<sp/>fixed<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="namespaceGambit_1_1Printers_1ac7a6295d90204292db1aad2166748b25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;class<sp/>T&gt;<sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Printers_1ac7a6295d90204292db1aad2166748b25" kindref="member">h5v2_type</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;unsigned<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;unsigned<sp/>long<sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;long<sp/>long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;unsigned<sp/>long<sp/>long&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h5v2_type&lt;double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//!_______________________________________________________________________________________</highlight></codeline>
<codeline lineno="302"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Printers/include/gambit/Printers/printers/hdf5printer/hdf5tools.hpp"/>
  </compounddef>
</doxygen>
