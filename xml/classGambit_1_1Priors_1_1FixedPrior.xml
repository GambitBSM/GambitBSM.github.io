<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Priors_1_1FixedPrior" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Priors::FixedPrior</compoundname>
    <basecompoundref refid="classGambit_1_1Priors_1_1BasePrior" prot="public" virt="non-virtual">Gambit::Priors::BasePrior</basecompoundref>
    <includes refid="fixed__same__as_8hpp" local="no">fixed_same_as.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1FixedPrior_1a4743227e9930d5930710872e9932ad24" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gambit::Priors::FixedPrior::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Gambit::Priors::FixedPrior::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="33" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1FixedPrior_1aed1f05c714d5576b02477cea15d3cc7f" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int Gambit::Priors::FixedPrior::iter</definition>
        <argsstring></argsstring>
        <name>iter</name>
        <qualifiedname>Gambit::Priors::FixedPrior::iter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="34" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1adff05143605d6eb4b9a52cb95b35854e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::FixedPrior::FixedPrior</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;param, const Options &amp;options)</argsstring>
        <name>FixedPrior</name>
        <qualifiedname>Gambit::Priors::FixedPrior::FixedPrior</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const <ref refid="classGambit_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="37" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="37" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1aa0cb8b808474df97898fd87c35d1df13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::FixedPrior::FixedPrior</definition>
        <argsstring>(const std::string &amp;param, const Options &amp;options)</argsstring>
        <name>FixedPrior</name>
        <qualifiedname>Gambit::Priors::FixedPrior::FixedPrior</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const <ref refid="classGambit_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="60" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="60" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1a60e1ec9c821ccd2eec92c0a06bdbaf3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::FixedPrior::FixedPrior</definition>
        <argsstring>(const std::string &amp;name, double value)</argsstring>
        <name>FixedPrior</name>
        <qualifiedname>Gambit::Priors::FixedPrior::FixedPrior</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="76" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1a7e3acda0a07c505caf5c6f412149bb14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; Gambit::Priors::FixedPrior::getShownParameters</definition>
        <argsstring>() const override</argsstring>
        <name>getShownParameters</name>
        <qualifiedname>Gambit::Priors::FixedPrior::getShownParameters</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1a6e59882ac88444b03d95ecd3607ec986">getShownParameters</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="78" column="25" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1aeca49ed55d6e30d28696c99910934aa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Priors::FixedPrior::transform</definition>
        <argsstring>(hyper_cube_ref&lt; double &gt;, std::unordered_map&lt; std::string, double &gt; &amp;outputMap) const override</argsstring>
        <name>transform</name>
        <qualifiedname>Gambit::Priors::FixedPrior::transform</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1a19946205afb8ea2469569f699bc464c6">transform</reimplements>
        <param>
          <type>hyper_cube_ref&lt; double &gt;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, double &gt; &amp;</type>
          <declname>physical</declname>
        </param>
        <briefdescription>
<para>Transform from unit hypercube to physical parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="80" column="18" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="80" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1a4b2f3909534222b236cd219b45d2dffd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gambit::Priors::FixedPrior::inverse_transform</definition>
        <argsstring>(const std::unordered_map&lt; std::string, double &gt; &amp;physical, hyper_cube_ref&lt; double &gt;) const override</argsstring>
        <name>inverse_transform</name>
        <qualifiedname>Gambit::Priors::FixedPrior::inverse_transform</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1a5f40e71b111fc0069d702545c4518cfb">inverse_transform</reimplements>
        <param>
          <type>const std::unordered_map&lt; std::string, double &gt; &amp;</type>
          <declname>physical</declname>
        </param>
        <param>
          <type>hyper_cube_ref&lt; double &gt;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Transform from physical parameter to unit hypercube. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="90" column="18" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="90" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1FixedPrior_1a8167614adbd0023317dab4bbb346d665" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Gambit::Priors::FixedPrior::log_prior_density</definition>
        <argsstring>(const std::unordered_map&lt; std::string, double &gt; &amp;physical) const override</argsstring>
        <name>log_prior_density</name>
        <qualifiedname>Gambit::Priors::FixedPrior::log_prior_density</qualifiedname>
        <reimplements refid="classGambit_1_1Priors_1_1BasePrior_1a77005c4519940bf6457e4d3a3aa9c1a0">log_prior_density</reimplements>
        <param>
          <type>const std::unordered_map&lt; std::string, double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Log of prior density. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="105" column="20" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="105" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A fixed parameter. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Gambit::Priors::BasePrior</label>
        <link refid="classGambit_1_1Priors_1_1BasePrior"/>
      </node>
      <node id="1">
        <label>Gambit::Priors::FixedPrior</label>
        <link refid="classGambit_1_1Priors_1_1FixedPrior"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Gambit::Priors::BasePrior</label>
        <link refid="classGambit_1_1Priors_1_1BasePrior"/>
      </node>
      <node id="1">
        <label>Gambit::Priors::FixedPrior</label>
        <link refid="classGambit_1_1Priors_1_1FixedPrior"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" line="30" column="9" bodyfile="ScannerBit/include/gambit/ScannerBit/priors/fixed_same_as.hpp" bodystart="31" bodyend="122"/>
    <listofallmembers>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a839ff7a9704898c967f03add67950b05" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aefa66cd74f99ecf7d29dcb9c608ed202" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a55ba5474027bb858c3561600aeb39dbb" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a421fbf213a5d7b1734ff5190cc27ff6a" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1adff05143605d6eb4b9a52cb95b35854e" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>FixedPrior</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1aa0cb8b808474df97898fd87c35d1df13" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>FixedPrior</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1a60e1ec9c821ccd2eec92c0a06bdbaf3f" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>FixedPrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aaf6a0098f19105d7e11b5e7a8b74a873" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>getParameters</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1a7e3acda0a07c505caf5c6f412149bb14" prot="public" virt="virtual"><scope>Gambit::Priors::FixedPrior</scope><name>getShownParameters</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1a4b2f3909534222b236cd219b45d2dffd" prot="public" virt="virtual"><scope>Gambit::Priors::FixedPrior</scope><name>inverse_transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ae97a234e263931674a3d2887aae871bb" prot="public" virt="non-virtual" ambiguityscope="Gambit::Priors::BasePrior::"><scope>Gambit::Priors::FixedPrior</scope><name>inverse_transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aeb70ac565a8715a9a9dd223a1318ba6b" prot="public" virt="non-virtual" ambiguityscope="Gambit::Priors::BasePrior::"><scope>Gambit::Priors::FixedPrior</scope><name>inverse_transform</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1aed1f05c714d5576b02477cea15d3cc7f" prot="private" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>iter</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1a8167614adbd0023317dab4bbb346d665" prot="public" virt="virtual"><scope>Gambit::Priors::FixedPrior</scope><name>log_prior_density</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab54eef4c7b0188cc43c60e10f77fac3d" prot="protected" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>param_names</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab79d2df1f9c6350ed69a76e5d123de39" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>setSize</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a9c476b07daa0abd7259573e5825c3d48" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>size</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a58e160ebd0cc101bf53e65cf4e6eb94a" prot="public" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>sizeRef</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1aeca49ed55d6e30d28696c99910934aa8" prot="public" virt="virtual"><scope>Gambit::Priors::FixedPrior</scope><name>transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1afd7a341a9684c682c9b048543833ffc8" prot="public" virt="non-virtual" ambiguityscope="Gambit::Priors::BasePrior::"><scope>Gambit::Priors::FixedPrior</scope><name>transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab1be385fc36bd1fb1b562ec04b0e8440" prot="public" virt="non-virtual" ambiguityscope="Gambit::Priors::BasePrior::"><scope>Gambit::Priors::FixedPrior</scope><name>transform</name></member>
      <member refid="classGambit_1_1Priors_1_1FixedPrior_1a4743227e9930d5930710872e9932ad24" prot="private" virt="non-virtual"><scope>Gambit::Priors::FixedPrior</scope><name>value</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1af23c343daddeab5deb668909eff4d918" prot="public" virt="virtual"><scope>Gambit::Priors::FixedPrior</scope><name>~BasePrior</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
