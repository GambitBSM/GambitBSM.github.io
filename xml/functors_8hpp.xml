<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="functors_8hpp" kind="file" language="C++">
    <compoundname>functors.hpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes local="no">chrono</includes>
    <includes local="no">sstream</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">omp.h</includes>
    <includes refid="util__types_8hpp" local="yes">gambit/Utils/util_types.hpp</includes>
    <includes refid="util__functions_8hpp" local="yes">gambit/Utils/util_functions.hpp</includes>
    <includes refid="yaml__options_8hpp" local="yes">gambit/Utils/yaml_options.hpp</includes>
    <includes refid="model__parameters_8hpp" local="yes">gambit/Utils/model_parameters.hpp</includes>
    <includes refid="logger_8hpp" local="yes">gambit/Logs/logger.hpp</includes>
    <includes refid="logmaster_8hpp" local="yes">gambit/Logs/logmaster.hpp</includes>
    <includedby refid="backend__macros_8hpp" local="yes">backend_macros.hpp</includedby>
    <includedby refid="container__factory_8hpp" local="yes">container_factory.hpp</includedby>
    <includedby refid="core_8hpp" local="yes">core.hpp</includedby>
    <includedby refid="depresolver_8hpp" local="yes">depresolver.hpp</includedby>
    <includedby refid="functor__definitions_8hpp" local="yes">functor_definitions.hpp</includedby>
    <includedby refid="Elements_2src_2functors_8cpp" local="yes">functors.cpp</includedby>
    <includedby refid="functors__with__signals_8cpp" local="yes">functors_with_signals.cpp</includedby>
    <includedby refid="Backends_2src_2ini__functions_8cpp" local="yes">ini_functions.cpp</includedby>
    <includedby refid="Elements_2src_2ini__functions_8cpp" local="yes">ini_functions.cpp</includedby>
    <includedby refid="models_8cpp" local="yes">models.cpp</includedby>
    <includedby refid="module__macros__incore__defs_8hpp" local="yes">module_macros_incore_defs.hpp</includedby>
    <includedby refid="observable_8cpp" local="yes">observable.cpp</includedby>
    <includedby refid="rule_8cpp" local="yes">rule.cpp</includedby>
    <includedby refid="safety__bucket_8hpp" local="yes">safety_bucket.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>functors.hpp</label>
        <link refid="functors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="61">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="34">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="24">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="49">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="48">
        <label>array</label>
      </node>
      <node id="53">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="52">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="25">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="20">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="19">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="18">
        <label>boost/version.hpp</label>
      </node>
      <node id="42">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="50">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>complex</label>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="47">
        <label>deque</label>
      </node>
      <node id="35">
        <label>exception</label>
      </node>
      <node id="46">
        <label>forward_list</label>
      </node>
      <node id="40">
        <label>fstream</label>
      </node>
      <node id="51">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="39">
        <label>iostream</label>
      </node>
      <node id="59">
        <label>limits</label>
      </node>
      <node id="45">
        <label>list</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="54">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="8">
        <label>omp.h</label>
      </node>
      <node id="63">
        <label>ostream</label>
      </node>
      <node id="3">
        <label>set</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="41">
        <label>type_traits</label>
      </node>
      <node id="16">
        <label>unistd.h</label>
      </node>
      <node id="43">
        <label>unordered_map</label>
      </node>
      <node id="44">
        <label>unordered_set</label>
      </node>
      <node id="36">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="57">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>backend_macros.hpp</label>
        <link refid="backend__macros_8hpp"/>
      </node>
      <node id="46">
        <label>frontend_macros.hpp</label>
        <link refid="frontend__macros_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ATLAS_FullLikes_1_0.cpp</label>
        <link refid="ATLAS__FullLikes__1__0_8cpp"/>
      </node>
      <node id="48">
        <label>Acropolis_1_2_1.cpp</label>
        <link refid="Acropolis__1__2__1_8cpp"/>
      </node>
      <node id="49">
        <label>AlterBBN_2_2.cpp</label>
        <link refid="AlterBBN__2__2_8cpp"/>
      </node>
      <node id="50">
        <label>CalcHEP_3_6_27.cpp</label>
        <link refid="CalcHEP__3__6__27_8cpp"/>
      </node>
      <node id="51">
        <label>CaptnGeneral_2_1.cpp</label>
        <link refid="CaptnGeneral__2__1_8cpp"/>
      </node>
      <node id="52">
        <label>Contur_2_1_1.cpp</label>
        <link refid="Contur__2__1__1_8cpp"/>
      </node>
      <node id="53">
        <label>DDCalc_1_0_0.cpp</label>
        <link refid="DDCalc__1__0__0_8cpp"/>
      </node>
      <node id="54">
        <label>DDCalc_1_1_0.cpp</label>
        <link refid="DDCalc__1__1__0_8cpp"/>
      </node>
      <node id="55">
        <label>DDCalc_1_2_0.cpp</label>
        <link refid="DDCalc__1__2__0_8cpp"/>
      </node>
      <node id="56">
        <label>DDCalc_2_0_0.cpp</label>
        <link refid="DDCalc__2__0__0_8cpp"/>
      </node>
      <node id="57">
        <label>DDCalc_2_1_0.cpp</label>
        <link refid="DDCalc__2__1__0_8cpp"/>
      </node>
      <node id="58">
        <label>DDCalc_2_2_0.cpp</label>
        <link refid="DDCalc__2__2__0_8cpp"/>
      </node>
      <node id="59">
        <label>DDCalc_2_3_0.cpp</label>
        <link refid="DDCalc__2__3__0_8cpp"/>
      </node>
      <node id="60">
        <label>DarkAges_1_2_0.cpp</label>
        <link refid="DarkAges__1__2__0_8cpp"/>
      </node>
      <node id="61">
        <label>DarkCast_1_1.cpp</label>
        <link refid="DarkCast__1__1_8cpp"/>
      </node>
      <node id="62">
        <label>DarkSUSY_5_1_3.cpp</label>
        <link refid="DarkSUSY__5__1__3_8cpp"/>
      </node>
      <node id="63">
        <label>DarkSUSY_MSSM_6_1_1.cpp</label>
        <link refid="DarkSUSY__MSSM__6__1__1_8cpp"/>
      </node>
      <node id="64">
        <label>DarkSUSY_MSSM_6_2_2.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__2_8cpp"/>
      </node>
      <node id="65">
        <label>DarkSUSY_MSSM_6_2_5.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__5_8cpp"/>
      </node>
      <node id="66">
        <label>DarkSUSY_MSSM_6_4_0.cpp</label>
        <link refid="DarkSUSY__MSSM__6__4__0_8cpp"/>
      </node>
      <node id="67">
        <label>DarkSUSY_generic_wimp_6_1_1.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__1__1_8cpp"/>
      </node>
      <node id="68">
        <label>DarkSUSY_generic_wimp_6_2_2.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__2_8cpp"/>
      </node>
      <node id="69">
        <label>DarkSUSY_generic_wimp_6_2_5.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__5_8cpp"/>
      </node>
      <node id="70">
        <label>DarkSUSY_generic_wimp_6_4_0.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__4__0_8cpp"/>
      </node>
      <node id="71">
        <label>DirectDM_2_2_0.cpp</label>
        <link refid="DirectDM__2__2__0_8cpp"/>
      </node>
      <node id="72">
        <label>LibMathematicaTest.cpp</label>
        <link refid="LibMathematicaTest_8cpp"/>
      </node>
      <node id="73">
        <label>LibSecond_1_1.cpp</label>
        <link refid="LibSecond__1__1_8cpp"/>
      </node>
      <node id="74">
        <label>LibSecond_1_2.cpp</label>
        <link refid="LibSecond__1__2_8cpp"/>
      </node>
      <node id="75">
        <label>LibThird_1_1.cpp</label>
        <link refid="LibThird__1__1_8cpp"/>
      </node>
      <node id="76">
        <label>LibThird_1_2.cpp</label>
        <link refid="LibThird__1__2_8cpp"/>
      </node>
      <node id="77">
        <label>MicrOmegas_DMsimpVectorMedVectorDM_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__DMsimpVectorMedVectorDM__3__6__9__2_8cpp"/>
      </node>
      <node id="78">
        <label>MicrOmegas_DiracSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__DiracSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="79">
        <label>MicrOmegas_MSSM_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__MSSM__3__6__9__2_8cpp"/>
      </node>
      <node id="80">
        <label>MicrOmegas_MajoranaSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__MajoranaSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="81">
        <label>MicrOmegas_ScalarSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__ScalarSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="82">
        <label>MicrOmegas_ScalarSingletDM_Z3_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__ScalarSingletDM__Z3__3__6__9__2_8cpp"/>
      </node>
      <node id="83">
        <label>MicrOmegas_VectorSingletDM_Z2_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__VectorSingletDM__Z2__3__6__9__2_8cpp"/>
      </node>
      <node id="84">
        <label>MontePythonLike_3_3_0.cpp</label>
        <link refid="MontePythonLike__3__3__0_8cpp"/>
      </node>
      <node id="85">
        <label>MontePythonLike_3_5_0.cpp</label>
        <link refid="MontePythonLike__3__5__0_8cpp"/>
      </node>
      <node id="86">
        <label>MultiModeCode_2_0_0.cpp</label>
        <link refid="MultiModeCode__2__0__0_8cpp"/>
      </node>
      <node id="87">
        <label>Prospino_2_1.cpp</label>
        <link refid="Prospino__2__1_8cpp"/>
      </node>
      <node id="88">
        <label>Rivet_3_1_5.cpp</label>
        <link refid="Rivet__3__1__5_8cpp"/>
      </node>
      <node id="89">
        <label>SPheno_3_3_8.cpp</label>
        <link refid="SPheno__3__3__8_8cpp"/>
      </node>
      <node id="90">
        <label>SPheno_4_0_3.cpp</label>
        <link refid="SPheno__4__0__3_8cpp"/>
      </node>
      <node id="91">
        <label>SUSYHD_1_0_2.cpp</label>
        <link refid="SUSYHD__1__0__2_8cpp"/>
      </node>
      <node id="92">
        <label>SUSY_HIT_1_5.cpp</label>
        <link refid="SUSY__HIT__1__5_8cpp"/>
      </node>
      <node id="93">
        <label>SuperIso_4_1.cpp</label>
        <link refid="SuperIso__4__1_8cpp"/>
      </node>
      <node id="94">
        <label>classy_2_6_3.cpp</label>
        <link refid="classy__2__6__3_8cpp"/>
      </node>
      <node id="95">
        <label>classy_2_9_3.cpp</label>
        <link refid="classy__2__9__3_8cpp"/>
      </node>
      <node id="96">
        <label>classy_2_9_4.cpp</label>
        <link refid="classy__2__9__4_8cpp"/>
      </node>
      <node id="97">
        <label>classy_3_1_0.cpp</label>
        <link refid="classy__3__1__0_8cpp"/>
      </node>
      <node id="98">
        <label>classy_exo_2_7_2.cpp</label>
        <link refid="classy__exo__2__7__2_8cpp"/>
      </node>
      <node id="99">
        <label>gamLike_1_0_0.cpp</label>
        <link refid="gamLike__1__0__0_8cpp"/>
      </node>
      <node id="100">
        <label>gamLike_1_0_1.cpp</label>
        <link refid="gamLike__1__0__1_8cpp"/>
      </node>
      <node id="101">
        <label>nulike_1_0_4.cpp</label>
        <link refid="nulike__1__0__4_8cpp"/>
      </node>
      <node id="102">
        <label>nulike_1_0_5.cpp</label>
        <link refid="nulike__1__0__5_8cpp"/>
      </node>
      <node id="103">
        <label>nulike_1_0_6.cpp</label>
        <link refid="nulike__1__0__6_8cpp"/>
      </node>
      <node id="104">
        <label>nulike_1_0_7.cpp</label>
        <link refid="nulike__1__0__7_8cpp"/>
      </node>
      <node id="105">
        <label>nulike_1_0_8.cpp</label>
        <link refid="nulike__1__0__8_8cpp"/>
      </node>
      <node id="106">
        <label>nulike_1_0_9.cpp</label>
        <link refid="nulike__1__0__9_8cpp"/>
      </node>
      <node id="107">
        <label>plc_3_0.cpp</label>
        <link refid="plc__3__0_8cpp"/>
      </node>
      <node id="108">
        <label>salami_0_1_0.cpp</label>
        <link refid="salami__0__1__0_8cpp"/>
      </node>
      <node id="109">
        <label>simple_xs_1_0.cpp</label>
        <link refid="simple__xs__1__0_8cpp"/>
      </node>
      <node id="110">
        <label>xsecBE_1_0_2.cpp</label>
        <link refid="xsecBE__1__0__2_8cpp"/>
      </node>
      <node id="22">
        <label>ini_functions.cpp</label>
        <link refid="Backends_2src_2ini__functions_8cpp"/>
      </node>
      <node id="124">
        <label>ColliderBit_eventloop.hpp</label>
        <link refid="ColliderBit__eventloop_8hpp"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>generateEventPy8Collider.hpp</label>
        <link refid="generateEventPy8Collider_8hpp"/>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>getPy8Collider.hpp</label>
        <link refid="getPy8Collider_8hpp"/>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>ColliderBit_Bfactories.cpp</label>
        <link refid="ColliderBit__Bfactories_8cpp"/>
      </node>
      <node id="119">
        <label>ColliderBit_Higgs.cpp</label>
        <link refid="ColliderBit__Higgs_8cpp"/>
      </node>
      <node id="120">
        <label>ColliderBit_InterpolatedYields.cpp</label>
        <link refid="ColliderBit__InterpolatedYields_8cpp"/>
      </node>
      <node id="121">
        <label>ColliderBit_LEP.cpp</label>
        <link refid="ColliderBit__LEP_8cpp"/>
      </node>
      <node id="122">
        <label>ColliderBit_dummy.cpp</label>
        <link refid="ColliderBit__dummy_8cpp"/>
      </node>
      <node id="123">
        <label>ColliderBit_eventloop.cpp</label>
        <link refid="ColliderBit__eventloop_8cpp"/>
      </node>
      <node id="125">
        <label>ColliderBit_measurements.cpp</label>
        <link refid="ColliderBit__measurements_8cpp"/>
      </node>
      <node id="160">
        <label>LHC_likelihoods.cpp</label>
        <link refid="LHC__likelihoods_8cpp"/>
      </node>
      <node id="168">
        <label>PoissonCalculators.cpp</label>
        <link refid="PoissonCalculators_8cpp"/>
      </node>
      <node id="126">
        <label>Utils.cpp</label>
        <link refid="Utils_8cpp"/>
      </node>
      <node id="127">
        <label>collider_event_weights.cpp</label>
        <link refid="collider__event__weights_8cpp"/>
      </node>
      <node id="131">
        <label>getActiveProcessCodes.cpp</label>
        <link refid="getActiveProcessCodes_8cpp"/>
      </node>
      <node id="132">
        <label>getAnalysisContainer.cpp</label>
        <link refid="getAnalysisContainer_8cpp"/>
      </node>
      <node id="133">
        <label>getBuckFast.cpp</label>
        <link refid="getBuckFast_8cpp"/>
      </node>
      <node id="134">
        <label>getHepMCEvent.cpp</label>
        <link refid="getHepMCEvent_8cpp"/>
      </node>
      <node id="135">
        <label>getLHEvent.cpp</label>
        <link refid="getLHEvent_8cpp"/>
      </node>
      <node id="137">
        <label>getxsec.cpp</label>
        <link refid="getxsec_8cpp"/>
      </node>
      <node id="200">
        <label>lep_mssm_xsecs.cpp</label>
        <link refid="lep__mssm__xsecs_8cpp"/>
      </node>
      <node id="129">
        <label>SUSY.cpp</label>
        <link refid="SUSY_8cpp"/>
      </node>
      <node id="130">
        <label>SUSY_extras.cpp</label>
        <link refid="SUSY__extras_8cpp"/>
      </node>
      <node id="138">
        <label>process_code_PID_pair_mapping.cpp</label>
        <link refid="process__code__PID__pair__mapping_8cpp"/>
      </node>
      <node id="139">
        <label>runAnalyses.cpp</label>
        <link refid="runAnalyses_8cpp"/>
      </node>
      <node id="140">
        <label>smearEvent.cpp</label>
        <link refid="smearEvent_8cpp"/>
      </node>
      <node id="3">
        <label>container_factory.hpp</label>
        <link refid="container__factory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core_singleton.hpp</label>
        <link refid="core__singleton_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>depresolver.hpp</label>
        <link refid="depresolver_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>gambit.hpp</label>
        <link refid="gambit_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>likelihood_container.hpp</label>
        <link refid="likelihood__container_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>modelgraph.hpp</label>
        <link refid="modelgraph_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>container_factory.cpp</label>
        <link refid="container__factory_8cpp"/>
      </node>
      <node id="10">
        <label>core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="12">
        <label>core_singleton.cpp</label>
        <link refid="core__singleton_8cpp"/>
      </node>
      <node id="15">
        <label>depresolver.cpp</label>
        <link refid="depresolver_8cpp"/>
      </node>
      <node id="17">
        <label>diagnostics.cpp</label>
        <link refid="Core_2src_2diagnostics_8cpp"/>
      </node>
      <node id="21">
        <label>functors_with_signals.cpp</label>
        <link refid="functors__with__signals_8cpp"/>
      </node>
      <node id="7">
        <label>gambit.cpp</label>
        <link refid="gambit_8cpp"/>
      </node>
      <node id="13">
        <label>ini_functions.cpp</label>
        <link refid="Core_2src_2ini__functions_8cpp"/>
      </node>
      <node id="8">
        <label>likelihood_container.cpp</label>
        <link refid="likelihood__container_8cpp"/>
      </node>
      <node id="18">
        <label>modelgraph.cpp</label>
        <link refid="modelgraph_8cpp"/>
      </node>
      <node id="33">
        <label>observable.cpp</label>
        <link refid="observable_8cpp"/>
      </node>
      <node id="34">
        <label>rule.cpp</label>
        <link refid="rule_8cpp"/>
      </node>
      <node id="114">
        <label>BBN.cpp</label>
        <link refid="BBN_8cpp"/>
      </node>
      <node id="115">
        <label>Boltzmann.cpp</label>
        <link refid="Boltzmann_8cpp"/>
      </node>
      <node id="116">
        <label>CMB.cpp</label>
        <link refid="CMB_8cpp"/>
      </node>
      <node id="141">
        <label>CosmoALPs.cpp</label>
        <link refid="CosmoALPs_8cpp"/>
      </node>
      <node id="142">
        <label>CosmoBit.cpp</label>
        <link refid="CosmoBit_8cpp"/>
      </node>
      <node id="159">
        <label>Inflation.cpp</label>
        <link refid="Inflation_8cpp"/>
      </node>
      <node id="163">
        <label>MontePython.cpp</label>
        <link refid="MontePython_8cpp"/>
      </node>
      <node id="167">
        <label>Planck.cpp</label>
        <link refid="Planck_8cpp"/>
      </node>
      <node id="29">
        <label>DarkBit_standalone_MSSM.cpp</label>
        <link refid="DarkBit__standalone__MSSM_8cpp"/>
      </node>
      <node id="30">
        <label>DarkBit_standalone_ScalarSingletDM_Z2.cpp</label>
        <link refid="DarkBit__standalone__ScalarSingletDM__Z2_8cpp"/>
      </node>
      <node id="31">
        <label>DarkBit_standalone_WIMP.cpp</label>
        <link refid="DarkBit__standalone__WIMP_8cpp"/>
      </node>
      <node id="112">
        <label>AntiprotonLikelihoods.cpp</label>
        <link refid="AntiprotonLikelihoods_8cpp"/>
      </node>
      <node id="113">
        <label>Axions.cpp</label>
        <link refid="DarkBit_2src_2Axions_8cpp"/>
      </node>
      <node id="117">
        <label>Cascades.cpp</label>
        <link refid="Cascades_8cpp"/>
      </node>
      <node id="143">
        <label>DMEFT.cpp</label>
        <link refid="DarkBit_2src_2DMEFT_8cpp"/>
      </node>
      <node id="144">
        <label>DMsimpVectorMedDiracDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedDiracDM_8cpp"/>
      </node>
      <node id="145">
        <label>DMsimpVectorMedMajoranaDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedMajoranaDM_8cpp"/>
      </node>
      <node id="146">
        <label>DMsimpVectorMedScalarDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedScalarDM_8cpp"/>
      </node>
      <node id="147">
        <label>DMsimpVectorMedVectorDM.cpp</label>
        <link refid="DarkBit_2src_2DMsimpVectorMedVectorDM_8cpp"/>
      </node>
      <node id="148">
        <label>DarkBit.cpp</label>
        <link refid="DarkBit_8cpp"/>
      </node>
      <node id="149">
        <label>DarkBit_utils.cpp</label>
        <link refid="DarkBit__utils_8cpp"/>
      </node>
      <node id="151">
        <label>DiracSingletDM.cpp</label>
        <link refid="DarkBit_2src_2DiracSingletDM_8cpp"/>
      </node>
      <node id="152">
        <label>DirectDetection.cpp</label>
        <link refid="DirectDetection_8cpp"/>
      </node>
      <node id="153">
        <label>EnergyInjection.cpp</label>
        <link refid="EnergyInjection_8cpp"/>
      </node>
      <node id="158">
        <label>IndirectDetectionYields.cpp</label>
        <link refid="IndirectDetectionYields_8cpp"/>
      </node>
      <node id="161">
        <label>MSSM.cpp</label>
        <link refid="DarkBit_2src_2MSSM_8cpp"/>
      </node>
      <node id="162">
        <label>MajoranaSingletDM.cpp</label>
        <link refid="DarkBit_2src_2MajoranaSingletDM_8cpp"/>
      </node>
      <node id="166">
        <label>PPPC.cpp</label>
        <link refid="PPPC_8cpp"/>
      </node>
      <node id="170">
        <label>ProcessCatalog.cpp</label>
        <link refid="ProcessCatalog_8cpp"/>
      </node>
      <node id="171">
        <label>RelicDensity.cpp</label>
        <link refid="RelicDensity_8cpp"/>
      </node>
      <node id="173">
        <label>ScalarSingletDM.cpp</label>
        <link refid="DarkBit_2src_2ScalarSingletDM_8cpp"/>
      </node>
      <node id="174">
        <label>SimpleHist.cpp</label>
        <link refid="SimpleHist_8cpp"/>
      </node>
      <node id="175">
        <label>SimpleLikelihoods.cpp</label>
        <link refid="SimpleLikelihoods_8cpp"/>
      </node>
      <node id="192">
        <label>SubGeVDM_SelfInteractions.cpp</label>
        <link refid="SubGeVDM__SelfInteractions_8cpp"/>
      </node>
      <node id="193">
        <label>SubGeVDM_fermion.cpp</label>
        <link refid="SubGeVDM__fermion_8cpp"/>
      </node>
      <node id="194">
        <label>SubGeVDM_scalar.cpp</label>
        <link refid="SubGeVDM__scalar_8cpp"/>
      </node>
      <node id="195">
        <label>SunNeutrinos.cpp</label>
        <link refid="SunNeutrinos_8cpp"/>
      </node>
      <node id="196">
        <label>VectorSingletDM.cpp</label>
        <link refid="DarkBit_2src_2VectorSingletDM_8cpp"/>
      </node>
      <node id="197">
        <label>WIMP_EFT.cpp</label>
        <link refid="WIMP__EFT_8cpp"/>
      </node>
      <node id="198">
        <label>Xray.cpp</label>
        <link refid="Xray_8cpp"/>
      </node>
      <node id="199">
        <label>decay_chain.cpp</label>
        <link refid="decay__chain_8cpp"/>
      </node>
      <node id="28">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="150">
        <label>DecayBit.cpp</label>
        <link refid="DecayBit_8cpp"/>
      </node>
      <node id="19">
        <label>functor_definitions.hpp</label>
        <link refid="functor__definitions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>functors.hpp</label>
        <link refid="functors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>gambit_module_headers.hpp</label>
        <link refid="gambit__module__headers_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>module_macros_incore.hpp</label>
        <link refid="module__macros__incore_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>module_macros_incore_defs.hpp</label>
        <link refid="module__macros__incore__defs_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>module_macros_inmodule.hpp</label>
        <link refid="module__macros__inmodule_8hpp"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>module_macros_inmodule_defs.hpp</label>
        <link refid="module__macros__inmodule__defs_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>safety_bucket.hpp</label>
        <link refid="safety__bucket_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>standalone_module.hpp</label>
        <link refid="standalone__module_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>functors.cpp</label>
        <link refid="Elements_2src_2functors_8cpp"/>
      </node>
      <node id="23">
        <label>ini_functions.cpp</label>
        <link refid="Elements_2src_2ini__functions_8cpp"/>
      </node>
      <node id="32">
        <label>ExampleBit_A_standalone_example.cpp</label>
        <link refid="ExampleBit__A__standalone__example_8cpp"/>
      </node>
      <node id="154">
        <label>ExampleBit_A.cpp</label>
        <link refid="ExampleBit__A_8cpp"/>
      </node>
      <node id="155">
        <label>ExampleBit_B.cpp</label>
        <link refid="ExampleBit__B_8cpp"/>
      </node>
      <node id="156">
        <label>FlavBit.cpp</label>
        <link refid="FlavBit_8cpp"/>
      </node>
      <node id="157">
        <label>Flav_reader.cpp</label>
        <link refid="Flav__reader_8cpp"/>
      </node>
      <node id="37">
        <label>model_macros.hpp</label>
        <link refid="model__macros_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>models.cpp</label>
        <link refid="models_8cpp"/>
      </node>
      <node id="38">
        <label>Axions.cpp</label>
        <link refid="Models_2src_2models_2Axions_8cpp"/>
      </node>
      <node id="39">
        <label>CMSSM.cpp</label>
        <link refid="CMSSM_8cpp"/>
      </node>
      <node id="40">
        <label>NUHM1.cpp</label>
        <link refid="NUHM1_8cpp"/>
      </node>
      <node id="41">
        <label>NUHM2.cpp</label>
        <link refid="NUHM2_8cpp"/>
      </node>
      <node id="42">
        <label>RightHandedNeutrinos_diff.cpp</label>
        <link refid="RightHandedNeutrinos__diff_8cpp"/>
      </node>
      <node id="43">
        <label>StandardModel_mNudiff.cpp</label>
        <link refid="StandardModel__mNudiff_8cpp"/>
      </node>
      <node id="44">
        <label>mSUGRA.cpp</label>
        <link refid="mSUGRA_8cpp"/>
      </node>
      <node id="164">
        <label>NeutrinoBit.cpp</label>
        <link refid="NeutrinoBit_8cpp"/>
      </node>
      <node id="172">
        <label>RightHandedNeutrinos.cpp</label>
        <link refid="RightHandedNeutrinos_8cpp"/>
      </node>
      <node id="165">
        <label>ObjectivesBit.cpp</label>
        <link refid="ObjectivesBit_8cpp"/>
      </node>
      <node id="169">
        <label>PrecisionBit.cpp</label>
        <link refid="PrecisionBit_8cpp"/>
      </node>
      <node id="176">
        <label>SpecBit.cpp</label>
        <link refid="SpecBit_8cpp"/>
      </node>
      <node id="177">
        <label>SpecBit_DMEFT.cpp</label>
        <link refid="SpecBit__DMEFT_8cpp"/>
      </node>
      <node id="178">
        <label>SpecBit_DMsimpVectorMedDiracDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedDiracDM_8cpp"/>
      </node>
      <node id="179">
        <label>SpecBit_DMsimpVectorMedMajoranaDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedMajoranaDM_8cpp"/>
      </node>
      <node id="180">
        <label>SpecBit_DMsimpVectorMedScalarDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedScalarDM_8cpp"/>
      </node>
      <node id="181">
        <label>SpecBit_DMsimpVectorMedVectorDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedVectorDM_8cpp"/>
      </node>
      <node id="182">
        <label>SpecBit_DiracSingletDM.cpp</label>
        <link refid="SpecBit__DiracSingletDM_8cpp"/>
      </node>
      <node id="183">
        <label>SpecBit_MDM.cpp</label>
        <link refid="SpecBit__MDM_8cpp"/>
      </node>
      <node id="184">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="185">
        <label>SpecBit_MajoranaSingletDM.cpp</label>
        <link refid="SpecBit__MajoranaSingletDM_8cpp"/>
      </node>
      <node id="186">
        <label>SpecBit_SM.cpp</label>
        <link refid="SpecBit__SM_8cpp"/>
      </node>
      <node id="187">
        <label>SpecBit_ScalarSingletDM.cpp</label>
        <link refid="SpecBit__ScalarSingletDM_8cpp"/>
      </node>
      <node id="188">
        <label>SpecBit_SubGeVDM.cpp</label>
        <link refid="SpecBit__SubGeVDM_8cpp"/>
      </node>
      <node id="189">
        <label>SpecBit_VS.cpp</label>
        <link refid="SpecBit__VS_8cpp"/>
      </node>
      <node id="190">
        <label>SpecBit_VectorSingletDM.cpp</label>
        <link refid="SpecBit__VectorSingletDM_8cpp"/>
      </node>
      <node id="191">
        <label>SpecBit_tests.cpp</label>
        <link refid="src_2SpecBit__tests_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structGambit_1_1variadic__ptr" prot="public">Gambit::variadic_ptr</innerclass>
    <innerclass refid="classGambit_1_1functor" prot="public">Gambit::functor</innerclass>
    <innerclass refid="classGambit_1_1module__functor__common" prot="public">Gambit::module_functor_common</innerclass>
    <innerclass refid="classGambit_1_1module__functor" prot="public">Gambit::module_functor</innerclass>
    <innerclass refid="classGambit_1_1module__functor_3_01void_01_4" prot="public">Gambit::module_functor&lt; void &gt;</innerclass>
    <innerclass refid="classGambit_1_1backend__functor__common" prot="public">Gambit::backend_functor_common</innerclass>
    <innerclass refid="classGambit_1_1backend__functor_3_01TYPE_07_5_08_07ARGS_8_8_8_08_00_01TYPE_00_01ARGS_8_8_8_01_4" prot="public">Gambit::backend_functor&lt; TYPE(*)(ARGS...), TYPE, ARGS... &gt;</innerclass>
    <innerclass refid="classGambit_1_1backend__functor_3_01void_07_5_08_07ARGS_8_8_8_08_00_01void_00_01ARGS_8_8_8_01_4" prot="public">Gambit::backend_functor&lt; void(*)(ARGS...), void, ARGS... &gt;</innerclass>
    <innerclass refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111" prot="public">Gambit::backend_functor&lt; typename variadic_ptr&lt; TYPE, ARGS... &gt;::type, TYPE, ARGS... &gt;</innerclass>
    <innerclass refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6" prot="public">Gambit::backend_functor&lt; typename variadic_ptr&lt; void, ARGS... &gt;::type, void, ARGS... &gt;</innerclass>
    <innerclass refid="classGambit_1_1model__functor" prot="public">Gambit::model_functor</innerclass>
    <innerclass refid="classGambit_1_1primary__model__functor" prot="public">Gambit::primary_model_functor</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Printers">Gambit::Printers</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Models">Gambit::Models</innernamespace>
    <innernamespace refid="namespaceGambit_1_1DRes">Gambit::DRes</innernamespace>
    <innernamespace refid="namespaceGambit_1_1FunctorHelp">Gambit::FunctorHelp</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="functors_8hpp_1a7ecb7dd0924f535012cc7a405e016632" prot="public" static="no">
        <name>FUNCTORS_FADE_RATE</name>
        <initializer>0.01</initializer>
        <briefdescription>
<para>Decay rate of average runtime estimate [(number of functor evaluations)^-1]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/functors.hpp" line="65" column="9" bodyfile="Elements/include/gambit/Elements/functors.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="functors_8hpp_1ac391d503bb215b4d44068ebc313068af" prot="public" static="no">
        <name>FUNCTORS_BASE_INVALIDATION_RATE</name>
        <initializer>0.01</initializer>
        <briefdescription>
<para>Minimum invaldiation rate (should be 0&lt;...&lt;&lt;1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/functors.hpp" line="67" column="9" bodyfile="Elements/include/gambit/Elements/functors.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="functors_8hpp_1acaf43ea84c481edfca3ccf45c066ba80" prot="public" static="no">
        <name>FUNCTORS_RUNTIME_INIT</name>
        <initializer>0.000001</initializer>
        <briefdescription>
<para>Initial runtime estimate (s) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elements/include/gambit/Elements/functors.hpp" line="69" column="9" bodyfile="Elements/include/gambit/Elements/functors.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functor class definitions.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:patscott@physics.mcgill.ca">patscott@physics.mcgill.ca</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Apr-July, Dec </para>
</simplesect>
<simplesect kind="date"><para>2014 Jan, Mar-May, Sep </para>
</simplesect>
<simplesect kind="date"><para>2015 Jan </para>
</simplesect>
<simplesect kind="date"><para>2022 Dec</para>
</simplesect>
<simplesect kind="author"><para>Anders Kvellestad (<ulink url="mailto:anders.kvellestad@fys.uio.no">anders.kvellestad@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Apr, Nov</para>
</simplesect>
<simplesect kind="author"><para>Christoph Weniger (<ulink url="mailto:c.weniger@uva.nl">c.weniger@uva.nl</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 May, June, July</para>
</simplesect>
<simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@monash.edu.au">benjamin.farmer@monash.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 July, Sep </para>
</simplesect>
<simplesect kind="date"><para>2014 Jan</para>
</simplesect>
<simplesect kind="author"><para>Lars A. Dal (<ulink url="mailto:l.a.dal@fys.uio.no">l.a.dal@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Jan</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physik.rwth-aachen.de">gonzalo@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Sep</para>
</simplesect>
<simplesect kind="author"><para>Patrick Stoecker (<ulink url="mailto:stoecker@physik.rwth-aachen.de">stoecker@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2023 May, Nov</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Functor<sp/>class<sp/>definitions.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(patscott@physics.mcgill.ca)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Apr-July,<sp/>Dec</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Jan,<sp/>Mar-May,<sp/>Sep</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jan</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\date<sp/>2022<sp/>Dec</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Anders<sp/>Kvellestad</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(anders.kvellestad@fys.uio.no)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/>\date<sp/>2013<sp/>Apr,<sp/>Nov</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\author<sp/>Christoph<sp/>Weniger</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c.weniger@uva.nl)</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>May,<sp/>June,<sp/>July</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@monash.edu.au)</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>July,<sp/>Sep</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Jan</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/>\author<sp/>Lars<sp/>A.<sp/>Dal</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(l.a.dal@fys.uio.no)</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jan</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="36"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(gonzalo@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="37"><highlight class="comment">///<sp/><sp/>\date<sp/>2021<sp/>Sep</highlight></codeline>
<codeline lineno="38"><highlight class="comment">///</highlight></codeline>
<codeline lineno="39"><highlight class="comment">///<sp/><sp/>\author<sp/>Patrick<sp/>Stoecker</highlight></codeline>
<codeline lineno="40"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stoecker@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="41"><highlight class="comment">///<sp/><sp/>\date<sp/>2023<sp/>May,<sp/>Nov</highlight></codeline>
<codeline lineno="42"><highlight class="comment">///</highlight></codeline>
<codeline lineno="43"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__functors_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__functors_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__types_8hpp" kindref="compound">gambit/Utils/util_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__functions_8hpp" kindref="compound">gambit/Utils/util_functions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="yaml__options_8hpp" kindref="compound">gambit/Utils/yaml_options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model__parameters_8hpp" kindref="compound">gambit/Utils/model_parameters.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">gambit/Logs/logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logmaster_8hpp" kindref="compound">gambit/Logs/logmaster.hpp</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>full<sp/>declaration<sp/>of<sp/>LogMaster<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">///<sp/>Decay<sp/>rate<sp/>of<sp/>average<sp/>runtime<sp/>estimate<sp/>[(number<sp/>of<sp/>functor<sp/>evaluations)^-1]</highlight></codeline>
<codeline lineno="65" refid="functors_8hpp_1a7ecb7dd0924f535012cc7a405e016632" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>FUNCTORS_FADE_RATE<sp/>0.01</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">///<sp/>Minimum<sp/>invaldiation<sp/>rate<sp/>(should<sp/>be<sp/>0&lt;...&lt;&lt;1)</highlight></codeline>
<codeline lineno="67" refid="functors_8hpp_1ac391d503bb215b4d44068ebc313068af" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>FUNCTORS_BASE_INVALIDATION_RATE<sp/>0.01</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">///<sp/>Initial<sp/>runtime<sp/>estimate<sp/>(s)</highlight></codeline>
<codeline lineno="69" refid="functors_8hpp_1acaf43ea84c481edfca3ccf45c066ba80" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>FUNCTORS_RUNTIME_INIT<sp/>0.000001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>///<sp/>Forward<sp/>declaration<sp/>of<sp/>Printers::BasePrinter<sp/>class<sp/>for<sp/>use<sp/>in<sp/>print<sp/>functions.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Printers<sp/>{<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BasePrinter;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>///<sp/>Forward<sp/>declaration<sp/>of<sp/>Models::ModelFunctorClaw<sp/>class<sp/>for<sp/>use<sp/>in<sp/>constructors.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Models<sp/>{<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ModelFunctorClaw;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/>///<sp/>Forward<sp/>declaration<sp/>of<sp/>Rule<sp/>and<sp/>Observables<sp/>classes<sp/>for<sp/>saving<sp/>pointers<sp/>to<sp/>ignored<sp/>and<sp/>matched<sp/>examples</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DRes<sp/>{<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ModuleRule;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BackendRule;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Observable;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/>///<sp/>Type<sp/>redefinition<sp/>to<sp/>get<sp/>around<sp/>icc<sp/>compiler<sp/>bugs.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="85" refid="structGambit_1_1variadic__ptr" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr</ref><sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TYPE(*type)(ARGS...,<sp/>...);<sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/>///<sp/>Forward<sp/>declare<sp/>helper<sp/>friend<sp/>functions</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">FunctorHelp<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>check_for_shutdown_signal(module_functor_common&amp;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>emergency_shutdown_begun();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>entering_multithreaded_region(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>leaving_multithreaded_region(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/>///<sp/>Enumeration<sp/>for<sp/>the<sp/>status<sp/>of<sp/>a<sp/>given<sp/>functor.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/>///<sp/>Note<sp/>that<sp/>the<sp/>discriminant<sp/>has<sp/>custom<sp/>values:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>negative<sp/>value<sp/>signals<sp/>that<sp/>the<sp/>functor<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Possible<sp/>values<sp/>are:</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-6<sp/>=<sp/>required<sp/>external<sp/>tool<sp/>absent<sp/>(pybind11)</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-5<sp/>=<sp/>required<sp/>external<sp/>tool<sp/>absent<sp/>(Mathematica)</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-4<sp/>=<sp/>required<sp/>backend<sp/>absent<sp/>(backend<sp/>ini<sp/>functions)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3<sp/>=<sp/>required<sp/>classes<sp/>absent</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2<sp/>=<sp/>function<sp/>absent</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>=<sp/>origin<sp/>absent</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/>///</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>positive<sp/>value<sp/>signals<sp/>that<sp/>the<sp/>functor<sp/>can<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(as<sp/>long<sp/>as<sp/>the<sp/>functor<sp/>is<sp/>allowed<sp/>the<sp/>for<sp/>the<sp/>models<sp/>in<sp/>the<sp/>scan)</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Possible<sp/>values<sp/>are</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>=<sp/>model<sp/>incompatibility<sp/>(default)</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>=<sp/>available</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>=<sp/>active</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>///</highlight></codeline>
<codeline lineno="114" refid="namespaceGambit_1a8067fd17ab759b8785141fe65714cad4" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a8067fd17ab759b8785141fe65714cad4" kindref="member">FunctorStatus</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Pybind_missing<sp/>=<sp/>-6,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Mathematica_missing<sp/>=<sp/>-5,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Backend_missing<sp/>=<sp/>-4,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>Classes_missing<sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>Function_missing<sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>Origin_missing<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>Model_incompatible<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>Available<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>Active<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>========================<sp/>Base<sp/>Functor<sp/>=====================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>///<sp/>Function<sp/>wrapper<sp/>(functor)<sp/>base<sp/>class</highlight></codeline>
<codeline lineno="130" refid="classGambit_1_1functor" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1functor" kindref="compound">functor</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1functor_1a970d23b026a50dd8b029795a004b4183" kindref="member">functor</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="139" refid="classGambit_1_1functor_1a107e83b861fcc192e776352b6fe3719f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a107e83b861fcc192e776352b6fe3719f" kindref="member">~functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Virtual<sp/>calculate();<sp/>needs<sp/>to<sp/>be<sp/>redefined<sp/>in<sp/>daughters.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ad4511b7324e416ec8a881bc2d3d7870e" kindref="member">calculate</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>may<sp/>be<sp/>safer<sp/>to<sp/>have<sp/>some<sp/>of<sp/>the<sp/>following<sp/>things<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>to<sp/>the<sp/>likelihood<sp/>wrapper<sp/>class<sp/>and/or<sp/>dependency<sp/>resolver,<sp/>i.e.<sp/>so<sp/>they<sp/>cannot<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>within<sp/>module<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Interfaces<sp/>for<sp/>runtime<sp/>optimization</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Need<sp/>to<sp/>be<sp/>implemented<sp/>by<sp/>daughters</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ac79cd5e35a61931feee5c00e5eafec3b" kindref="member">getRuntimeAverage</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getInvalidationRate();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFadeRate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notifyOfInvalidation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Reset-then-recalculate<sp/>method</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a3fa95b5cde845f17d17fc40fa8e205e5" kindref="member">reset_and_calculate</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>status</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ad0a844f4f798a0bcd3dfc1486d600a22" kindref="member">setStatus</ref>(<ref refid="namespaceGambit_1a8067fd17ab759b8785141fe65714cad4" kindref="member">FunctorStatus</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>inUse<sp/>flag<sp/>(must<sp/>be<sp/>overridden<sp/>in<sp/>derived<sp/>class<sp/>to<sp/>have<sp/>any<sp/>effect).</highlight></codeline>
<codeline lineno="165" refid="classGambit_1_1functor_1af005b2c5a8673df8402c10b7cdf78082" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1af005b2c5a8673df8402c10b7cdf78082" kindref="member">setInUse</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">){};</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>purpose<sp/>(relevant<sp/>only<sp/>for<sp/>next-to-output<sp/>functors)</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a505e1eec8cb10fab9a310cd07ddaa7b2" kindref="member">setPurpose</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>vertex<sp/>ID<sp/>(used<sp/>in<sp/>printer<sp/>system)</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a662c46ed6b31a1525a983c9cf7ebdf2b" kindref="member">setVertexID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>ID<sp/>for<sp/>timing<sp/>&apos;vertex&apos;<sp/>(used<sp/>in<sp/>printer<sp/>system)</highlight></codeline>
<codeline lineno="171"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1aa3672cd13d12ba53572d7b40bb74121e" kindref="member">setTimingVertexID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>name</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1aaea7be169ef23d9221b4f85bc52eacb4" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>reported<sp/>capability</highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1abbad0238d51adf088d97fe4376586890" kindref="member">capability</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>reported<sp/>return<sp/>type</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a913d44680b347e3e9261601b3bdb6f80" kindref="member">type</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>origin<sp/>(module<sp/>or<sp/>backend<sp/>name)</highlight></codeline>
<codeline lineno="179"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a150f27ecb8a2eb9c3739a809dc5b7c83" kindref="member">origin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>version<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>origin<sp/>(module<sp/>or<sp/>backend)</highlight></codeline>
<codeline lineno="181"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a876de7e3fb4b6611e0a90a24ec889aed" kindref="member">version</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>&apos;safe&apos;<sp/>incarnation<sp/>of<sp/>the<sp/>version<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>origin<sp/>(module<sp/>or<sp/>backend)</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a973dd85d7e1f3b57c3eb98030a8cf237" kindref="member">safe_version</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>functors<sp/>current<sp/>status</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a8067fd17ab759b8785141fe65714cad4" kindref="member">FunctorStatus</ref><sp/><ref refid="classGambit_1_1functor_1a49fc91e71781ad1decd9aafab90ad5e9" kindref="member">status</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Checks<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>available<sp/>(or<sp/>even<sp/>already<sp/>activated)</highlight></codeline>
<codeline lineno="188"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a5a07534cd7461b7d72155fa4e6ab606a" kindref="member">isAvailable</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Checks<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>active</highlight></codeline>
<codeline lineno="190"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a49e6347e8fce613ffbe7b5d4f001d0f9" kindref="member">isActive</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Checks<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>disabled<sp/>(discriminant<sp/>is<sp/>negative)</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a4b1251d4f9b754cf751ba869d3d53b98" kindref="member">isDisabled</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Checks<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>enabled<sp/>(discriminant<sp/>is<sp/>non<sp/>negative)</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a97d906410138eaff615b937785c0a144" kindref="member">isEnabled</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/><sp/>overall<sp/>quantity<sp/>provided<sp/>by<sp/>the<sp/>wrapped<sp/>function<sp/>(capability-type<sp/>pair)</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref><sp/><ref refid="classGambit_1_1functor_1a7be700dee4f9d9cc5a9efaa0ff2cbab0" kindref="member">quantity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>purpose<sp/>(relevant<sp/>for<sp/>output<sp/>nodes,<sp/>aka<sp/>helper<sp/>structures<sp/>for<sp/>the<sp/>dep.<sp/>resolution)</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1aec5300fbdb253cd9a09edffbfdafb526" kindref="member">purpose</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>citation<sp/>key</highlight></codeline>
<codeline lineno="201"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1ad1763580d476b082690ddebfd877e98b" kindref="member">citationKey</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>vertex<sp/>ID</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a94892ac8fa2e37f15cab798bbd189bcb" kindref="member">vertexID</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>timing<sp/>vertex<sp/>ID</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ad33185ce2c0ff77e0e14e4606d8efa1a" kindref="member">timingVertexID</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>string<sp/>label</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1ad058829b78226cf3b0dcb310a4668256" kindref="member">label</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>printer<sp/>timing<sp/>label</highlight></codeline>
<codeline lineno="209"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1afec52bd9d7b3fb3a83cece403d48626b" kindref="member">timingLabel</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>indicating<sp/>if<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>result<sp/>should<sp/>to<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a9c2a14819589380ff81cc3b1b2a9d78a" kindref="member">requiresPrinting</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>indicating<sp/>if<sp/>the<sp/>timing<sp/>data<sp/>for<sp/>this<sp/>function&apos;s<sp/>execution<sp/>should<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a5d1ae4ff6f5e0be7e16fb15938d9387f" kindref="member">requiresTimingPrinting</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>indicating<sp/>if<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>result<sp/>should<sp/>to<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="217"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ae47ce614bb3ebb36fb24a60a115de3d2" kindref="member">setPrintRequirement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>indicating<sp/>if<sp/>the<sp/>timing<sp/>data<sp/>for<sp/>this<sp/>function&apos;s<sp/>execution<sp/>should<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ade7117c926fd3e16594a8a38aa41479f" kindref="member">setTimingPrintRequirement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>ordered<sp/>list<sp/>of<sp/>pointers<sp/>to<sp/>other<sp/>functors<sp/>that<sp/>should<sp/>run<sp/>nested<sp/>in<sp/>a<sp/>loop<sp/>managed<sp/>by<sp/>this<sp/>one</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ab3dbaa4eb0d598e0990ff8e6ac959dc7" kindref="member">setNestedList</ref><sp/>(std::vector&lt;functor*&gt;&amp;);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>iteration<sp/>number<sp/>in<sp/>a<sp/>loop<sp/>in<sp/>which<sp/>this<sp/>functor<sp/>runs</highlight></codeline>
<codeline lineno="226"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a80c9104d6d5d7a7b8af078f50b06c5f4" kindref="member">setIteration</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>whether<sp/>this<sp/>is<sp/>permitted<sp/>to<sp/>be<sp/>a<sp/>manager<sp/>functor</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ac271e5cc6323f96fbd9aeb3ba8ba3bab" kindref="member">canBeLoopManager</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>whether<sp/>this<sp/>functor<sp/>needs<sp/>a<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1af2c05fc8dff6a83763b05c27de3ce204" kindref="member">needsLoopManager</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>required<sp/>capability<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a8605c698d5d7e55b8a2bd47af9c466cb" kindref="member">loopManagerCapability</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>required<sp/>type<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1ac9ce89a8ae79c6307e29596549d8ee41" kindref="member">loopManagerType</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>name<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>assigned<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="238"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a259892482655c006e7f278bbdcb837a1" kindref="member">loopManagerName</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>module<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>assigned<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a3cc77fbfc1442a29d6453da3add9acf3" kindref="member">loopManagerOrigin</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Tell<sp/>the<sp/>functor<sp/>that<sp/>the<sp/>loop<sp/>it<sp/>manages<sp/>should<sp/>break<sp/>now.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a0d6a72d8be5c5225840ca3aee362cf15" kindref="member">breakLoop</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>currently<sp/>activated<sp/>dependencies</highlight></codeline>
<codeline lineno="246"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1ac518c00bed9dd3d570e0026439b2dfc2" kindref="member">dependencies</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backends<sp/>that<sp/>require<sp/>class<sp/>loading</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1ab4b98ae7da7e5e1e0c1548de23c8d34c" kindref="member">backendclassloading</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend<sp/>requirement<sp/>groups</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1functor_1a4b4ee671e729c3cf346d32c152e09451" kindref="member">backendgroups</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>all<sp/>backend<sp/>requirements</highlight></codeline>
<codeline lineno="252"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1afe9c4e74bd8b8a44d155a6e40a972d4c" kindref="member">backendreqs</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend<sp/>requirements<sp/>from<sp/>a<sp/>specific<sp/>group</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1afe9c4e74bd8b8a44d155a6e40a972d4c" kindref="member">backendreqs</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>permitted<sp/>backends</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a1554bbdfe8007dc433aa15a4c6ba866a" kindref="member">backendspermitted</ref>(<ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>tags<sp/>associated<sp/>with<sp/>backend<sp/>requirements</highlight></codeline>
<codeline lineno="258"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1functor_1a835e69ea8a95282d6381c2a5730b7d2d" kindref="member">backendreq_tags</ref>(<ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend<sp/>requirements<sp/>that<sp/>must<sp/>be<sp/>resolved<sp/>from<sp/>the<sp/>same<sp/>backend</highlight></codeline>
<codeline lineno="260"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a9b780439992b245c1942c01151052942" kindref="member">forcematchingbackend</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend-specific<sp/>conditional<sp/>dependencies<sp/>(4-string<sp/>version)</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a05f0d4edd01eedd5b66d344977ec11d9" kindref="member">backend_conditional_dependencies</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>backend-specific<sp/>conditional<sp/>dependencies<sp/>(3-string<sp/>version)</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a05f0d4edd01eedd5b66d344977ec11d9" kindref="member">backend_conditional_dependencies</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>req,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a913d44680b347e3e9261601b3bdb6f80" kindref="member">type</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>be);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>backend-specific<sp/>conditional<sp/>dependencies<sp/>(backend<sp/>functor<sp/>pointer<sp/>version)</highlight></codeline>
<codeline lineno="269"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a05f0d4edd01eedd5b66d344977ec11d9" kindref="member">backend_conditional_dependencies</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>dependencies<sp/>(matches<sp/>also<sp/>on<sp/>parents<sp/>and<sp/>friends)</highlight></codeline>
<codeline lineno="272"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a3475119ea4e13a5c8475dce378386c09" kindref="member">model_conditional_dependencies</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>dependencies<sp/>(matches<sp/>on<sp/>the<sp/>exact<sp/>model)</highlight></codeline>
<codeline lineno="275"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a847a010db8deb7c14526877a6a3b338b" kindref="member">model_conditional_dependencies_exact</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>backend<sp/>requirements<sp/>(matches<sp/>also<sp/>on<sp/>parents<sp/>and<sp/>friends)</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a9c5eaf7737cc297e843338349862f414" kindref="member">model_conditional_backend_reqs</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>backend<sp/>requirements<sp/>(matches<sp/>on<sp/>the<sp/>exact<sp/>model)</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a8e228bf6c86903c1faf7c37287dd15eb" kindref="member">model_conditional_backend_reqs_exact</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Resolve<sp/>a<sp/>dependency<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>another<sp/>functor<sp/>object</highlight></codeline>
<codeline lineno="284"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1aec1193154572515f633a20dbeb404482" kindref="member">resolveDependency</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>this<sp/>functor&apos;s<sp/>loop<sp/>manager<sp/>(if<sp/>it<sp/>has<sp/>one)</highlight></codeline>
<codeline lineno="287"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1acd3f9e9d487ab066a0741a12d2e91b08" kindref="member">resolveLoopManager</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Resolve<sp/>a<sp/>backend<sp/>requirement<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>another<sp/>functor<sp/>object</highlight></codeline>
<codeline lineno="290"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a122745e3d3c9d9521b95e7a665d43abf" kindref="member">resolveBackendReq</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>that<sp/>a<sp/>certain<sp/>model<sp/>is<sp/>being<sp/>scanned,<sp/>so<sp/>that<sp/>it<sp/>can<sp/>activate<sp/>itself<sp/>accordingly.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a92362795019e710f079b9613be971e4f" kindref="member">notifyOfModel</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>that<sp/>it<sp/>is<sp/>being<sp/>used<sp/>to<sp/>fill<sp/>a<sp/>dependency<sp/>of<sp/>another<sp/>functor</highlight></codeline>
<codeline lineno="296"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ae93379f2a736243cff0cdf79d0c2cb8c" kindref="member">notifyOfDependee</ref>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Indicate<sp/>to<sp/>the<sp/>functor<sp/>which<sp/>backends<sp/>are<sp/>actually<sp/>loaded<sp/>and<sp/>working</highlight></codeline>
<codeline lineno="299"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a55331421e9520337170079c18eaa88c7" kindref="member">notifyOfBackends</ref>(std::map&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/>std::set&lt;str&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>NO_PRINTERS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Printer<sp/>function</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a9ad7a0b7c132a040c5801b85c139f241" kindref="member">print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*<sp/>printer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_num);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Printer<sp/>function<sp/>(no-thread-index<sp/>short-circuit)</highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a9ad7a0b7c132a040c5801b85c139f241" kindref="member">print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*<sp/>printer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointID);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>the<sp/>previously<sp/>saved<sp/>exception<sp/>generated<sp/>when<sp/>this<sp/>functor<sp/>invalidated<sp/>the<sp/>current<sp/>point<sp/>in<sp/>model<sp/>space.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1invalid__point__exception" kindref="compound">invalid_point_exception</ref>*<sp/><ref refid="classGambit_1_1functor_1af8cb02a4a7aba6a4563bb5c358059f6a" kindref="member">retrieve_invalid_point_exception</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>about<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>options<sp/>class<sp/>that<sp/>contains</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>information<sp/>from<sp/>its<sp/>corresponding<sp/>ini-file<sp/>entry<sp/>in<sp/>the<sp/>auxiliaries<sp/>or</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>observables<sp/>section.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a52331ed1165075f4f5c8060cf4d95f03" kindref="member">notifyOfIniOptions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>&amp;);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>an<sp/>option<sp/>for<sp/>the<sp/>functor<sp/>directly<sp/>(for<sp/>use<sp/>in<sp/>standalone<sp/>executables).</highlight></codeline>
<codeline lineno="318"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="319" refid="classGambit_1_1functor_1ab42c0faae1334f0e4aec38fa6dc2c3b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ab42c0faae1334f0e4aec38fa6dc2c3b2" kindref="member">setOption</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>val)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1functor_1a7cc789adf4e03cd04865f3c85d0ec42b" kindref="member">myOptions</ref>.<ref refid="classGambit_1_1Options_1a3f999f2ed0b5fb0a6f2ed008dd01865a" kindref="member">setValue</ref>&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,TYPE&gt;(key,<sp/>val);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>the<sp/>options<sp/>that<sp/>this<sp/>functor<sp/>is<sp/>supposed<sp/>to<sp/>run<sp/>with<sp/>(e.g.<sp/>from<sp/>the<sp/>ini<sp/>file).</highlight></codeline>
<codeline lineno="325"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;Options&gt;</ref><sp/><ref refid="classGambit_1_1functor_1aec86679016ed6a9a1ad2f20c1e3383e9" kindref="member">getOptions</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>about<sp/>a<sp/>string<sp/>in<sp/>YAML<sp/>that<sp/>contains<sp/>the<sp/>sub-capability<sp/>information<sp/>(for<sp/>use<sp/>in<sp/>standalones)</highlight></codeline>
<codeline lineno="328"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a3ed1caba9a4a281ff20d72e4e8354002" kindref="member">notifyOfSubCaps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>about<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>options<sp/>class<sp/>that<sp/>contains<sp/>sub-capability<sp/>information</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a3ed1caba9a4a281ff20d72e4e8354002" kindref="member">notifyOfSubCaps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>&amp;);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>a<sp/>sub-capability<sp/>(subcap)for<sp/>the<sp/>functor<sp/>directly<sp/>(for<sp/>use<sp/>in<sp/>standalone<sp/>executables).</highlight></codeline>
<codeline lineno="334"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="335" refid="classGambit_1_1functor_1a0372aeee11961e5b97ff9d0370375826" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a0372aeee11961e5b97ff9d0370375826" kindref="member">setSubCap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>val)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1functor_1a91801bf8dad62e88dcd1c0d677543d03" kindref="member">mySubCaps</ref>.<ref refid="classGambit_1_1Options_1a3f999f2ed0b5fb0a6f2ed008dd01865a" kindref="member">setValue</ref>&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,TYPE&gt;(key,<sp/>val);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>the<sp/>subcaps<sp/>that<sp/>this<sp/>functor<sp/>realises<sp/>it<sp/>is<sp/>supposed<sp/>to<sp/>facilitate<sp/>downstream<sp/>calculation<sp/>of.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;Options&gt;</ref><sp/><ref refid="classGambit_1_1functor_1a6842998c58e68c84b6dcc54fb5094c5c" kindref="member">getSubCaps</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>the<sp/>vector<sp/>of<sp/>all<sp/>capability,type<sp/>pairs<sp/>of<sp/>functors<sp/>arranged<sp/>downstream<sp/>of<sp/>this<sp/>one<sp/>in<sp/>the<sp/>dependency<sp/>tree.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;std::set&lt;sspair&gt;</ref>&gt;<sp/><ref refid="classGambit_1_1functor_1aee7a9c98be2845c50e6953fdaf1195ff" kindref="member">getDependees</ref>();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>allowed<sp/>models</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;str&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1a65bedbb37de28490aa88b0e837fe3fa5" kindref="member">getAllowedModels</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>conditional<sp/>models</highlight></codeline>
<codeline lineno="350"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;str&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1aa6f835bd61b27bd69c5e40b6d8dcf16a" kindref="member">getConditionalModels</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>map<sp/>of<sp/>model<sp/>groups<sp/>and<sp/>the<sp/>set<sp/>of<sp/>models<sp/>in<sp/>each<sp/>group</highlight></codeline>
<codeline lineno="353"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;str,<sp/>std::set&lt;str&gt;&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1a72928a3e500a24e805d9e8f1a0eaedf5" kindref="member">getModelGroups</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>allowed<sp/>to<sp/>be<sp/>used<sp/>with<sp/>all<sp/>models</highlight></codeline>
<codeline lineno="356"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a5f45ff02d2e4209dfb81bcb9ace3fb74" kindref="member">allModelsAllowed</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>always<sp/>allowed<sp/>(either<sp/>explicitly<sp/>or<sp/>implicitly)<sp/>to<sp/>be<sp/>used<sp/>with<sp/>a<sp/>given<sp/>model</highlight></codeline>
<codeline lineno="359"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a961f601d1b7072be456f16a74a973a59" kindref="member">modelAllowed</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>explictly<sp/>always<sp/>allowed<sp/>to<sp/>be<sp/>used<sp/>with<sp/>a<sp/>given<sp/>model</highlight></codeline>
<codeline lineno="362"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ac089db4d75e7394e11530727bbade14e" kindref="member">modelExplicitlyAllowed</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>model<sp/>to<sp/>the<sp/>internal<sp/>list<sp/>of<sp/>models<sp/>for<sp/>which<sp/>this<sp/>functor<sp/>is<sp/>allowed<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1aa913b1602127b1115d211ad4dcafadfb" kindref="member">setAllowedModel</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>whether<sp/>the<sp/>functor<sp/>is<sp/>allowed<sp/>(either<sp/>explicitly<sp/>or<sp/>implicitly)<sp/>to<sp/>be<sp/>used<sp/>with<sp/>a<sp/>given<sp/>combination<sp/>of<sp/>models</highlight></codeline>
<codeline lineno="368"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1acfa856966c8346437fb99a746970336e" kindref="member">modelComboAllowed</ref>(std::set&lt;str&gt;<sp/>combo);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>whether<sp/>the<sp/>functor<sp/>has<sp/>been<sp/>explictly<sp/>allowed<sp/>to<sp/>be<sp/>used<sp/>with<sp/>a<sp/>given<sp/>combination<sp/>of<sp/>models</highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a828031c874c79018d35b710379cd32d2" kindref="member">modelComboExplicitlyAllowed</ref>(std::set&lt;str&gt;<sp/>combo);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>model<sp/>group<sp/>definition<sp/>to<sp/>the<sp/>internal<sp/>list<sp/>of<sp/>model<sp/>groups.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a36db93b4e79612e57f32fb807d427773" kindref="member">setModelGroup</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>group,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>contents);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>combination<sp/>of<sp/>model<sp/>groups<sp/>to<sp/>the<sp/>internal<sp/>list<sp/>of<sp/>combinations<sp/>for<sp/>which<sp/>this<sp/>functor<sp/>is<sp/>allowed<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1abd0c5a0c01fe6b8188c4c12c136b3ebb" kindref="member">setAllowedModelGroupCombo</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>groups);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>an<sp/>observable<sp/>to<sp/>the<sp/>set<sp/>of<sp/>those<sp/>that<sp/>this<sp/>functor<sp/>matches.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1ae5a94c0f623a43c1d365410007f8733f" kindref="member">addMatchedObservable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1DRes_1_1Observable" kindref="compound">DRes::Observable</ref>*);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>the<sp/>set<sp/>of<sp/>observables<sp/>that<sp/>this<sp/>functor<sp/>matches.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;const<sp/>DRes::Observable*&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1ab82a6bde952c53691a6d47db5b87c19d" kindref="member">getMatchedObservables</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>module<sp/>rule<sp/>to<sp/>the<sp/>set<sp/>of<sp/>those<sp/>against<sp/>which<sp/>this<sp/>functor<sp/>has<sp/>been<sp/>tested<sp/>and<sp/>found<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a90bebd6de9f21c23975b45bb992a6f4e" kindref="member">addMatchedModuleRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1DRes_1_1ModuleRule" kindref="compound">DRes::ModuleRule</ref>*);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>backend<sp/>rule<sp/>to<sp/>the<sp/>set<sp/>of<sp/>those<sp/>against<sp/>which<sp/>this<sp/>functor<sp/>has<sp/>been<sp/>tested<sp/>and<sp/>found<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1afc32933871ee7c0853905a723af8aa64" kindref="member">addMatchedBackendRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1DRes_1_1BackendRule" kindref="compound">DRes::BackendRule</ref>*);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>the<sp/>set<sp/>of<sp/>module<sp/>rules<sp/>against<sp/>which<sp/>this<sp/>functor<sp/>has<sp/>been<sp/>tested<sp/>and<sp/>found<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;const<sp/>DRes::ModuleRule*&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1a8bca83a0f6178d7f00c77093da993267" kindref="member">getMatchedModuleRules</ref>();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>the<sp/>set<sp/>of<sp/>backend<sp/>rules<sp/>against<sp/>which<sp/>this<sp/>functor<sp/>has<sp/>been<sp/>tested<sp/>and<sp/>found<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;const<sp/>DRes::BackendRule*&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1a32ca3a4e47fdd80ebd3d5d699e5afa38" kindref="member">getMatchedBackendRules</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>matched<sp/>rules<sp/>by<sp/>type.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RuleT&gt;</highlight></codeline>
<codeline lineno="399" refid="classGambit_1_1functor_1a377c89c0f5f82b21fa592e4df17dac8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;RuleT*&gt;&amp;<sp/><ref refid="classGambit_1_1functor_1a377c89c0f5f82b21fa592e4df17dac8e" kindref="member">getMatchedRules</ref>();<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>the<sp/>function<sp/>name.</highlight></codeline>
<codeline lineno="404" refid="classGambit_1_1functor_1ad9345bebb312d0352f8576d57b326759" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1ad9345bebb312d0352f8576d57b326759" kindref="member">myName</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>exactly<sp/>what<sp/>the<sp/>function<sp/>calculates.</highlight></codeline>
<codeline lineno="406" refid="classGambit_1_1functor_1ab8e599294e315beb4df8154b6e7ba499" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1ab8e599294e315beb4df8154b6e7ba499" kindref="member">myCapability</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>the<sp/>type<sp/>of<sp/>what<sp/>the<sp/>function<sp/>calculates.</highlight></codeline>
<codeline lineno="408" refid="classGambit_1_1functor_1a799a78be10d270a75bf1c3881178daab" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a799a78be10d270a75bf1c3881178daab" kindref="member">myType</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>the<sp/>name<sp/>of<sp/>the<sp/>module<sp/>or<sp/>backend<sp/>to<sp/>which<sp/>the<sp/>function<sp/>belongs.</highlight></codeline>
<codeline lineno="410" refid="classGambit_1_1functor_1a0a323ed83c7025b6d789e7fac64addc7" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a0a323ed83c7025b6d789e7fac64addc7" kindref="member">myOrigin</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Purpose<sp/>of<sp/>the<sp/>function<sp/>(relevant<sp/>for<sp/>output<sp/>and<sp/>next-to-output<sp/>functors)</highlight></codeline>
<codeline lineno="412" refid="classGambit_1_1functor_1ac061cc96139bf564778406ecc67cc0a9" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1ac061cc96139bf564778406ecc67cc0a9" kindref="member">myPurpose</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Citation<sp/>key:<sp/>BibTex<sp/>key<sp/>of<sp/>the<sp/>reference.</highlight></codeline>
<codeline lineno="414" refid="classGambit_1_1functor_1af7284750b2816b9c1601a5e4637a503c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1af7284750b2816b9c1601a5e4637a503c" kindref="member">myCitationKey</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Bound<sp/>model<sp/>functor<sp/>claw,<sp/>for<sp/>checking<sp/>relationships<sp/>between<sp/>models</highlight></codeline>
<codeline lineno="416" refid="classGambit_1_1functor_1a7f185782b166c86c8c1488e3e28966d2" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>*<sp/><ref refid="classGambit_1_1functor_1a7f185782b166c86c8c1488e3e28966d2" kindref="member">myClaw</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>String<sp/>label,<sp/>used<sp/>to<sp/>label<sp/>functor<sp/>results<sp/>for<sp/>printer<sp/>system</highlight></codeline>
<codeline lineno="419" refid="classGambit_1_1functor_1a55aa9ef92692ece18544675da08ef49e" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a55aa9ef92692ece18544675da08ef49e" kindref="member">myLabel</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>String<sp/>label,<sp/>used<sp/>to<sp/>label<sp/>functor<sp/>timing<sp/>data<sp/>for<sp/>printer<sp/>system</highlight></codeline>
<codeline lineno="421" refid="classGambit_1_1functor_1a8ce50c7d7fcf5afa751b258895dd6dad" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a8ce50c7d7fcf5afa751b258895dd6dad" kindref="member">myTimingLabel</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Status:</highlight></codeline>
<codeline lineno="423" refid="classGambit_1_1functor_1ad85d09306cafaf0853f27d0e92698102" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a8067fd17ab759b8785141fe65714cad4" kindref="member">FunctorStatus</ref><sp/><ref refid="classGambit_1_1functor_1ad85d09306cafaf0853f27d0e92698102" kindref="member">myStatus</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>the<sp/>vertex<sp/>ID<sp/>number<sp/>used<sp/>by<sp/>the<sp/>printer<sp/>system<sp/>to<sp/>identify<sp/>functors</highlight></codeline>
<codeline lineno="426" refid="classGambit_1_1functor_1a004751aadc8af70cdb28fa25ba661f76" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a004751aadc8af70cdb28fa25ba661f76" kindref="member">myVertexID</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>ID<sp/>assigned<sp/>by<sp/>printers<sp/>to<sp/>the<sp/>timing<sp/>data<sp/>output<sp/>stream</highlight></codeline>
<codeline lineno="428" refid="classGambit_1_1functor_1a9501f612101222191ac4eb41c5ef91af" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a9501f612101222191ac4eb41c5ef91af" kindref="member">myTimingVertexID</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Debug<sp/>flag</highlight></codeline>
<codeline lineno="430" refid="classGambit_1_1functor_1a3d9cf03cce51e7e134bbe1d7dcf37541" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a3d9cf03cce51e7e134bbe1d7dcf37541" kindref="member">verbose</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>function<sp/>options,<sp/>as<sp/>a<sp/>YAML<sp/>node</highlight></codeline>
<codeline lineno="433" refid="classGambit_1_1functor_1a7cc789adf4e03cd04865f3c85d0ec42b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref><sp/><ref refid="classGambit_1_1functor_1a7cc789adf4e03cd04865f3c85d0ec42b" kindref="member">myOptions</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>function<sp/>sub-capabilities,<sp/>as<sp/>a<sp/>YAML<sp/>node</highlight></codeline>
<codeline lineno="436" refid="classGambit_1_1functor_1a91801bf8dad62e88dcd1c0d677543d03" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref><sp/><ref refid="classGambit_1_1functor_1a91801bf8dad62e88dcd1c0d677543d03" kindref="member">mySubCaps</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>List<sp/>of<sp/>all<sp/>capability,type<sp/>pairs<sp/>of<sp/>functors<sp/>downstream<sp/>of<sp/>this<sp/>one<sp/>in<sp/>the<sp/>dependency<sp/>tree</highlight></codeline>
<codeline lineno="439" refid="classGambit_1_1functor_1a22acc6454f7896c3d4dcb497e62f2e65" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1functor_1a22acc6454f7896c3d4dcb497e62f2e65" kindref="member">myDependees</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>List<sp/>of<sp/>allowed<sp/>models</highlight></codeline>
<codeline lineno="442" refid="classGambit_1_1functor_1ac70ec922e8a3f04f6878ffafc231e379" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1functor_1ac70ec922e8a3f04f6878ffafc231e379" kindref="member">allowedModels</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>List<sp/>of<sp/>conditional<sp/>models</highlight></codeline>
<codeline lineno="445" refid="classGambit_1_1functor_1ad3d0ad0ba4d4baadf3e96c0a812a79ea" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1functor_1ad3d0ad0ba4d4baadf3e96c0a812a79ea" kindref="member">conditionalModels</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>List<sp/>of<sp/>allowed<sp/>model<sp/>group<sp/>combinations</highlight></codeline>
<codeline lineno="448" refid="classGambit_1_1functor_1a4f73fb1475364081fa23944b7c95c7b3" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;std::set&lt;str&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1functor_1a4f73fb1475364081fa23944b7c95c7b3" kindref="member">allowedGroupCombos</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>model<sp/>group<sp/>names<sp/>to<sp/>group<sp/>contents</highlight></codeline>
<codeline lineno="451" refid="classGambit_1_1functor_1a6149708cf859ce1290dd447f16291e8b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::set&lt;str&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1functor_1a6149708cf859ce1290dd447f16291e8b" kindref="member">modelGroups</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>The<sp/>set<sp/>of<sp/>observables<sp/>that<sp/>this<sp/>functor<sp/>matches.</highlight></codeline>
<codeline lineno="454" refid="classGambit_1_1functor_1a86dda52996a4f9ecab49e8a6b0e82749" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;const<sp/>DRes::Observable*&gt;<sp/><ref refid="classGambit_1_1functor_1a86dda52996a4f9ecab49e8a6b0e82749" kindref="member">matched_observables</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>of<sp/>module<sp/>rules<sp/>against<sp/>which<sp/>this<sp/>functor<sp/>has<sp/>been<sp/>tested<sp/>and<sp/>found<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="457" refid="classGambit_1_1functor_1a1340c893774365853abd274928f2761c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;const<sp/>DRes::ModuleRule*&gt;<sp/><ref refid="classGambit_1_1functor_1a1340c893774365853abd274928f2761c" kindref="member">matched_module_rules</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>of<sp/>backend<sp/>rules<sp/>against<sp/>which<sp/>this<sp/>functor<sp/>has<sp/>been<sp/>tested<sp/>and<sp/>found<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="460" refid="classGambit_1_1functor_1a4da4a96f26fdbf9ec93047af1f34fd5a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;const<sp/>DRes::BackendRule*&gt;<sp/><ref refid="classGambit_1_1functor_1a4da4a96f26fdbf9ec93047af1f34fd5a" kindref="member">matched_backend_rules</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Attempt<sp/>to<sp/>retrieve<sp/>a<sp/>dependency<sp/>or<sp/>model<sp/>parameter<sp/>that<sp/>has<sp/>not<sp/>been<sp/>resolved</highlight></codeline>
<codeline lineno="463"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a399d73c9f799c78274ad8715eec84d7b" kindref="member">failBigTime</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>method);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>if<sp/>there<sp/>is<sp/>a<sp/>model<sp/>in<sp/>the<sp/>functor&apos;s<sp/>allowedModels<sp/>list<sp/>as<sp/>which<sp/>this<sp/>model<sp/>can<sp/>be<sp/>interpreted</highlight></codeline>
<codeline lineno="466"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a782b9e5700d5cb8035abd400447c656c" kindref="member">allowed_parent_or_friend_exists</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>that<sp/>a<sp/>model<sp/>is<sp/>actually<sp/>part<sp/>of<sp/>a<sp/>combination<sp/>that<sp/>is<sp/>allowed<sp/>to<sp/>be<sp/>used<sp/>with<sp/>this<sp/>functor.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a1f13657a8b3235a6645f9f5f65096972" kindref="member">in_allowed_combo</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Test<sp/>whether<sp/>any<sp/>of<sp/>the<sp/>entries<sp/>in<sp/>a<sp/>given<sp/>model<sp/>group<sp/>is<sp/>a<sp/>valid<sp/>interpretation<sp/>of<sp/>any<sp/>members<sp/>in<sp/>a<sp/>given<sp/>combination</highlight></codeline>
<codeline lineno="472"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a86a00771d51c2f47765de71a8eb47de9" kindref="member">contains_anything_interpretable_as_member_of</ref>(std::set&lt;str&gt;<sp/>combo,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>group);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Work<sp/>out<sp/>whether<sp/>a<sp/>given<sp/>combination<sp/>of<sp/>models<sp/>and<sp/>a<sp/>model<sp/>group<sp/>have<sp/>any<sp/>elements<sp/>in<sp/>common</highlight></codeline>
<codeline lineno="475"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor_1a160a2a34aa257a5683bd9d236d05499e" kindref="member">has_common_elements</ref>(std::set&lt;str&gt;<sp/>combo,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>group);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Try<sp/>to<sp/>find<sp/>a<sp/>parent<sp/>or<sp/>friend<sp/>model<sp/>in<sp/>some<sp/>user-supplied<sp/>map<sp/>from<sp/>models<sp/>to<sp/>sspair<sp/>vectors</highlight></codeline>
<codeline lineno="478"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a1102b665dfdd1e1c199bdf617ab43176" kindref="member">find_friend_or_parent_model_in_map</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model,<sp/>std::map&lt;<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/>std::set&lt;sspair&gt;<sp/>&gt;<sp/>karta);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Reset<sp/>functor<sp/>for<sp/>one<sp/>thread<sp/>only</highlight></codeline>
<codeline lineno="481"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>========================<sp/>Module<sp/>Functors<sp/>=====================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/>///<sp/>Functor<sp/>derived<sp/>class<sp/>for<sp/>module<sp/>functions</highlight></codeline>
<codeline lineno="489" refid="classGambit_1_1module__functor__common" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor" kindref="compound">functor</ref></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="495"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1module__functor__common_1a3f6b2f655ca81171249e9f3655825a34" kindref="member">module_functor_common</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="498"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1af7b89032cf7c7392bb9566609b699f4f" kindref="member">~module_functor_common</ref>();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>averaged<sp/>runtime</highlight></codeline>
<codeline lineno="501"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a7f4ecc772af822e6bddf9edf95ab2a5f" kindref="member">getRuntimeAverage</ref>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Reset<sp/>functor</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a4e34fc2cf2c9932a6794eb9baf554e28" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Tell<sp/>the<sp/>functor<sp/>that<sp/>it<sp/>invalidated<sp/>the<sp/>current<sp/>point<sp/>in<sp/>model<sp/>space,<sp/>pass<sp/>a<sp/>message<sp/>explaining<sp/>why,<sp/>and<sp/>throw<sp/>an<sp/>exception.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a946e0a1ad997d417dd40160a3bba603b" kindref="member">notifyOfInvalidation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>invalidation<sp/>rate</highlight></codeline>
<codeline lineno="510"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1abfa224375716da6b911f18e8cbe72ce7" kindref="member">getInvalidationRate</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>the<sp/>fade<sp/>rate</highlight></codeline>
<codeline lineno="513"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a80654414bb5bb5ae82f6fc37080dc858" kindref="member">setFadeRate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>indicating<sp/>if<sp/>the<sp/>timing<sp/>data<sp/>for<sp/>this<sp/>function&apos;s<sp/>execution<sp/>should<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="516"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ac689bbfda7429204bc0e07a547116e11" kindref="member">setTimingPrintRequirement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>indicating<sp/>if<sp/>the<sp/>timing<sp/>data<sp/>for<sp/>this<sp/>function&apos;s<sp/>execution<sp/>should<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="519"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a834e0932dcd86d0ad0a19d30a83e74cd" kindref="member">requiresTimingPrinting</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Indicate<sp/>whether<sp/>or<sp/>not<sp/>a<sp/>known<sp/>model<sp/>is<sp/>activated<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1af6cabe1d2f178ed6560ae1c87802a82f" kindref="member">getActiveModelFlag</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>a<sp/>string<sp/>indicating<sp/>which<sp/>backend<sp/>requirement<sp/>has<sp/>been<sp/>activated<sp/>for<sp/>a<sp/>given<sp/>backend<sp/>group.</highlight></codeline>
<codeline lineno="525"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;str&gt;</ref><sp/><ref refid="classGambit_1_1module__functor__common_1ae25199af41de21dcb3e20b76233156ec" kindref="member">getChosenReqFromGroup</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Execute<sp/>a<sp/>single<sp/>iteration<sp/>in<sp/>the<sp/>loop<sp/>managed<sp/>by<sp/>this<sp/>functor.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a34e131eb232d93687583788c49295a9a" kindref="member">iterate</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iteration);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialise<sp/>the<sp/>array<sp/>holding<sp/>the<sp/>current<sp/>iteration(s)<sp/>of<sp/>this<sp/>functor.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a1c814da54654e19370708d98bbe07f28" kindref="member">init_myCurrentIteration_if_NULL</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>setting<sp/>the<sp/>iteration<sp/>number<sp/>in<sp/>the<sp/>loop<sp/>in<sp/>which<sp/>this<sp/>functor<sp/>runs</highlight></codeline>
<codeline lineno="533"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1aea40fae672492b12ab0fe2cd3e270146" kindref="member">setIteration</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iteration);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>the<sp/>iteration<sp/>number<sp/>in<sp/>the<sp/>loop<sp/>in<sp/>which<sp/>this<sp/>functor<sp/>runs.</highlight></codeline>
<codeline lineno="535"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1omp__safe__ptr" kindref="compound">omp_safe_ptr&lt;long long&gt;</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a8015da108de37fd11580dbde2537a5b9" kindref="member">iterationPtr</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>specifying<sp/>whether<sp/>this<sp/>is<sp/>permitted<sp/>to<sp/>be<sp/>a<sp/>manager<sp/>functor,<sp/>which<sp/>runs<sp/>other<sp/>functors<sp/>nested<sp/>in<sp/>a<sp/>loop.</highlight></codeline>
<codeline lineno="538"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a3ea59e1326629dfbc1f31a8b2921d6d8" kindref="member">setCanBeLoopManager</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canManage);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>whether<sp/>this<sp/>is<sp/>permitted<sp/>to<sp/>be<sp/>a<sp/>manager<sp/>functor</highlight></codeline>
<codeline lineno="540"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a45ee081397264cff4fae5d90a468e15c" kindref="member">canBeLoopManager</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>specifying<sp/>the<sp/>capability<sp/>required<sp/>of<sp/>a<sp/>manager<sp/>functor,<sp/>if<sp/>it<sp/>is<sp/>to<sp/>run<sp/>this<sp/>functor<sp/>nested<sp/>in<sp/>a<sp/>loop.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1aad1288bedc0ae2a3080d66e9ac58c80e" kindref="member">setLoopManagerCapType</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>cap,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>t);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>whether<sp/>this<sp/>functor<sp/>needs<sp/>a<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="545"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a28f7ff62431404ff6d9ccb74e4d2487b" kindref="member">needsLoopManager</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>required<sp/>capability<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="547"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a76068bbae795db5b319da3b6445b9e0b" kindref="member">loopManagerCapability</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>required<sp/>type<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="549"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1module__functor__common_1af67a261a00be448fabac30d9c0c0011b" kindref="member">loopManagerType</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>name<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>assigned<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="551"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a744fa740688d36d4e460b09f189b8a1c" kindref="member">loopManagerName</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>revealing<sp/>the<sp/>module<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>assigned<sp/>loop<sp/>manager</highlight></codeline>
<codeline lineno="553"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a1b0a360cfb0cd36dbcc2999c55a39537" kindref="member">loopManagerOrigin</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Tell<sp/>the<sp/>manager<sp/>of<sp/>the<sp/>loop<sp/>in<sp/>which<sp/>this<sp/>functor<sp/>runs<sp/>that<sp/>it<sp/>is<sp/>time<sp/>to<sp/>break<sp/>the<sp/>loop.</highlight></codeline>
<codeline lineno="556"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a407bb29ab75b62c67df4f9ad8f54c6ac" kindref="member">breakLoopFromManagedFunctor</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Return<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>the<sp/>flag<sp/>indicating<sp/>that<sp/>a<sp/>loop<sp/>managed<sp/>by<sp/>this<sp/>functor<sp/>should<sp/>break<sp/>now.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;bool&gt;</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a426ba14422f4ec0437347df714aecc81" kindref="member">loopIsDone</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Provide<sp/>a<sp/>way<sp/>to<sp/>reset<sp/>the<sp/>flag<sp/>indicating<sp/>that<sp/>a<sp/>loop<sp/>managed<sp/>by<sp/>this<sp/>functor<sp/>should<sp/>break.</highlight></codeline>
<codeline lineno="560"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a305b0c7b7932b2bad7439e535263126e" kindref="member">resetLoop</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Tell<sp/>the<sp/>functor<sp/>that<sp/>the<sp/>loop<sp/>it<sp/>manages<sp/>should<sp/>break<sp/>now.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a5a6b4098cba80ad8277d6d1a362e702b" kindref="member">breakLoop</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>currently<sp/>activated<sp/>dependencies</highlight></codeline>
<codeline lineno="565"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1af4fc9e121a27ea7caf88113de68e2ed2" kindref="member">dependencies</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backends<sp/>that<sp/>require<sp/>class<sp/>loading</highlight></codeline>
<codeline lineno="567"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a4b17692c78ddabf74400feeed3db0855" kindref="member">backendclassloading</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend<sp/>requirement<sp/>groups</highlight></codeline>
<codeline lineno="569"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a341556c2227a848fcbb0a80df970e53f" kindref="member">backendgroups</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>all<sp/>backend<sp/>requirements</highlight></codeline>
<codeline lineno="571"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a367ffcfd016f5bd30123add599fdb0f7" kindref="member">backendreqs</ref>();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend<sp/>requirements<sp/>from<sp/>a<sp/>specific<sp/>group</highlight></codeline>
<codeline lineno="573"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a367ffcfd016f5bd30123add599fdb0f7" kindref="member">backendreqs</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>permitted<sp/>backends</highlight></codeline>
<codeline lineno="575"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a81378addb3df54c89586340bd2e86187" kindref="member">backendspermitted</ref>(<ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref><sp/>quant);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>tags<sp/>associated<sp/>with<sp/>backend<sp/>requirements</highlight></codeline>
<codeline lineno="577"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a3ee7d48e8177ba02bbeb96c13f513853" kindref="member">backendreq_tags</ref>(<ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend<sp/>requirements<sp/>that<sp/>must<sp/>be<sp/>resolved<sp/>from<sp/>the<sp/>same<sp/>backend</highlight></codeline>
<codeline lineno="579"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1ab1b1a8313374971f97ed8a6fde351f56" kindref="member">forcematchingbackend</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>backend-specific<sp/>conditional<sp/>dependencies<sp/>(4-string<sp/>version)</highlight></codeline>
<codeline lineno="582"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a15351dd24c1f2efd8d0556dd06741c73" kindref="member">backend_conditional_dependencies</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>req,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a913d44680b347e3e9261601b3bdb6f80" kindref="member">type</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>be,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>ver);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>backend-specific<sp/>conditional<sp/>dependencies<sp/>(3-string<sp/>version)</highlight></codeline>
<codeline lineno="585"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a15351dd24c1f2efd8d0556dd06741c73" kindref="member">backend_conditional_dependencies</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>req,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a913d44680b347e3e9261601b3bdb6f80" kindref="member">type</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>be);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>backend-specific<sp/>conditional<sp/>dependencies<sp/>(backend<sp/>functor<sp/>pointer<sp/>version)</highlight></codeline>
<codeline lineno="588"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a15351dd24c1f2efd8d0556dd06741c73" kindref="member">backend_conditional_dependencies</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*<sp/>be_functor);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>dependencies<sp/>(matches<sp/>also<sp/>on<sp/>parents<sp/>and<sp/>friends)</highlight></codeline>
<codeline lineno="591"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a27f21017f968237acd5f5ca39521e78a" kindref="member">model_conditional_dependencies</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>dependencies<sp/>(matches<sp/>on<sp/>the<sp/>exact<sp/>model)</highlight></codeline>
<codeline lineno="594"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1ad69ffef901a2e37d461d3f7c0780cfb0" kindref="member">model_conditional_dependencies_exact</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>backend<sp/>requirements<sp/>(matches<sp/>also<sp/>on<sp/>parents<sp/>and<sp/>friends)</highlight></codeline>
<codeline lineno="597"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1acba215f7ede05170a577c2c89302c2db" kindref="member">model_conditional_backend_reqs</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>listing<sp/>model-specific<sp/>conditional<sp/>backend<sp/>requirements<sp/>(matches<sp/>on<sp/>the<sp/>exact<sp/>model)</highlight></codeline>
<codeline lineno="600"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1acfae5137a9bfbd52e9e71181dfd521b7" kindref="member">model_conditional_backend_reqs_exact</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>and<sp/>activate<sp/>unconditional<sp/>dependencies.</highlight></codeline>
<codeline lineno="603"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a43a7ee806e18f22a2de7ed7f012932a4" kindref="member">setDependency</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1aec5300fbdb253cd9a09edffbfdafb526" kindref="member">purpose</ref>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>conditional<sp/>dependency-type<sp/>pairs<sp/>in<sp/>advance<sp/>of<sp/>later<sp/>conditions.</highlight></codeline>
<codeline lineno="606"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a915f72fd748fc54ce4efaddbe38c8a8f" kindref="member">setConditionalDependency</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>backend<sp/>conditional<sp/>dependency<sp/>for<sp/>multiple<sp/>backend<sp/>versions</highlight></codeline>
<codeline lineno="609"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a6f74b02a3d580cb9797d766e3ca6b81a" kindref="member">setBackendConditionalDependency</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>backend<sp/>conditional<sp/>dependency<sp/>for<sp/>a<sp/>single<sp/>backend<sp/>version</highlight></codeline>
<codeline lineno="612"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ac28b31c7a4ddb7491c9240486b8e8232" kindref="member">setBackendConditionalDependencySingular</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>model<sp/>conditional<sp/>dependency<sp/>for<sp/>multiple<sp/>models</highlight></codeline>
<codeline lineno="615"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a5507c3fa278180358649ef2bc2475f83" kindref="member">setModelConditionalDependency</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>model<sp/>conditional<sp/>dependency<sp/>for<sp/>a<sp/>single<sp/>model</highlight></codeline>
<codeline lineno="618"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a533b326fe958f21986dbe5cdc27270f3" kindref="member">setModelConditionalDependencySingular</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>rule<sp/>for<sp/>activating<sp/>backend<sp/>requirements<sp/>according<sp/>to<sp/>the<sp/>model<sp/>being<sp/>scanned.</highlight></codeline>
<codeline lineno="621"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a2cd39cd54c4fedb6b5062c62ac9b3885" kindref="member">makeBackendRuleForModel</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>an<sp/>unconditional<sp/>backend<sp/>requirement</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>The<sp/>info<sp/>gets<sp/>updated<sp/>later<sp/>if<sp/>this<sp/>turns<sp/>out<sp/>to<sp/>be<sp/>contitional<sp/>on<sp/>a<sp/>model.</highlight></codeline>
<codeline lineno="625"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a8d5518135253c1ed1065809ce8251778" kindref="member">setBackendReq</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>model<sp/>conditional<sp/>backend<sp/>requirement<sp/>for<sp/>multiple<sp/>models</highlight></codeline>
<codeline lineno="628"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ad648bbad10815d3b346c2e51462c5f0c" kindref="member">setModelConditionalBackendReq</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>req,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a913d44680b347e3e9261601b3bdb6f80" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>model<sp/>conditional<sp/>backend<sp/>requirement<sp/>for<sp/>a<sp/>single<sp/>model</highlight></codeline>
<codeline lineno="631"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1abab01071027dc0b194bc3e76b33a25b3" kindref="member">setModelConditionalBackendReqSingular</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>req,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1functor_1a913d44680b347e3e9261601b3bdb6f80" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>rule<sp/>for<sp/>dictating<sp/>which<sp/>backends<sp/>can<sp/>be<sp/>used<sp/>to<sp/>fulfill<sp/>which<sp/>backend<sp/>requirements.</highlight></codeline>
<codeline lineno="634"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1abda9ce1c6a4f3ec4af244d907bffa30a" kindref="member">makeBackendOptionRule</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>single<sp/>permitted<sp/>backend<sp/>version</highlight></codeline>
<codeline lineno="637"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1af3e16680e5820efb26df1c3328190acd" kindref="member">setPermittedBackend</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>req,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>be,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>ver);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>one<sp/>or<sp/>more<sp/>rules<sp/>for<sp/>forcing<sp/>backends<sp/>reqs<sp/>with<sp/>the<sp/>same<sp/>tags<sp/>to<sp/>always<sp/>be<sp/>resolved<sp/>from<sp/>the<sp/>same<sp/>backend.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a30700cc6d137ec1773cd9a9359f7f1d0" kindref="member">makeBackendMatchingRule</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>tag);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>rule<sp/>indicating<sp/>that<sp/>classes<sp/>from<sp/>a<sp/>given<sp/>backend<sp/>must<sp/>be<sp/>available</highlight></codeline>
<codeline lineno="643"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a3d41b15872c55bb8d903b011408dc589" kindref="member">setRequiredClassloader</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Indicate<sp/>to<sp/>the<sp/>functor<sp/>which<sp/>backends<sp/>are<sp/>actually<sp/>loaded<sp/>and<sp/>working</highlight></codeline>
<codeline lineno="646"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a39ebf33238e29052273bfb688100bad4" kindref="member">notifyOfBackends</ref>(std::map&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/>std::set&lt;str&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>ordered<sp/>list<sp/>of<sp/>pointers<sp/>to<sp/>other<sp/>functors<sp/>that<sp/>should<sp/>run<sp/>nested<sp/>in<sp/>a<sp/>loop<sp/>managed<sp/>by<sp/>this<sp/>one</highlight></codeline>
<codeline lineno="649"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1aa87dfaf3619b21da4e00637e6e8c7d8d" kindref="member">setNestedList</ref><sp/>(std::vector&lt;functor*&gt;<sp/>&amp;newNestedList);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Resolve<sp/>a<sp/>dependency<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>another<sp/>functor<sp/>object</highlight></codeline>
<codeline lineno="652"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ab4e47058c7c0f72906ece2924d952882" kindref="member">resolveDependency</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*<sp/>dep_functor);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>this<sp/>functor&apos;s<sp/>loop<sp/>manager<sp/>(if<sp/>it<sp/>has<sp/>one)</highlight></codeline>
<codeline lineno="655"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ab5056f4b47a2c3a79bc44e4293532f07" kindref="member">resolveLoopManager</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Resolve<sp/>a<sp/>backend<sp/>requirement<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>another<sp/>functor<sp/>object</highlight></codeline>
<codeline lineno="658"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ae67ace8c39a2c53cb2a158d5bac0ddb4" kindref="member">resolveBackendReq</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*<sp/>be_functor);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>that<sp/>a<sp/>certain<sp/>model<sp/>is<sp/>being<sp/>scanned,<sp/>so<sp/>that<sp/>it<sp/>can<sp/>activate<sp/>its<sp/>dependencies<sp/>and<sp/>backend<sp/>reqs<sp/>accordingly.</highlight></codeline>
<codeline lineno="661"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a9effd8a4100f67c39c4cd300a027ae22" kindref="member">notifyOfModel</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Notify<sp/>the<sp/>functor<sp/>that<sp/>another<sp/>functor<sp/>depends<sp/>on<sp/>it</highlight></codeline>
<codeline lineno="664"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a18664919c7999ac674d59f27d4d40a46" kindref="member">notifyOfDependee</ref><sp/>(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>the<sp/>previously<sp/>saved<sp/>exception<sp/>generated<sp/>when<sp/>this<sp/>functor<sp/>invalidated<sp/>the<sp/>current<sp/>point<sp/>in<sp/>model<sp/>space.</highlight></codeline>
<codeline lineno="667"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1invalid__point__exception" kindref="compound">invalid_point_exception</ref>*<sp/><ref refid="classGambit_1_1module__functor__common_1a6dc067a3fa5774ca0f9eb1dfb67d2d53" kindref="member">retrieve_invalid_point_exception</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Reset<sp/>functor<sp/>for<sp/>one<sp/>thread<sp/>only</highlight></codeline>
<codeline lineno="673"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a4e34fc2cf2c9932a6794eb9baf554e28" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Acknowledge<sp/>that<sp/>this<sp/>functor<sp/>invalidated<sp/>the<sp/>current<sp/>point<sp/>in<sp/>model<sp/>space.</highlight></codeline>
<codeline lineno="676"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a60681b7ecb89f42c1114132f044f4246" kindref="member">acknowledgeInvalidation</ref>(<ref refid="classGambit_1_1invalid__point__exception" kindref="compound">invalid_point_exception</ref>&amp;,<sp/><ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*<sp/>f<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Do<sp/>pre-calculate<sp/>timing<sp/>things</highlight></codeline>
<codeline lineno="679"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1aa5b20d0bd820325c61ab0bcfea479a48" kindref="member">startTiming</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Do<sp/>post-calculate<sp/>timing<sp/>things</highlight></codeline>
<codeline lineno="682"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a26c95890c3df7e87602e2de30b6d0f6f" kindref="member">finishTiming</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>select<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>timing<sp/>data<sp/>for<sp/>this<sp/>function&apos;s<sp/>execution<sp/>should<sp/>be<sp/>printed;</highlight></codeline>
<codeline lineno="685" refid="classGambit_1_1module__functor__common_1a7a1adb7a3d6c6868d06025ba45264593" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a7a1adb7a3d6c6868d06025ba45264593" kindref="member">myTimingPrintFlag</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialise<sp/>the<sp/>memory<sp/>of<sp/>this<sp/>functor.</highlight></codeline>
<codeline lineno="688"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a90d617ce75a8ade1c843c3bdaa20c231" kindref="member">init_memory</ref>();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Construct<sp/>the<sp/>list<sp/>of<sp/>known<sp/>models<sp/>only<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>yet<sp/>exist</highlight></codeline>
<codeline lineno="691"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a736a0964bc8a8b518eacc37e4619f3cf" kindref="member">fill_activeModelFlags</ref>();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>full<sp/>conditional<sp/>dependency-type<sp/>pair<sp/>from<sp/>conditional<sp/>dependency<sp/>only</highlight></codeline>
<codeline lineno="694"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a8b70a7e3b4dbad4da1fc927144295adf" kindref="member">retrieve_conditional_dep_type_pair</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Beginning<sp/>and<sp/>end<sp/>timing<sp/>points</highlight></codeline>
<codeline lineno="697" refid="classGambit_1_1module__functor__common_1aa47b3d140ceec21755b3cf50cffece49" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::time_point&lt;std::chrono::system_clock&gt;<sp/>*<ref refid="classGambit_1_1module__functor__common_1aa47b3d140ceec21755b3cf50cffece49" kindref="member">start</ref>,<sp/>*end;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>or<sp/>not<sp/>this<sp/>functor<sp/>has<sp/>invalidated<sp/>the<sp/>current<sp/>point</highlight></codeline>
<codeline lineno="700" refid="classGambit_1_1module__functor__common_1a366392aa6096192a76ee894d68aa85da" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a366392aa6096192a76ee894d68aa85da" kindref="member">point_exception_raised</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>An<sp/>exception<sp/>raised<sp/>because<sp/>this<sp/>functor<sp/>has<sp/>invalidated<sp/>the<sp/>current<sp/>point</highlight></codeline>
<codeline lineno="703" refid="classGambit_1_1module__functor__common_1a85d73ca93af7755cdfc053f015a8cf98" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1invalid__point__exception" kindref="compound">invalid_point_exception</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a85d73ca93af7755cdfc053f015a8cf98" kindref="member">raised_point_exception</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Averaged<sp/>runtime<sp/>in<sp/>ns</highlight></codeline>
<codeline lineno="706" refid="classGambit_1_1module__functor__common_1a73113fff7fbc6a32a1c871dc3e688eeb" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a73113fff7fbc6a32a1c871dc3e688eeb" kindref="member">runtime_average</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Fade<sp/>rate<sp/>for<sp/>average<sp/>runtime</highlight></codeline>
<codeline lineno="709" refid="classGambit_1_1module__functor__common_1a77c216bbfeb9d09928b3ada8973447c7" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a77c216bbfeb9d09928b3ada8973447c7" kindref="member">fadeRate</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Probability<sp/>that<sp/>functors<sp/>invalidates<sp/>point<sp/>in<sp/>model<sp/>parameter<sp/>space</highlight></codeline>
<codeline lineno="712" refid="classGambit_1_1module__functor__common_1a586f59a87b95b5cc43bfa8939d51e71f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a586f59a87b95b5cc43bfa8939d51e71f" kindref="member">pInvalidation</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Needs<sp/>recalculating<sp/>or<sp/>not?</highlight></codeline>
<codeline lineno="715" refid="classGambit_1_1module__functor__common_1aa948b2e50700e9c0d414090064cbaf35" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="classGambit_1_1module__functor__common_1aa948b2e50700e9c0d414090064cbaf35" kindref="member">needs_recalculating</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Has<sp/>result<sp/>already<sp/>been<sp/>sent<sp/>to<sp/>the<sp/>printer?</highlight></codeline>
<codeline lineno="718" refid="classGambit_1_1module__functor__common_1a11a55f0dee712fd09143749711bf345d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="classGambit_1_1module__functor__common_1a11a55f0dee712fd09143749711bf345d" kindref="member">already_printed</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Has<sp/>timing<sp/>data<sp/>already<sp/>been<sp/>sent<sp/>to<sp/>the<sp/>printer?</highlight></codeline>
<codeline lineno="721" refid="classGambit_1_1module__functor__common_1ac41e86a381b4cd922e4125e3572c5174" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="classGambit_1_1module__functor__common_1ac41e86a381b4cd922e4125e3572c5174" kindref="member">already_printed_timing</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>indicating<sp/>whether<sp/>this<sp/>function<sp/>can<sp/>manage<sp/>a<sp/>loop<sp/>over<sp/>other<sp/>functions</highlight></codeline>
<codeline lineno="724" refid="classGambit_1_1module__functor__common_1ac211d5483ebf9d71dcf2bed1cae9781e" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ac211d5483ebf9d71dcf2bed1cae9781e" kindref="member">iCanManageLoops</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>indicating<sp/>whether<sp/>this<sp/>function<sp/>is<sp/>ready<sp/>to<sp/>finish<sp/>its<sp/>loop<sp/>(only<sp/>relevant<sp/>if<sp/>iCanManageLoops<sp/>=<sp/>true)</highlight></codeline>
<codeline lineno="727" refid="classGambit_1_1module__functor__common_1a2fc9ca343ed1c197b4c246779bbd52df" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a2fc9ca343ed1c197b4c246779bbd52df" kindref="member">myLoopIsDone</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>indicating<sp/>whether<sp/>this<sp/>function<sp/>can<sp/>run<sp/>nested<sp/>in<sp/>a<sp/>loop<sp/>over<sp/>functions</highlight></codeline>
<codeline lineno="730" refid="classGambit_1_1module__functor__common_1a0c61f250c2879b7a80e3fbb2b6c6dcff" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a0c61f250c2879b7a80e3fbb2b6c6dcff" kindref="member">iRunNested</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Capability<sp/>of<sp/>a<sp/>function<sp/>that<sp/>mangages<sp/>a<sp/>loop<sp/>that<sp/>this<sp/>function<sp/>can<sp/>run<sp/>inside<sp/>of.</highlight></codeline>
<codeline lineno="733" refid="classGambit_1_1module__functor__common_1ae737ea2b40a195003e3eafa08a2e24ac" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1module__functor__common_1ae737ea2b40a195003e3eafa08a2e24ac" kindref="member">myLoopManagerCapability</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Capability<sp/>of<sp/>a<sp/>function<sp/>that<sp/>mangages<sp/>a<sp/>loop<sp/>that<sp/>this<sp/>function<sp/>can<sp/>run<sp/>inside<sp/>of.</highlight></codeline>
<codeline lineno="735" refid="classGambit_1_1module__functor__common_1a5a1e44605d6bfc9d43cbe16ac980fdcb" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1module__functor__common_1a5a1e44605d6bfc9d43cbe16ac980fdcb" kindref="member">myLoopManagerType</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Pointer<sp/>to<sp/>the<sp/>functor<sp/>that<sp/>mangages<sp/>the<sp/>loop<sp/>that<sp/>this<sp/>function<sp/>runs<sp/>inside<sp/>of.</highlight></codeline>
<codeline lineno="737" refid="classGambit_1_1module__functor__common_1a8aa8ac184455c66978aba66b88de3344" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*<sp/><ref refid="classGambit_1_1module__functor__common_1a8aa8ac184455c66978aba66b88de3344" kindref="member">myLoopManager</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Vector<sp/>of<sp/>functors<sp/>that<sp/>have<sp/>been<sp/>set<sp/>up<sp/>to<sp/>run<sp/>nested<sp/>within<sp/>this<sp/>one.</highlight></codeline>
<codeline lineno="740" refid="classGambit_1_1module__functor__common_1afa8e12fe2b00861c82adcb174328589a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;functor*&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1afa8e12fe2b00861c82adcb174328589a" kindref="member">myNestedFunctorList</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Pointer<sp/>to<sp/>counters<sp/>for<sp/>iterations<sp/>of<sp/>nested<sp/>functor<sp/>loop.</highlight></codeline>
<codeline lineno="743" refid="classGambit_1_1module__functor__common_1a47a97cb3505484092de8e06cd397ba49" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/><ref refid="classGambit_1_1module__functor__common_1a47a97cb3505484092de8e06cd397ba49" kindref="member">myCurrentIteration</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Maximum<sp/>number<sp/>of<sp/>OpenMP<sp/>threads<sp/>this<sp/>MPI<sp/>process<sp/>is<sp/>permitted<sp/>to<sp/>launch<sp/>in<sp/>total.</highlight></codeline>
<codeline lineno="746" refid="classGambit_1_1module__functor__common_1a9ab2ee1a2b0d96d437a4c5e6d2cec739" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a9ab2ee1a2b0d96d437a4c5e6d2cec739" kindref="member">globlMaxThreads</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>list<sp/>of<sp/>backend<sp/>groups<sp/>that<sp/>this<sp/>functor&apos;s<sp/>requirements<sp/>fall<sp/>into.</highlight></codeline>
<codeline lineno="749" refid="classGambit_1_1module__functor__common_1ad34c2ea06524530739b1753e7d06423a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1ad34c2ea06524530739b1753e7d06423a" kindref="member">myGroups</ref>;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>groups<sp/>to<sp/>backend<sp/>reqs,<sp/>indicating<sp/>which<sp/>backend<sp/>req<sp/>has<sp/>been<sp/>activated<sp/>for<sp/>which<sp/>backend<sp/>group.</highlight></codeline>
<codeline lineno="752" refid="classGambit_1_1module__functor__common_1a093c06a4cad21400d4f46c89b6d302b1" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a093c06a4cad21400d4f46c89b6d302b1" kindref="member">chosenReqsFromGroups</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>of<sp/>all<sp/>backend<sp/>requirement-type<sp/>string<sp/>pairs.</highlight></codeline>
<codeline lineno="755" refid="classGambit_1_1module__functor__common_1a1e9bed0318723d34f73afc954c0d7d05" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a1e9bed0318723d34f73afc954c0d7d05" kindref="member">myBackendReqs</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>of<sp/>all<sp/>backend<sp/>requirement-type<sp/>string<sp/>pairs<sp/>currently<sp/>available<sp/>for<sp/>resolution.</highlight></codeline>
<codeline lineno="758" refid="classGambit_1_1module__functor__common_1a591c7ce963c69d51b331eb69fbe5a4ba" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a591c7ce963c69d51b331eb69fbe5a4ba" kindref="member">myResolvableBackendReqs</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>of<sp/>backend<sp/>requirement-type<sp/>string<sp/>pairs<sp/>for<sp/>specific<sp/>backend<sp/>groups</highlight></codeline>
<codeline lineno="761" refid="classGambit_1_1module__functor__common_1a0b571e85b889da6d7173bae0473b2018" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,std::set&lt;sspair&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a0b571e85b889da6d7173bae0473b2018" kindref="member">myGroupedBackendReqs</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Vector<sp/>of<sp/>dependency-type<sp/>string<sp/>pairs</highlight></codeline>
<codeline lineno="764" refid="classGambit_1_1module__functor__common_1a1d2b89105961ad780787a688bd468432" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;sspair&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a1d2b89105961ad780787a688bd468432" kindref="member">myDependencies</ref>;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>of<sp/>conditional<sp/>dependencies<sp/>to<sp/>their<sp/>types</highlight></codeline>
<codeline lineno="767" refid="classGambit_1_1module__functor__common_1aa11aee2c3fd4fe472034df285aadbef6" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1aa11aee2c3fd4fe472034df285aadbef6" kindref="member">myConditionalDependencies</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>(vector<sp/>with<sp/>4<sp/>strings:<sp/>backend<sp/>req,<sp/>type,<sp/>backend,<sp/>version)<sp/>to<sp/>(set<sp/>of<sp/>{conditional<sp/>dependency-type}<sp/>pairs)</highlight></codeline>
<codeline lineno="770" refid="classGambit_1_1module__functor__common_1adc22bfb0f06cf58e6f4469d793d88583" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::vector&lt;str&gt;,<sp/>std::set&lt;sspair&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1adc22bfb0f06cf58e6f4469d793d88583" kindref="member">myBackendConditionalDependencies</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>models<sp/>to<sp/>(set<sp/>of<sp/>{conditional<sp/>dependency-type}<sp/>pairs)</highlight></codeline>
<codeline lineno="773" refid="classGambit_1_1module__functor__common_1a70be0fd7b2530e87a26e1caac4b400c9" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>str,<sp/>std::set&lt;sspair&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a70be0fd7b2530e87a26e1caac4b400c9" kindref="member">myModelConditionalDependencies</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>models<sp/>to<sp/>(set<sp/>of<sp/>{conditional<sp/>backend<sp/>requirement-type}<sp/>pairs)</highlight></codeline>
<codeline lineno="776" refid="classGambit_1_1module__functor__common_1a24327d20eeb4e07722e81856e5c613d8" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>str,<sp/>std::set&lt;sspair&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a24327d20eeb4e07722e81856e5c613d8" kindref="member">myModelConditionalBackendReqs</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>known<sp/>models<sp/>to<sp/>flags<sp/>indicating<sp/>if<sp/>they<sp/>are<sp/>activated<sp/>or<sp/>not<sp/>(known<sp/>=<sp/>allowed,<sp/>in<sp/>allowed<sp/>groups<sp/>or<sp/>conditions<sp/>for<sp/>conditional<sp/>dependencies)</highlight></codeline>
<codeline lineno="779" refid="classGambit_1_1module__functor__common_1aeb3b1f7a66c83d117342496b6ad0229f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>bool&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1aeb3b1f7a66c83d117342496b6ad0229f" kindref="member">activeModelFlags</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>(dependency-type<sp/>pairs)<sp/>to<sp/>(pointers<sp/>to<sp/>templated<sp/>void<sp/>functions</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>that<sp/>set<sp/>dependency<sp/>functor<sp/>pointers)</highlight></codeline>
<codeline lineno="783" refid="classGambit_1_1module__functor__common_1a65b4f950efdaca6b360b131b5b8a0ebf" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref>,<sp/>void(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*,<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>*)&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a65b4f950efdaca6b360b131b5b8a0ebf" kindref="member">dependency_map</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>(dependency-type<sp/>pairs)<sp/>to<sp/>pointers<sp/>to<sp/>functors<sp/>used<sp/>to<sp/>resolve<sp/>them</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>that<sp/>set<sp/>dependency<sp/>functor<sp/>pointers)</highlight></codeline>
<codeline lineno="787" refid="classGambit_1_1module__functor__common_1a2bae29be67acbe6831b991e0f3b8f183" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;sspair,<sp/>functor*&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a2bae29be67acbe6831b991e0f3b8f183" kindref="member">dependency_functor_map</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>backend<sp/>requirements<sp/>to<sp/>their<sp/>required<sp/>types</highlight></codeline>
<codeline lineno="790" refid="classGambit_1_1module__functor__common_1a786bc4ed0cca65e2c916836740337f17" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a786bc4ed0cca65e2c916836740337f17" kindref="member">backendreq_types</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>backend<sp/>requirements<sp/>to<sp/>their<sp/>designated<sp/>groups</highlight></codeline>
<codeline lineno="793" refid="classGambit_1_1module__functor__common_1ae23abdb30edf89228b296b707bc4321f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;sspair,<sp/>str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1ae23abdb30edf89228b296b707bc4321f" kindref="member">backendreq_groups</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>backend<sp/>requirements<sp/>to<sp/>their<sp/>rule<sp/>tags</highlight></codeline>
<codeline lineno="796" refid="classGambit_1_1module__functor__common_1ad99f3dba2e2045dfddd88a6d9b60e540" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;sspair,<sp/>std::set&lt;str&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1ad99f3dba2e2045dfddd88a6d9b60e540" kindref="member">backendreq_tagmap</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>(backend<sp/>requirement-type<sp/>pairs)<sp/>to<sp/>(pointers<sp/>to<sp/>templated<sp/>void<sp/>functions</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>that<sp/>set<sp/>backend<sp/>requirement<sp/>functor<sp/>pointers)</highlight></codeline>
<codeline lineno="800" refid="classGambit_1_1module__functor__common_1ae7f6eb5b0b45de63ae3db562420126ed" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<ref refid="namespaceGambit_1a02fb1a27cb798b8333a50eb29b32c0a7" kindref="member">sspair</ref>,<sp/>void(*)(<ref refid="classGambit_1_1functor" kindref="compound">functor</ref>*)&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1ae7f6eb5b0b45de63ae3db562420126ed" kindref="member">backendreq_map</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>(backend<sp/>requirement-type<sp/>pairs)<sp/>to<sp/>(set<sp/>of<sp/>permitted<sp/>{backend-version}<sp/>pairs)</highlight></codeline>
<codeline lineno="803" refid="classGambit_1_1module__functor__common_1a15ba740d630d04935b9e9e1376bf0b8a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>sspair,<sp/>std::set&lt;sspair&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a15ba740d630d04935b9e9e1376bf0b8a" kindref="member">permitted_map</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>tags<sp/>to<sp/>sets<sp/>of<sp/>matching<sp/>(backend<sp/>requirement-type<sp/>pairs)<sp/>that<sp/>are<sp/>forced<sp/>to<sp/>use<sp/>the<sp/>same<sp/>backend</highlight></codeline>
<codeline lineno="806" refid="classGambit_1_1module__functor__common_1a67831f6f58d5b081b2a08a5f7e7c557c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>str,<sp/>std::set&lt;sspair&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a67831f6f58d5b081b2a08a5f7e7c557c" kindref="member">myForcedMatches</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>required<sp/>classloading<sp/>backends<sp/>to<sp/>their<sp/>versions</highlight></codeline>
<codeline lineno="809" refid="classGambit_1_1module__functor__common_1a2897f00892b6a5470246d1557f251e6b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>str,<sp/>std::set&lt;str&gt;<sp/>&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a2897f00892b6a5470246d1557f251e6b" kindref="member">required_classloading_backends</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Vector<sp/>of<sp/>required<sp/>backends<sp/>currently<sp/>missing</highlight></codeline>
<codeline lineno="812" refid="classGambit_1_1module__functor__common_1a0fd8feffa79f12d89097f5c45fc9eb18" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/><ref refid="classGambit_1_1module__functor__common_1a0fd8feffa79f12d89097f5c45fc9eb18" kindref="member">missing_backends</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>timespec<sp/>object</highlight></codeline>
<codeline lineno="815" refid="classGambit_1_1module__functor__common_1ae819618cc7c2ad5eb32d18464235d40b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timespec<sp/><ref refid="classGambit_1_1module__functor__common_1ae819618cc7c2ad5eb32d18464235d40b" kindref="member">tp</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Integer<sp/>LogTag,<sp/>for<sp/>tagging<sp/>log<sp/>messages</highlight></codeline>
<codeline lineno="818" refid="classGambit_1_1module__functor__common_1a9362538d0fec38166b8baabd51272621" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1a9362538d0fec38166b8baabd51272621" kindref="member">myLogTag</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>an<sp/>appropriate<sp/>LogTag<sp/>for<sp/>this<sp/>functor<sp/>is<sp/>missing<sp/>from<sp/>the<sp/>logging<sp/>system.</highlight></codeline>
<codeline lineno="821"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ae3a82d20da9f6340c9e00c35d7254b0c" kindref="member">check_missing_LogTag</ref>();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>While<sp/>locked,<sp/>prevent<sp/>this<sp/>function<sp/>switching<sp/>off<sp/>threadsafe*<sp/>emergency<sp/>signal<sp/>handling.</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>*The<sp/>emergency<sp/>signal<sp/>handling<sp/>cannot<sp/>be<sp/>made<sp/>completely<sp/>threadsafe;<sp/>it<sp/>can<sp/>still<sp/>cause</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>lockups<sp/>and<sp/>memory<sp/>corruption<sp/>if<sp/>it<sp/>occurs<sp/>at<sp/>an<sp/>inopportune<sp/>time.<sp/>&quot;soft&quot;<sp/>shutdown<sp/>is</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>always<sp/>preferable.</highlight></codeline>
<codeline lineno="827" refid="classGambit_1_1module__functor__common_1ab3d4cb6d21dd67b058af4e70bc4a4c45" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1ab3d4cb6d21dd67b058af4e70bc4a4c45" kindref="member">signal_mode_locked</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="829"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Connectors<sp/>to<sp/>external<sp/>helper<sp/>functions<sp/>(to<sp/>decouple<sp/>signal<sp/>handling<sp/>from<sp/>this<sp/>class)</highlight></codeline>
<codeline lineno="831"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>friend<sp/>void<sp/>FunctorHelp::check_for_shutdown_signal(module_functor_common&amp;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>friend<sp/>bool<sp/>FunctorHelp::emergency_shutdown_begun();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833" refid="classGambit_1_1module__functor__common_1aa5782f2798ca1657550c41e8015657f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common_1aa5782f2798ca1657550c41e8015657f5" kindref="member">FunctorHelp::entering_multithreaded_region</ref>(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FunctorHelp::leaving_multithreaded_region(<ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>&amp;);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>check_for_shutdown_signal(){<sp/>FunctorHelp::check_for_shutdown_signal(*this);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>emergency_shutdown_begun(){<sp/>return<sp/>FunctorHelp::emergency_shutdown_begun();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>entering_multithreaded_region(){<sp/><ref refid="classGambit_1_1module__functor__common_1aa5782f2798ca1657550c41e8015657f5" kindref="member">FunctorHelp::entering_multithreaded_region</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>leaving_multithreaded_region(){<sp/>FunctorHelp::leaving_multithreaded_region(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/>///<sp/>Actual<sp/>module<sp/>functor<sp/>type<sp/>for<sp/>all<sp/>but<sp/>TYPE=void</highlight></codeline>
<codeline lineno="844"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="845" refid="classGambit_1_1module__functor" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1module__functor" kindref="compound">module_functor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="851"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1module__functor_1a2b6d5d20d90906aa4b2ccf9b6e820f89" kindref="member">module_functor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(TYPE<sp/>&amp;),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="854"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1a302a7e36f414924e2fea0bc38deeba83" kindref="member">~module_functor</ref>();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>indicating<sp/>if<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>result<sp/>should<sp/>to<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="857"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1ab1a3b51ffb937f26f9d109811410fb62" kindref="member">setPrintRequirement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>indicating<sp/>if<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>result<sp/>should<sp/>to<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="860"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1ad4f4ce209987e753b78e5d47fafe5d11" kindref="member">requiresPrinting</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Calculate<sp/>method</highlight></codeline>
<codeline lineno="863"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1a8b95bea55acc882c4ec06636016e4429" kindref="member">calculate</ref>();</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(return<sp/>value)</highlight></codeline>
<codeline lineno="866"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE&amp;<sp/><ref refid="classGambit_1_1module__functor_1a768d06bf12431023fe0cebf862edc670" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Alternative<sp/>to<sp/>operation<sp/>(returns<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>value)</highlight></codeline>
<codeline lineno="869"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;TYPE&gt;</ref><sp/><ref refid="classGambit_1_1module__functor_1a30c323a1171f5415b9ffce90cf0e43bd" kindref="member">valuePtr</ref>();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>NO_PRINTERS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Printer<sp/>function</highlight></codeline>
<codeline lineno="873"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" kindref="member">print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*<sp/>printer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Printer<sp/>function<sp/>(no-thread-index<sp/>short-circuit)</highlight></codeline>
<codeline lineno="876"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" kindref="member">print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*<sp/>printer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointID);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>function<sp/>pointer</highlight></codeline>
<codeline lineno="883" refid="classGambit_1_1module__functor_1ab110e74bdaf76e18320eabff2345a5fd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="classGambit_1_1module__functor_1ab110e74bdaf76e18320eabff2345a5fd" kindref="member">myFunction</ref>)(TYPE<sp/>&amp;);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>pointer<sp/>to<sp/>storage<sp/>location<sp/>of<sp/>function<sp/>value</highlight></codeline>
<codeline lineno="886" refid="classGambit_1_1module__functor_1a331a6e74f3ec94ad8d10565a4435676b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TYPE*<sp/><ref refid="classGambit_1_1module__functor_1a331a6e74f3ec94ad8d10565a4435676b" kindref="member">myValue</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>select<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>results<sp/>of<sp/>this<sp/>functor<sp/>should<sp/>be<sp/>sent<sp/>to<sp/>the<sp/>printer<sp/>object.</highlight></codeline>
<codeline lineno="889" refid="classGambit_1_1module__functor_1abed80008cf026b213d695a9c6322572c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1abed80008cf026b213d695a9c6322572c" kindref="member">myPrintFlag</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialise<sp/>the<sp/>memory<sp/>of<sp/>this<sp/>functor.</highlight></codeline>
<codeline lineno="892"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1a5132c201b17e8935e0810f66f2ecce80" kindref="member">init_memory</ref>();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/>///<sp/>Actual<sp/>module<sp/>functor<sp/>type<sp/>for<sp/>TYPE=void</highlight></codeline>
<codeline lineno="898"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="899" refid="classGambit_1_1module__functor_3_01void_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1module__functor" kindref="compound">module_functor</ref>&lt;void&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="905"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1module__functor_1a2b6d5d20d90906aa4b2ccf9b6e820f89" kindref="member">module_functor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="908" refid="classGambit_1_1module__functor_3_01void_01_4_1afbb6208adc8a4e5d65cb212e17cc52db" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_3_01void_01_4_1afbb6208adc8a4e5d65cb212e17cc52db" kindref="member">~module_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Calculate<sp/>method</highlight></codeline>
<codeline lineno="911"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1a8b95bea55acc882c4ec06636016e4429" kindref="member">calculate</ref>();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>NO_PRINTERS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Blank<sp/>print<sp/>method</highlight></codeline>
<codeline lineno="915"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" kindref="member">print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Blank<sp/>print<sp/>method</highlight></codeline>
<codeline lineno="918"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" kindref="member">print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>function<sp/>pointer</highlight></codeline>
<codeline lineno="924" refid="classGambit_1_1module__functor_3_01void_01_4_1ad76bb795ca74034eb89497fdae9bd929" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="classGambit_1_1module__functor_1ab110e74bdaf76e18320eabff2345a5fd" kindref="member">myFunction</ref>)();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>========================<sp/>Backend<sp/>Functors<sp/>=====================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/>///<sp/>Backend<sp/>functor<sp/>class<sp/>for<sp/>functions<sp/>with<sp/>result<sp/>type<sp/>TYPE<sp/>and<sp/>argumentlist<sp/>ARGS</highlight></codeline>
<codeline lineno="932"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="933" refid="classGambit_1_1backend__functor__common" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1functor" kindref="compound">functor</ref></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>inUse<sp/>flag.</highlight></codeline>
<codeline lineno="939"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1a89d7ab912fc7b66ca49726eb7b412a00" kindref="member">setInUse</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Type<sp/>of<sp/>the<sp/>function<sp/>pointer<sp/>being<sp/>encapsulated</highlight></codeline>
<codeline lineno="942" refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PTR_TYPE<sp/><ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>function<sp/>pointer</highlight></codeline>
<codeline lineno="945" refid="classGambit_1_1backend__functor__common_1a7e3aab4b3d0148c581ad1540ee36efb8" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a7e3aab4b3d0148c581ad1540ee36efb8" kindref="member">myFunction</ref>;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Integer<sp/>LogTag,<sp/>for<sp/>tagging<sp/>log<sp/>messages</highlight></codeline>
<codeline lineno="948" refid="classGambit_1_1backend__functor__common_1a9dd4f156fb57f61f1da6002292a35d1d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1a9dd4f156fb57f61f1da6002292a35d1d" kindref="member">myLogTag</ref>;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>the<sp/>version<sp/>of<sp/>the<sp/>backend<sp/>to<sp/>which<sp/>the<sp/>function<sp/>belongs.</highlight></codeline>
<codeline lineno="951" refid="classGambit_1_1backend__functor__common_1abb4eae828a1503e4f21be3090117cb44" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1abb4eae828a1503e4f21be3090117cb44" kindref="member">myVersion</ref>;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Internal<sp/>storage<sp/>of<sp/>the<sp/>&apos;safe&apos;<sp/>version<sp/>of<sp/>the<sp/>version<sp/>(for<sp/>use<sp/>in<sp/>namespaces,<sp/>variable<sp/>names,<sp/>etc).</highlight></codeline>
<codeline lineno="954" refid="classGambit_1_1backend__functor__common_1a205268bb599cd3fd2328d6a222160993" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a205268bb599cd3fd2328d6a222160993" kindref="member">mySafeVersion</ref>;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>indicating<sp/>if<sp/>this<sp/>backend<sp/>functor<sp/>is<sp/>actually<sp/>in<sp/>use<sp/>in<sp/>a<sp/>given<sp/>scan</highlight></codeline>
<codeline lineno="957" refid="classGambit_1_1backend__functor__common_1ae2cba749c08911cf8bbeceee7c79125b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1ae2cba749c08911cf8bbeceee7c79125b" kindref="member">inUse</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="962"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1a6c65848898364bfb7891743e453a49ac" kindref="member">backend_functor_common</ref><sp/>(<ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="965" refid="classGambit_1_1backend__functor__common_1ace63cb38f70050d21506e0572129bdb2" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1ace63cb38f70050d21506e0572129bdb2" kindref="member">~backend_functor_common</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Update<sp/>the<sp/>internal<sp/>function<sp/>pointer<sp/>wrapped<sp/>by<sp/>the<sp/>functor</highlight></codeline>
<codeline lineno="968"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1a1b7376bd99a159aebd4e6473f22d966d" kindref="member">updatePointer</ref>(<ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Hand<sp/>out<sp/>the<sp/>internal<sp/>function<sp/>pointer<sp/>wrapped<sp/>by<sp/>the<sp/>functor</highlight></codeline>
<codeline lineno="971"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a6aa6c5c3b9f4d5dabf6c647848a4e9b5" kindref="member">handoutFunctionPointer</ref>();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Hand<sp/>out<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>this<sp/>backend<sp/>functor&apos;s<sp/>inUse<sp/>flag.</highlight></codeline>
<codeline lineno="974"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;bool&gt;</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a4b8bbe62177404dc63d8fb640ddd4ec8" kindref="member">inUsePtr</ref>();</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>version<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>backend.</highlight></codeline>
<codeline lineno="977"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a37ab7d16a3437db0e91b3c4806c73852" kindref="member">version</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>&apos;safe&apos;<sp/>incarnation<sp/>of<sp/>the<sp/>version<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>backend.</highlight></codeline>
<codeline lineno="980"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1af9bcd2e979961e755476c41b611ddc40" kindref="member">safe_version</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/><sp/>///<sp/>Actual<sp/>backend<sp/>functor<sp/>type</highlight></codeline>
<codeline lineno="986" refid="classGambit_1_1backend__functor" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/><sp/>///<sp/>Template<sp/>specialisation<sp/>for<sp/>non-variadic,<sp/>non-void<sp/>backend<sp/>functions</highlight></codeline>
<codeline lineno="989"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="990" refid="classGambit_1_1backend__functor_3_01TYPE_07_5_08_07ARGS_8_8_8_08_00_01TYPE_00_01ARGS_8_8_8_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;TYPE(*)(ARGS...),<sp/>TYPE,<sp/>ARGS...&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;TYPE(*)(ARGS...),<sp/>TYPE,<sp/>ARGS...&gt;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="996"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref><sp/>(TYPE(*)(ARGS...),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="999" refid="classGambit_1_1backend__functor_3_01TYPE_07_5_08_07ARGS_8_8_8_08_00_01TYPE_00_01ARGS_8_8_8_01_4_1a62750983d43382b5a03cebb170f602ad" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor_3_01TYPE_07_5_08_07ARGS_8_8_8_08_00_01TYPE_00_01ARGS_8_8_8_01_4_1a62750983d43382b5a03cebb170f602ad" kindref="member">~backend_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(execute<sp/>function<sp/>and<sp/>return<sp/>value)</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>operator()(ARGS&amp;&amp;...<sp/>args);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/>///<sp/>Template<sp/>specialisation<sp/>for<sp/>non-variadic,<sp/>void<sp/>backend<sp/>functions</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="1009" refid="classGambit_1_1backend__functor_3_01void_07_5_08_07ARGS_8_8_8_08_00_01void_00_01ARGS_8_8_8_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;void(*)(ARGS...),<sp/>void,<sp/>ARGS...&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;void(*)(ARGS...),<sp/>void,<sp/>ARGS...&gt;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(ARGS...),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="1018" refid="classGambit_1_1backend__functor_3_01void_07_5_08_07ARGS_8_8_8_08_00_01void_00_01ARGS_8_8_8_01_4_1a7b2a4345467b4e1200f176a276e1de5b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor_3_01void_07_5_08_07ARGS_8_8_8_08_00_01void_00_01ARGS_8_8_8_01_4_1a7b2a4345467b4e1200f176a276e1de5b" kindref="member">~backend_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(execute<sp/>function)</highlight></codeline>
<codeline lineno="1021"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(ARGS&amp;&amp;...<sp/>args);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/><sp/>///<sp/>Template<sp/>specialisation<sp/>for<sp/>variadic,<sp/>non-void<sp/>backend<sp/>functions</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="1027" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;typename<sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr</ref>&lt;TYPE,ARGS...&gt;::type,<sp/>TYPE,<sp/>ARGS...&gt;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;typename<sp/>variadic_ptr&lt;TYPE,ARGS...&gt;::type,<sp/>TYPE,<sp/>ARGS...&gt;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="1034" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111_1a280112b1e17a9b32b20686ee99521c56" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111_1a280112b1e17a9b32b20686ee99521c56" kindref="member">backend_functor</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr&lt;TYPE,ARGS...&gt;::type</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="1037" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111_1a5fc6f25d458b1a9c7cc6710fa116500c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111_1a5fc6f25d458b1a9c7cc6710fa116500c" kindref="member">~backend_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(execute<sp/>function<sp/>and<sp/>return<sp/>value)</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>VARARGS&gt;</highlight></codeline>
<codeline lineno="1041" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111_1a33a1023f09a7fb668a0caf2880426e13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/><ref refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01TYPE_00_01ARGS_8_8_8_01_4_1_1ty72d3974d93bcbccd5afc933e90698111_1a33a1023f09a7fb668a0caf2880426e13" kindref="member">operator()</ref>(VARARGS&amp;&amp;...<sp/>varargs)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().entering_backend(this-&gt;myLogTag);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>tmp<sp/>=<sp/>this-&gt;myFunction(std::forward&lt;VARARGS&gt;(varargs)...);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().leaving_backend();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/><sp/>///<sp/>Template<sp/>specialisation<sp/>for<sp/>variadic<sp/>void<sp/>backend<sp/>functions</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="1053" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;typename<sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr</ref>&lt;void,ARGS...&gt;::type,<sp/>void,<sp/>ARGS...&gt;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;typename<sp/>variadic_ptr&lt;void,ARGS...&gt;::type,<sp/>void,<sp/>ARGS...&gt;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="1060" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6_1a8aa4186af0f86c2e24cbec3f58b89032" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6_1a8aa4186af0f86c2e24cbec3f58b89032" kindref="member">backend_functor</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr&lt;void,ARGS...&gt;::type</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="1063" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6_1a3b79dbe663ddd8724fd6925e7699f589" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6_1a3b79dbe663ddd8724fd6925e7699f589" kindref="member">~backend_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(execute<sp/>function)</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>VARARGS&gt;</highlight></codeline>
<codeline lineno="1067" refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6_1a6e73c877f5bda39a3ee8359e27fa3972" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor_3_01typename_01variadic__ptr_3_01void_00_01ARGS_8_8_8_01_4_1_1tyf70fe5b8dacf530fb4e50c81f52a10d6_1a6e73c877f5bda39a3ee8359e27fa3972" kindref="member">operator()</ref>(VARARGS&amp;&amp;...<sp/>varargs)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().entering_backend(this-&gt;myLogTag);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;myFunction(std::forward&lt;VARARGS&gt;(varargs)...);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().leaving_backend();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>========================<sp/>Model<sp/>Functors<sp/>=====================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/><sp/>///<sp/>Functors<sp/>specific<sp/>to<sp/>ModelParameters<sp/>objects</highlight></codeline>
<codeline lineno="1080" refid="classGambit_1_1model__functor" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1model__functor" kindref="compound">model_functor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor" kindref="compound">module_functor</ref>&lt;ModelParameters&gt;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1model__functor_1a2647715829359e57241bcc7479982d50" kindref="member">model_functor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(<ref refid="classGambit_1_1ModelParameters" kindref="compound">ModelParameters</ref><sp/>&amp;),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1088"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="1089" refid="classGambit_1_1model__functor_1a916c74cf550a3fb32c377b0aab36c269" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1model__functor_1a916c74cf550a3fb32c377b0aab36c269" kindref="member">~model_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>model<sp/>name<sp/>for<sp/>a<sp/>ModelParameters<sp/>object.<sp/>Mainly<sp/>for<sp/>better<sp/>error<sp/>messages.</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1model__functor_1a184015babeb811a576fa13ebda6983a0" kindref="member">setModelName</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model_name);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Function<sp/>for<sp/>adding<sp/>a<sp/>new<sp/>parameter<sp/>to<sp/>the<sp/>map<sp/>inside<sp/>the<sp/>ModelParameters<sp/>object</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1model__functor_1a465023a130c1b9a571917b31e8f3083b" kindref="member">addParameter</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>parname);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Function<sp/>for<sp/>handing<sp/>over<sp/>parameter<sp/>identities<sp/>to<sp/>another<sp/>model_functor</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1model__functor_1a005ef2ab7b3e9480084922ae0f549df5" kindref="member">donateParameters</ref>(<ref refid="classGambit_1_1model__functor" kindref="compound">model_functor</ref><sp/>&amp;receiver);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/><sp/>///<sp/>Functors<sp/>specific<sp/>to<sp/>primary<sp/>ModelParameters<sp/>objects</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/>///</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/>///<sp/>These<sp/>allow<sp/>direct<sp/>access<sp/>to<sp/>the<sp/>functor<sp/>contents<sp/>via<sp/>a<sp/>raw<sp/>pointer,<sp/>so</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/>///<sp/>that<sp/>the<sp/>parameter<sp/>values<sp/>can<sp/>be<sp/>set<sp/>(not<sp/>allowed<sp/>via<sp/>safe<sp/>pointers).</highlight></codeline>
<codeline lineno="1107" refid="classGambit_1_1primary__model__functor" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1primary__model__functor" kindref="compound">primary_model_functor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1model__functor" kindref="compound">model_functor</ref></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1primary__model__functor_1a01a8ab94634bd6aee389b62b525e132e" kindref="member">primary_model_functor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(<ref refid="classGambit_1_1ModelParameters" kindref="compound">ModelParameters</ref><sp/>&amp;),<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref>&amp;);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="1116" refid="classGambit_1_1primary__model__functor_1a24b50e5ced07a66ee7703542a9e1d12f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1primary__model__functor_1a24b50e5ced07a66ee7703542a9e1d12f" kindref="member">~primary_model_functor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Functor<sp/>contents<sp/>raw<sp/>pointer<sp/>&quot;get&quot;<sp/>function</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Returns<sp/>a<sp/>raw<sp/>pointer<sp/>to<sp/>myValue,<sp/>so<sp/>that<sp/>the<sp/>contents<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>modified<sp/>(intended<sp/>for<sp/>setting<sp/>parameter<sp/>values<sp/>in<sp/>primary</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>ModelParameters<sp/>objects)</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ModelParameters" kindref="compound">ModelParameters</ref>*<sp/><ref refid="classGambit_1_1primary__model__functor_1a127f92c142d0e94bc32fe29a4075c552" kindref="member">getcontentsPtr</ref>();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__functors_hpp__)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Elements/include/gambit/Elements/functors.hpp"/>
  </compounddef>
</doxygen>
