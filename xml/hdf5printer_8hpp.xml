<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="hdf5printer_8hpp" kind="file" language="C++">
    <compoundname>hdf5printer.hpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iomanip</includes>
    <includes refid="baseprinter_8hpp" local="yes">gambit/Printers/baseprinter.hpp</includes>
    <includes refid="VertexBufferBase_8hpp" local="yes">gambit/Printers/VertexBufferBase.hpp</includes>
    <includes refid="VertexBuffer__mpitags_8hpp" local="yes">gambit/Printers/VertexBuffer_mpitags.hpp</includes>
    <includes refid="hdf5types_8hpp" local="yes">gambit/Printers/printers/hdf5types.hpp</includes>
    <includes refid="hdf5tools_8hpp" local="yes">gambit/Printers/printers/hdf5printer/hdf5tools.hpp</includes>
    <includes refid="VertexBufferNumeric1D__HDF5_8hpp" local="yes">gambit/Printers/printers/hdf5printer/VertexBufferNumeric1D_HDF5.hpp</includes>
    <includes refid="DataSetInterfaceScalar_8hpp" local="yes">gambit/Printers/printers/hdf5printer/DataSetInterfaceScalar.hpp</includes>
    <includes refid="yaml__options_8hpp" local="yes">gambit/Utils/yaml_options.hpp</includes>
    <includes refid="Utils_2include_2gambit_2Utils_2cats_8hpp" local="yes">gambit/Utils/cats.hpp</includes>
    <includes refid="logger_8hpp" local="yes">gambit/Logs/logger.hpp</includes>
    <includes refid="mpiwrapper_8hpp" local="yes">gambit/Utils/mpiwrapper.hpp</includes>
    <includes refid="new__mpi__datatypes_8hpp" local="yes">gambit/Utils/new_mpi_datatypes.hpp</includes>
    <includes local="no">boost/preprocessor/seq/for_each_i.hpp</includes>
    <includedby refid="hdf5printer_8cpp" local="yes">hdf5printer.cpp</includedby>
    <includedby refid="hdf5reader_8cpp" local="yes">hdf5reader.cpp</includedby>
    <includedby refid="hdf5printer_2print__overloads_8cpp" local="yes">print_overloads.cpp</includedby>
    <includedby refid="hdf5printer_2retrieve__overloads_8cpp" local="yes">retrieve_overloads.cpp</includedby>
    <incdepgraph>
      <node id="111">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>gambit/Backends/default_bossed_versions.hpp</label>
        <link refid="default__bossed__versions_8hpp"/>
      </node>
      <node id="108">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="113">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>gambit/Elements/daFunk.hpp</label>
        <link refid="daFunk_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>gambit/Elements/decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>gambit/Elements/flav_prediction.hpp</label>
        <link refid="flav__prediction_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>gambit/Elements/halo_types.hpp</label>
        <link refid="halo__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>gambit/Elements/higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>gambit/Elements/printable_types.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2printable__types_8hpp"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/Elements/shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gambit/Elements/spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>gambit/Elements/types_rollcall.hpp</label>
        <link refid="types__rollcall_8hpp"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>gambit/Elements/wimp_types.hpp</label>
        <link refid="wimp__types_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="67">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>gambit/Printers/VertexBufferBase.hpp</label>
        <link refid="VertexBufferBase_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>gambit/Printers/VertexBufferNumeric1D.hpp</label>
        <link refid="VertexBufferNumeric1D_8hpp"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>gambit/Printers/VertexBuffer_mpitags.hpp</label>
        <link refid="VertexBuffer__mpitags_8hpp"/>
      </node>
      <node id="10">
        <label>gambit/Printers/basebaseprinter.hpp</label>
        <link refid="basebaseprinter_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gambit/Printers/baseprinter.hpp</label>
        <link refid="baseprinter_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gambit/Printers/baseprintermanager.hpp</label>
        <link refid="baseprintermanager_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Printers/printer_id_tools.hpp</label>
        <link refid="printer__id__tools_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hdf5printer.hpp</label>
        <link refid="hdf5printer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>gambit/Printers/printers/hdf5printer/DataSetInterfaceBase.hpp</label>
        <link refid="DataSetInterfaceBase_8hpp"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>gambit/Printers/printers/hdf5printer/DataSetInterfaceScalar.hpp</label>
        <link refid="DataSetInterfaceScalar_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>gambit/Printers/printers/hdf5printer/VertexBufferNumeric1D_HDF5.hpp</label>
        <link refid="VertexBufferNumeric1D__HDF5_8hpp"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>gambit/Printers/printers/hdf5printer/hdf5tools.hpp</label>
        <link refid="hdf5tools_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>gambit/Printers/printers/hdf5types.hpp</label>
        <link refid="hdf5types_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gambit/ScannerBit/printable_types.hpp</label>
        <link refid="ScannerBit_2include_2gambit_2ScannerBit_2printable__types_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="38">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="64">
        <label>gambit/Utils/factory_registry.hpp</label>
        <link refid="factory__registry_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gambit/Utils/mpiwrapper.hpp</label>
        <link refid="mpiwrapper_8hpp"/>
      </node>
      <node id="62">
        <label>gambit/Utils/new_mpi_datatypes.hpp</label>
        <link refid="new__mpi__datatypes_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="75">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="79">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="51">
        <label>array</label>
      </node>
      <node id="100">
        <label>assert.h</label>
      </node>
      <node id="82">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="112">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="81">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="29">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="24">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="102">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="35">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="25">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="23">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="36">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="37">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="12">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="69">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="77">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="101">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="125">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="22">
        <label>boost/version.hpp</label>
      </node>
      <node id="45">
        <label>cassert</label>
      </node>
      <node id="85">
        <label>cfloat</label>
      </node>
      <node id="66">
        <label>chrono</label>
      </node>
      <node id="61">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>complex</label>
      </node>
      <node id="127">
        <label>cstddef</label>
      </node>
      <node id="122">
        <label>cstdint</label>
      </node>
      <node id="16">
        <label>cstring</label>
      </node>
      <node id="50">
        <label>deque</label>
      </node>
      <node id="40">
        <label>exception</label>
      </node>
      <node id="49">
        <label>forward_list</label>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="115">
        <label>gambit/Backends/backend_types_rollcall.hpp</label>
      </node>
      <node id="116">
        <label>gambit/Elements/module_types_rollcall.hpp</label>
      </node>
      <node id="117">
        <label>gambit/Models/model_types_rollcall.hpp</label>
      </node>
      <node id="80">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="104">
        <label>gsl/gsl_errno.h</label>
      </node>
      <node id="103">
        <label>gsl/gsl_integration.h</label>
      </node>
      <node id="124">
        <label>hdf5.h</label>
      </node>
      <node id="8">
        <label>iomanip</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="60">
        <label>limits</label>
      </node>
      <node id="48">
        <label>list</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="123">
        <label>memory</label>
      </node>
      <node id="83">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="15">
        <label>omp.h</label>
      </node>
      <node id="63">
        <label>ostream</label>
      </node>
      <node id="39">
        <label>set</label>
      </node>
      <node id="5">
        <label>sstream</label>
      </node>
      <node id="92">
        <label>stdexcept</label>
      </node>
      <node id="95">
        <label>stdio.h</label>
      </node>
      <node id="96">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="20">
        <label>unistd.h</label>
      </node>
      <node id="46">
        <label>unordered_map</label>
      </node>
      <node id="47">
        <label>unordered_set</label>
      </node>
      <node id="41">
        <label>utility</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="58">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>hdf5printer.hpp</label>
        <link refid="hdf5printer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hdf5printer.cpp</label>
        <link refid="hdf5printer_8cpp"/>
      </node>
      <node id="3">
        <label>hdf5reader.cpp</label>
        <link refid="hdf5reader_8cpp"/>
      </node>
      <node id="4">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer_2print__overloads_8cpp"/>
      </node>
      <node id="5">
        <label>retrieve_overloads.cpp</label>
        <link refid="hdf5printer_2retrieve__overloads_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" prot="public">Gambit::Printers::H5P_LocalBufferManager</innerclass>
    <innerclass refid="classGambit_1_1Printers_1_1HDF5Printer" prot="public">Gambit::Printers::HDF5Printer</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1Printers">Gambit::Printers</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="hdf5printer_8hpp_1aa6be275a705cff5b535d3808c338add0" prot="public" static="no">
        <name>DECLARE_PRINT</name>
        <param><defname>r</defname></param>
        <param><defname>data</defname></param>
        <param><defname>i</defname></param>
        <param><defname>elem</defname></param>
        <initializer>void _print(elem const&amp;, const std::string&amp;, const int, const uint, const ulong);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="167" column="17" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" prot="public" static="no">
        <name>BT</name>
        <param><defname>TYPE</defname></param>
        <initializer>VertexBufferNumeric1D_HDF5&lt;TYPE,BUFFERLENGTH&gt;</initializer>
        <briefdescription>
<para>Buffer manager objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="199" column="17" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" prot="public" static="no">
        <name>DEFINE_BUFFMAN_GETTER</name>
        <param><defname>TYPE</defname></param>
        <initializer>      template&lt;&gt;                                                               \
      inline H5P_LocalBufferManager&lt;VertexBufferNumeric1D_HDF5&lt;TYPE,BUFFERLENGTH&gt;&gt;&amp; \
       HDF5Printer::get_mybuffermanager&lt;TYPE&gt;(ulong pointID, uint mpirank) \
      {                                                                        \
         /* If the buffermanger hasn&apos;t been initialised, do so now */          \
         <ref refid="DarkSUSY__MSSM__6__2__5_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" kindref="member">if</ref>( not <ref refid="Utils_2include_2gambit_2Utils_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(hdf5_localbufferman_,TYPE).ready() )                      \
         {                                                                     \
            <ref refid="Utils_2include_2gambit_2Utils_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(hdf5_localbufferman_,TYPE).init(this,synchronised);            \
         }                                                                     \
                                                                               \
         /* While we are at it, check <ref refid="DarkSUSY__MSSM__6__2__5_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" kindref="member">if</ref> the buffers need to be                \
            synchronised to a new point. But only <ref refid="DarkSUSY__MSSM__6__2__5_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" kindref="member">if</ref> this printer is running   \
            in &quot;synchronised&quot; mode. */                                         \
         <ref refid="DarkSUSY__MSSM__6__2__5_8cpp_1a4cc6f5317481c4b2f46fb215ba938f45" kindref="member">if</ref>(synchronised)                                                      \
         {                                                                     \
           check_for_new_point(PPIDpair(pointID, mpirank));                    \
         }                                                                     \
         return <ref refid="Utils_2include_2gambit_2Utils_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(hdf5_localbufferman_,TYPE);                                \
      }</initializer>
        <briefdescription>
<para>Macro to help define the buffer manager getter functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp" line="416" column="13" bodyfile="Printers/include/gambit/Printers/printers/hdf5printer.hpp" bodystart="416" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>HDF5 interface printer class declaration</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 May</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>HDF5<sp/>interface<sp/>printer<sp/>class<sp/>declaration</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>May</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__hdf5printer_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__hdf5printer_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gambit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="baseprinter_8hpp" kindref="compound">gambit/Printers/baseprinter.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="VertexBufferBase_8hpp" kindref="compound">gambit/Printers/VertexBufferBase.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="VertexBuffer__mpitags_8hpp" kindref="compound">gambit/Printers/VertexBuffer_mpitags.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hdf5types_8hpp" kindref="compound">gambit/Printers/printers/hdf5types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hdf5tools_8hpp" kindref="compound">gambit/Printers/printers/hdf5printer/hdf5tools.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="VertexBufferNumeric1D__HDF5_8hpp" kindref="compound">gambit/Printers/printers/hdf5printer/VertexBufferNumeric1D_HDF5.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DataSetInterfaceScalar_8hpp" kindref="compound">gambit/Printers/printers/hdf5printer/DataSetInterfaceScalar.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="yaml__options_8hpp" kindref="compound">gambit/Utils/yaml_options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Utils_2include_2gambit_2Utils_2cats_8hpp" kindref="compound">gambit/Utils/cats.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">gambit/Logs/logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPI<sp/>bindings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpiwrapper_8hpp" kindref="compound">gambit/Utils/mpiwrapper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="new__mpi__datatypes_8hpp" kindref="compound">gambit/Utils/new_mpi_datatypes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BOOST_PP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/seq/for_each_i.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>HDEBUG_MODE<sp/>//<sp/>&quot;High<sp/>output&quot;<sp/>debug<sp/>mode<sp/>(info<sp/>with<sp/>every<sp/>single<sp/>print<sp/>command)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Printers</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>controlling<sp/>the<sp/>length<sp/>of<sp/>all<sp/>the<sp/>standard<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>BUFFERLENGTH<sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//<sp/>Change<sp/>to<sp/>10000<sp/>or<sp/>something.<sp/>Currently<sp/>cannot<sp/>change<sp/>this<sp/>dynamically<sp/>though,<sp/>sorry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Max<sp/>number<sp/>of<sp/>PPIDpairs<sp/>to<sp/>be<sp/>tracked</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>i.e.<sp/>chunks<sp/>of<sp/>RA<sp/>output<sp/>longer<sp/>than<sp/>this<sp/>can<sp/>potentially<sp/>contain<sp/>multiple<sp/>writes<sp/>to<sp/>the<sp/>same<sp/>point.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>It<sp/>is<sp/>up<sp/>to<sp/>the<sp/>combine<sp/>script<sp/>to<sp/>apply<sp/>the<sp/>last<sp/>scheduled<sp/>write<sp/>preferentially.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>MAX_PPIDPAIRS<sp/>=<sp/>10*BUFFERLENGTH;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Helpful<sp/>typedefs</highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Type<sp/>of<sp/>the<sp/>global<sp/>buffer<sp/>map</highlight></codeline>
<codeline lineno="70" refid="namespaceGambit_1_1Printers_1a19d26e29eabb434b05e434343aadba6b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;VBIDpair,<sp/>VertexBufferBase*&gt;<sp/><ref refid="namespaceGambit_1_1Printers_1a19d26e29eabb434b05e434343aadba6b" kindref="member">BaseBufferMap</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Helper<sp/>function<sp/>to<sp/>check<sp/>if<sp/>a<sp/>VertexBuffer<sp/>key<sp/>already<sp/>exists<sp/>in<sp/>a<sp/>map</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="74" refid="namespaceGambit_1_1Printers_1af767fa1930017427eed70f5dc4da60ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1Printers_1af767fa1930017427eed70f5dc4da60ea" kindref="member">error_if_key_exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;T,U&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tag)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;T,U&gt;::const_iterator<sp/>it<sp/>=<sp/>m.find(key);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>==<sp/>m.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Supplied<sp/>key<sp/>for<sp/>a<sp/>VertexBuffer<sp/>already<sp/>exists<sp/>in<sp/>map<sp/>(tag=&quot;</highlight><highlight class="normal">&lt;&lt;tag&lt;&lt;</highlight><highlight class="stringliteral">&quot;)!<sp/>This<sp/>is<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>HDF5Printer<sp/>(or<sp/>Reader)<sp/>class,<sp/>please<sp/>report<sp/>it.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>foward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HDF5Printer;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Keeps<sp/>track<sp/>of<sp/>vertex<sp/>buffers<sp/>local<sp/>to<sp/>a<sp/>print<sp/>function</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>BuffType&gt;</highlight></codeline>
<codeline lineno="92" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffers<sp/>local<sp/>to<sp/>a<sp/>print<sp/>function.<sp/>Access<sp/>whichever<sp/>ones<sp/>match<sp/>the<sp/>IDcode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;VBIDpair,<sp/>BuffType&gt;<sp/>local_buffers;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>&quot;parent&quot;<sp/>HDF5Printer<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>use<sp/>two-stage<sp/>initialisation<sp/>because<sp/>the<sp/>automated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declaration<sp/>of<sp/>new<sp/>buffer<sp/>managers<sp/>requires<sp/>a<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref>*<sp/>printer;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>check<sp/>if<sp/>a<sp/>print<sp/>function<sp/>has<sp/>been<sp/>run<sp/>before</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(map<sp/>is<sp/>from<sp/>IDcodes<sp/>to<sp/>flags)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;VBIDpair,bool&gt;<sp/>first_print;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>trigger<sp/>treatment<sp/>of<sp/>buffers<sp/>as<sp/>synchronised<sp/>or<sp/>not</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>i.e.<sp/>couples<sp/>buffers<sp/>to<sp/>the<sp/>scanner<sp/>iteration<sp/>synchronisation.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>synchronised;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Buffer<sp/>access<sp/>mode<sp/>(&apos;r&apos;/&apos;w&apos;)</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>access;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="117" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a2e9be43662976a7a4605b3cc9cb130dd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a2e9be43662976a7a4605b3cc9cb130dd" kindref="member">H5P_LocalBufferManager</ref>()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>printer(NULL)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>synchronised(true)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>access(</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialise<sp/>the<sp/>buffer<sp/>(attach<sp/>it<sp/>to<sp/>a<sp/>printer<sp/>and<sp/>set<sp/>its<sp/>behaviour)</highlight></codeline>
<codeline lineno="124" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1aaccbeb63140b24b32ef15e0307327ed1" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1aaccbeb63140b24b32ef15e0307327ed1" kindref="member">init</ref>(<ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>synchronised);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Signal<sp/>whether<sp/>initialisation<sp/>has<sp/>occured</highlight></codeline>
<codeline lineno="127" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a537a5d302812468432037de655b1cad5" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a537a5d302812468432037de655b1cad5" kindref="member">ready</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(printer==NULL){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>a<sp/>buffer<sp/>for<sp/>an<sp/>IDcode/auxilliary-index<sp/>pair</highlight></codeline>
<codeline lineno="130" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a06b9ff008567f63eee21c439f47a5e84" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BuffType&amp;<sp/><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a06b9ff008567f63eee21c439f47a5e84" kindref="member">get_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>The<sp/>main<sp/>printer<sp/>class<sp/>for<sp/>output<sp/>to<sp/>HDF5<sp/>format</highlight></codeline>
<codeline lineno="136" refid="classGambit_1_1Printers_1_1HDF5Printer" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">BasePrinter</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor<sp/>(for<sp/>construction<sp/>via<sp/>inifile<sp/>options)</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a66ef433b191ed0a0eb092cce9c09fc9a" kindref="member">HDF5Printer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>&amp;,<sp/><ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">BasePrinter</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>primary<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Tasks<sp/>common<sp/>to<sp/>the<sp/>various<sp/>constructors</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a9f04b780d15414e1c231f5ba29f7319d" kindref="member">common_constructor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>&amp;);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overload<sp/>the<sp/>base<sp/>class<sp/>virtual<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1adc6a983b9217ed5a5be723a4d377fe47" kindref="member">~HDF5Printer</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Virtual<sp/>function<sp/>overloads:</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@{</highlight></codeline>
<codeline lineno="151"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialisation<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>by<sp/>dependency<sp/>resolver,<sp/>which<sp/>supplies<sp/>the<sp/>functors<sp/>with<sp/>a<sp/>vector<sp/>of<sp/>VertexIDs<sp/>whose<sp/>requiresPrinting<sp/>flags<sp/>are<sp/>set<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a5fc68fd41e63749711758ede8b25ce21" kindref="member">initialise</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1af4e33f85ace326238c5137b75438a850" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a8ff9e522536209f310a435eb0b8bcf0c" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1aa829f36d631d7f20e0499d633944f830" kindref="member">finalise</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>abnormal=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>options<sp/>required<sp/>to<sp/>construct<sp/>a<sp/>reader<sp/>object<sp/>that<sp/>can<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>previous<sp/>output<sp/>of<sp/>this<sp/>printer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref><sp/>resume_reader_options();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@}</highlight></codeline>
<codeline lineno="164"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@{<sp/>Print<sp/>functions</highlight></codeline>
<codeline lineno="166"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1Printers_1_1BasePrinter_1acec290abd094f645c538be69aa1928cd" kindref="member">BasePrinter::_print</ref>;<sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>compiler<sp/>we<sp/>are<sp/>using<sp/>some<sp/>of<sp/>the<sp/>base<sp/>class<sp/>overloads<sp/>of<sp/>this<sp/>on<sp/>purpose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>DECLARE_PRINT(r,data,i,elem)<sp/>void<sp/>_print(elem<sp/>const&amp;,<sp/>const<sp/>std::string&amp;,<sp/>const<sp/>int,<sp/>const<sp/>uint,<sp/>const<sp/>ulong);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_SEQ_FOR_EACH_I(DECLARE_PRINT,<sp/>,<sp/>HDF5_TYPES)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifndef<sp/>SCANNER_STANDALONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_SEQ_FOR_EACH_I(DECLARE_PRINT,<sp/>,<sp/>HDF5_BACKEND_TYPES)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>DECLARE_PRINT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@}</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>HDF5Printer-specific<sp/>functions</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>an<sp/>output<sp/>stream<sp/>is<sp/>already<sp/>managed<sp/>by<sp/>some<sp/>buffer<sp/>in<sp/>some<sp/>printer</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1adda2ff058c51f04b80988377f582708a" kindref="member">is_stream_managed</ref>(<ref refid="structGambit_1_1Printers_1_1VBIDpair" kindref="compound">VBIDpair</ref>&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>pointer<sp/>to<sp/>HDF5<sp/>location<sp/>to<sp/>which<sp/>datasets<sp/>are<sp/>added</highlight></codeline>
<codeline lineno="181"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a62f0a6c84c7ff6fd5e37309ec3bd9572" kindref="member">get_location</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>get_RA_location()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>new<sp/>buffer<sp/>to<sp/>the<sp/>global<sp/>list</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a8b7673bb2dfa1a9040d98760c998ce7b" kindref="member">insert_buffer</ref>(<ref refid="structGambit_1_1Printers_1_1VBIDpair" kindref="compound">VBIDpair</ref>&amp;<sp/>key,<sp/><ref refid="classGambit_1_1Printers_1_1VertexBufferBase" kindref="compound">VertexBufferBase</ref>&amp;<sp/>newbuffer);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>number<sp/>of<sp/>pointIDs<sp/>know<sp/>to<sp/>this<sp/>printer</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>(should<sp/>correspond<sp/>to<sp/>the<sp/>number<sp/>of<sp/>&quot;appends&quot;<sp/>each<sp/>active<sp/>buffer<sp/>has<sp/>received)</highlight></codeline>
<codeline lineno="189" refid="classGambit_1_1Printers_1_1HDF5Printer_1ad85baf4e95d49dc93a614a3cf65c0cce" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1ad85baf4e95d49dc93a614a3cf65c0cce" kindref="member">get_sync_pos</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sync_pos;<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Buffer<sp/>manager<sp/>objects</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Need<sp/>one<sp/>for<sp/>every<sp/>directly<sp/>retrievable<sp/>type,<sp/>and<sp/>a<sp/>specialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>of<sp/>&apos;get_mybuffermanager&apos;<sp/>to<sp/>access<sp/>it.<sp/>But<sp/>the<sp/>latter<sp/>have<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>defined<sp/>outside<sp/>the<sp/>class<sp/>declaration,<sp/>so<sp/>they<sp/>can<sp/>be<sp/>found<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Could<sp/>create<sp/>all<sp/>these<sp/>with<sp/>a<sp/>macro,<sp/>but<sp/>I<sp/>am<sp/>sick<sp/>of<sp/>macros<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>will<sp/>just<sp/>do<sp/>it<sp/>the<sp/>&quot;old-fashioned&quot;<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>BT(TYPE)<sp/>VertexBufferNumeric1D_HDF5&lt;TYPE,BUFFERLENGTH&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)&gt;<sp/>hdf5_localbufferman_int;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(uint<sp/><sp/><sp/><sp/><sp/>)&gt;<sp/>hdf5_localbufferman_uint;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)&gt;<sp/>hdf5_localbufferman_long;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(ulong<sp/><sp/><sp/><sp/>)&gt;<sp/>hdf5_localbufferman_ulong;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(longlong<sp/>)&gt;<sp/>hdf5_localbufferman_longlong;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(ulonglong)&gt;<sp/>hdf5_localbufferman_ulonglong;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>)&gt;<sp/>hdf5_localbufferman_float;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>)&gt;<sp/>hdf5_localbufferman_double;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Function<sp/>used<sp/>by<sp/>print<sp/>functions<sp/>to<sp/>retrieve<sp/>their<sp/>local<sp/>buffer<sp/>manager<sp/>object</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5P_LocalBufferManager&lt;<ref refid="hdf5printer_8hpp_1aa212275834ba18126a64e0b4f8831730" kindref="member">BT</ref>(T)&gt;&amp;<sp/>get_mybuffermanager(ulong,<sp/>uint);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>BT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>PPIDpair<sp/>to<sp/>global<sp/>index<sp/>list</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_PPID_to_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PPIDpair&amp;);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Completely<sp/>reset<sp/>the<sp/>PPIDlists<sp/>(e.g.<sp/>used<sp/>when<sp/>printer<sp/>is<sp/>reset)</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_PPID_lists();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Ask<sp/>the<sp/>printer<sp/>for<sp/>the<sp/>highest<sp/>ID<sp/>number<sp/>known<sp/>for<sp/>a<sp/>given<sp/>rank</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>process<sp/>(needed<sp/>for<sp/>resuming,<sp/>so<sp/>the<sp/>scanner<sp/>can<sp/>resume<sp/>assigning</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>point<sp/>ID<sp/>from<sp/>this<sp/>value.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>long<sp/>getHighestPointID(const<sp/>int<sp/>rank);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>PPIDpair<sp/>exists<sp/>in<sp/>global<sp/>index<sp/>list</highlight></codeline>
<codeline lineno="227"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>seen_PPID_before(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PPIDpair&amp;<sp/>ppid);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Function<sp/>to<sp/>ensure<sp/>buffers<sp/>are<sp/>all<sp/>synchronised<sp/>to<sp/>the<sp/>same<sp/>absolute<sp/>position</highlight></codeline>
<codeline lineno="230"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>synchronise_buffers();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>For<sp/>debugging:<sp/>check<sp/>that<sp/>buffers<sp/>are<sp/>synced<sp/>correctly</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>sets<sp/>whether<sp/>&quot;perfect&quot;<sp/>sync<sp/>is<sp/>required,<sp/>or<sp/>whether</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>some<sp/>buffers<sp/>can<sp/>be<sp/>ahead<sp/>by<sp/>one<sp/>slot<sp/>(due<sp/>to<sp/>having</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>performed<sp/>prints<sp/>that<sp/>other<sp/>buffers<sp/>have<sp/>not<sp/>yet<sp/>done)</highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_sync(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sync_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkall);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WITH_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>MPI<sp/>communicator<sp/>object<sp/>used<sp/>by<sp/>this<sp/>printer</highlight></codeline>
<codeline lineno="241"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMPI::Comm&amp;<sp/>get_Comm()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myComm;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>the<sp/>buffers<sp/>are<sp/>full<sp/>and<sp/>waiting<sp/>to<sp/>be<sp/>emptied</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>By<sp/>default<sp/>this<sp/>only<sp/>empties<sp/>buffers<sp/>if<sp/>they<sp/>are<sp/>full.<sp/>Use</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>flag<sp/>to<sp/>force<sp/>the<sp/>flush<sp/>for<sp/>the<sp/>finalise<sp/>buffer<sp/>dumps.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>empty_sync_buffers(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>whether<sp/>printing<sp/>to<sp/>a<sp/>new<sp/>parameter<sp/>space<sp/>point<sp/>is<sp/>about<sp/>to<sp/>occur</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>and<sp/>perform<sp/>adjustments<sp/>needed<sp/>to<sp/>prepare<sp/>the<sp/>printer.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_for_new_point(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PPIDpair&amp;);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Retrieve<sp/>index<sp/>from<sp/>global<sp/>lookup<sp/>table,<sp/>with<sp/>error<sp/>checking</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_global_index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ulong<sp/>pointID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>mpirank);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>name<sp/>of<sp/>this<sp/>printer</highlight></codeline>
<codeline lineno="257"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>get_printer_name()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>printer_name;<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>number<sp/>of<sp/>RA<sp/>write<sp/>locations<sp/>known<sp/>to<sp/>the<sp/>primary<sp/>printer</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>NOTE:<sp/>the<sp/>meaning<sp/>of<sp/>this<sp/>has<sp/>changed<sp/>slightly;<sp/>it<sp/>is<sp/>the<sp/>number<sp/>of<sp/>queued</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>up<sp/>RA<sp/>write<sp/>commands<sp/>that<sp/>should<sp/>exist<sp/>in<sp/>the<sp/>output<sp/>datasets.<sp/>The<sp/>primary</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>printer<sp/>no<sp/>longer<sp/>tracks<sp/>all<sp/>of<sp/>the<sp/>IDs<sp/>for<sp/>every<sp/>RA<sp/>write<sp/>command.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_N_RApointIDs()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>primary_printer-&gt;reverse_global_index_lookup.size()<sp/>+<sp/>primary_printer-&gt;RA_dset_offset;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Move<sp/>head<sp/>dataset<sp/>sync<sp/>position</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_sync_pos()<sp/>{<sp/>sync_pos+=1;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Clear<sp/>previous<sp/>points<sp/>list</highlight></codeline>
<codeline lineno="269"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear_previous_points()<sp/>{<sp/>std::vector&lt;PPIDpair&gt;().swap(previous_points);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>This<sp/>technique<sp/>also<sp/>shrinks<sp/>the<sp/>capacity<sp/>of<sp/>the<sp/>vector,<sp/>which<sp/>&apos;clear&apos;<sp/>does<sp/>not<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Scan<sp/>for<sp/>existing<sp/>temporary<sp/>files,<sp/>in<sp/>preparation<sp/>for<sp/>combining<sp/>them</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Should<sp/>only<sp/>do<sp/>this<sp/>if<sp/>scan<sp/>is<sp/>resuming,<sp/>and<sp/>if<sp/>we<sp/>are<sp/>process<sp/>rank<sp/>0.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prepare_and_combine_tmp_files();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PPIDpair<sp/>get_highest_PPID_from_HDF5(hid_t<sp/>group_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;unsigned<sp/>long,<sp/>unsigned<sp/>long<sp/>long<sp/>int&gt;<sp/>get_highest_PPID_from_HDF5(hid_t<sp/>group_id);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Search<sp/>the<sp/>output<sp/>directory<sp/>for<sp/>temporary<sp/>files<sp/>(pre-combination)</highlight></codeline>
<codeline lineno="279"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>find_temporary_files(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_if_inconsistent=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Combine<sp/>temporary<sp/>hdf5<sp/>output<sp/>files<sp/>from<sp/>each<sp/>process<sp/>into<sp/>a<sp/>single<sp/>coherent<sp/>hdf5<sp/>file.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>combine_output_py(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>tmp_files,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finalcombine);<sp/></highlight><highlight class="comment">//<sp/>Python<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>combine_output(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>tmp_files,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finalcombine);<sp/></highlight><highlight class="comment">//<sp/>Greg<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="286"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Helper<sp/>print<sp/>functions</highlight></codeline>
<codeline lineno="289"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>reduce<sp/>repetition<sp/>in<sp/>definitions<sp/>of<sp/>virtual<sp/>function<sp/>overloads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(useful<sp/>since<sp/>there<sp/>is<sp/>no<sp/>automatic<sp/>type<sp/>conversion<sp/>possible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>template_print(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IDcode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpirank,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pointID)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>buffer<sp/>manager<sp/>for<sp/>buffers<sp/>with<sp/>this<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>buffer_manager<sp/>=<sp/>get_mybuffermanager&lt;T&gt;(pointID,mpirank);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>a<sp/>buffer<sp/>from<sp/>the<sp/>manager<sp/>corresponding<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>selected_buffer<sp/>=<sp/>buffer_manager.get_buffer(IDcode,<sp/>0,<sp/>label);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>HDEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;myRank&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>printer<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;get_printer_name()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>printing<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;label&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;value&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;myRank&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>printer<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;get_printer_name()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>pointID=&quot;</highlight><highlight class="normal">&lt;&lt;pointID&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>mpirank=&quot;</highlight><highlight class="normal">&lt;&lt;mpirank&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PPIDpair<sp/>ppid(pointID,mpirank);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(synchronised)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>selected<sp/>buffer<sp/>(&quot;just<sp/>works&quot;<sp/>for<sp/>simple<sp/>numeric<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_buffer.append(value,ppid);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>up<sp/>a<sp/>desynchronised<sp/>(&quot;random<sp/>access&quot;)<sp/>dataset<sp/>write<sp/>to<sp/>previous<sp/>scan<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>seen_PPID_before(ppid))</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_PPID_to_list(ppid);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_buffer.RA_write(value,ppid,primary_printer-&gt;global_index_lookup);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>names<sp/>for<sp/>output<sp/>file<sp/>and<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmp_comb_file;<sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>combined<sp/>output<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmpfile;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>filename<sp/>(unique<sp/>to<sp/>each<sp/>process)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>finalfile;<sp/></highlight><highlight class="comment">//<sp/>Combined<sp/>results<sp/>moved<sp/>here<sp/>only<sp/>upon<sp/>successful<sp/>scan<sp/>completion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>group;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDF5<sp/>group<sp/>location<sp/>to<sp/>store<sp/>datasets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>for<sp/>HDF5<sp/>files<sp/>and<sp/>groups<sp/>containing<sp/>the<sp/>datasets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>file_id;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>group_id;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>RA_group_id;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>to<sp/>a<sp/>location<sp/>in<sp/>a<sp/>HDF5<sp/>to<sp/>which<sp/>the<sp/>datasets<sp/>will<sp/>be<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>a<sp/>file<sp/>or<sp/>a<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>location_id;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>RA_location_id;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Pointer<sp/>to<sp/>the<sp/>primary<sp/>printer<sp/>object</highlight></codeline>
<codeline lineno="340"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(if<sp/>this<sp/>is<sp/>an<sp/>auxilliary<sp/>printer,<sp/>else<sp/>it<sp/>is<sp/>&quot;this&quot;<sp/>//NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1a66ef433b191ed0a0eb092cce9c09fc9a" kindref="member">HDF5Printer</ref>*<sp/>primary_printer<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>specify<sp/>if<sp/>this<sp/>is<sp/>the<sp/>primary<sp/>printer<sp/>or<sp/>not</highlight></codeline>
<codeline lineno="344"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_primary_printer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>disable<sp/>combination<sp/>of<sp/>hdf5<sp/>output<sp/>(user<sp/>will<sp/>have<sp/>to<sp/>run<sp/>the<sp/>combination<sp/>routines<sp/>manually)</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disable_combine_routines<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>containing<sp/>pointers<sp/>to<sp/>all<sp/>VertexBuffers<sp/>contained<sp/>in<sp/>this<sp/>printer</highlight></codeline>
<codeline lineno="350"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Each<sp/>buffer<sp/>contains<sp/>a<sp/>bool<sp/>to<sp/>indicate<sp/>whether<sp/>it<sp/>has<sp/>done<sp/>an<sp/>&quot;append&quot;<sp/>for<sp/>the<sp/>point<sp/>&quot;lastPointID&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1a19d26e29eabb434b05e434343aadba6b" kindref="member">BaseBufferMap</ref><sp/>all_my_buffers;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>ID<sp/>of<sp/>the<sp/>point<sp/>that<sp/>this<sp/>printer<sp/>is<sp/>currently<sp/>working<sp/>on.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>this<sp/>so<sp/>that<sp/>we<sp/>can<sp/>compute<sp/>when<sp/>(at<sp/>least<sp/>initial)<sp/>writing<sp/>to<sp/>a<sp/>model<sp/>point<sp/>has<sp/>ceased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PPIDpair<sp/>lastPointID;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Current<sp/>absolute<sp/>dataset<sp/>index</highlight></codeline>
<codeline lineno="358"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>this<sp/>location<sp/>in<sp/>the<sp/>output<sp/>dataset<sp/>is<sp/>currently<sp/>the<sp/>target<sp/>of<sp/>print<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>current_dset_position;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>from<sp/>pointID,thread<sp/>pairs<sp/>to<sp/>absolute<sp/>dataset<sp/>indices</highlight></codeline>
<codeline lineno="362"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Needed<sp/>for<sp/>dataset<sp/>writes<sp/>which<sp/>return<sp/>to<sp/>old<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;PPIDpair,<sp/>unsigned<sp/>long&gt;<sp/>global_index_lookup;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matching<sp/>vector<sp/>for<sp/>the<sp/>above,<sp/>for<sp/>reverse<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PPIDpair&gt;<sp/>reverse_global_index_lookup;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Offset<sp/>needed<sp/>to<sp/>be<sp/>added<sp/>to<sp/>the<sp/>reverse<sp/>lookup<sp/>in</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>order<sp/>for<sp/>it<sp/>to<sp/>match<sp/>the<sp/>output<sp/>dataset<sp/>position<sp/>correctly</highlight></codeline>
<codeline lineno="370"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>RA_dset_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Label<sp/>for<sp/>printer,<sp/>mostly<sp/>for<sp/>more<sp/>helpful<sp/>error<sp/>messages</highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>printer_name;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>MPI<sp/>rank<sp/>and<sp/>size</highlight></codeline>
<codeline lineno="376"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myRank;<sp/><sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>even<sp/>without<sp/>MPI<sp/>available,<sp/>for<sp/>some<sp/>default<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpiSize;<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WITH_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gambit<sp/>MPI<sp/>communicator<sp/>context<sp/>for<sp/>use<sp/>within<sp/>the<sp/>hdf5<sp/>printer<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMPI::Comm<sp/>myComm;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>specify<sp/>whether<sp/>all<sp/>buffers<sp/>created<sp/>by<sp/>this<sp/>printer</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>should<sp/>be<sp/>synchronised<sp/>and<sp/>iterated<sp/>along<sp/>with<sp/>the<sp/>Gambit</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>scanner<sp/>iterations.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>synchronised<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Flag<sp/>to<sp/>trigger<sp/>&quot;global&quot;<sp/>write<sp/>mode<sp/>for<sp/>printer</highlight></codeline>
<codeline lineno="389"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>print<sp/>data<sp/>will<sp/>not<sp/>be<sp/>associated<sp/>with<sp/>parameter<sp/>space<sp/>points,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>will<sp/>be<sp/>&quot;global&quot;<sp/>data<sp/>about<sp/>the<sp/>whole<sp/>scan<sp/>(e.g.<sp/>max<sp/>log<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found,<sp/>scan<sp/>statistics,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>global<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Position<sp/>to<sp/>start<sp/>writing<sp/>new<sp/>output.<sp/>Should<sp/>be<sp/>zero<sp/>unless<sp/>we<sp/>are<sp/>in</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>resume<sp/>mode.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>long<sp/>startpos<sp/>=<sp/>0;<sp/>//<sp/>OBSOLETE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Write<sp/>position<sp/>to<sp/>which<sp/>output<sp/>buffers<sp/>should<sp/>be<sp/>synchronised</highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sync_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>In<sp/>resume<sp/>mode:<sp/>storage<sp/>for<sp/>PPIDpairs<sp/>harvested<sp/>from<sp/>previous<sp/>scan<sp/>data</highlight></codeline>
<codeline lineno="402"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PPIDpair&gt;<sp/>previous_points;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Things<sp/>which<sp/>other<sp/>printers<sp/>need<sp/>access<sp/>to</highlight></codeline>
<codeline lineno="406"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Map<sp/>containing<sp/>pointers<sp/>to<sp/>all<sp/>VertexBuffers,<sp/>across<sp/>all<sp/>printers</highlight></codeline>
<codeline lineno="408"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Each<sp/>buffer<sp/>contains<sp/>a<sp/>bool<sp/>to<sp/>indicate<sp/>whether<sp/>it<sp/>has<sp/>done<sp/>an<sp/>&quot;append&quot;<sp/>for<sp/>the<sp/>point<sp/>&quot;lastPointID&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classGambit_1_1Printers_1_1HDF5Printer_1add6f6338f4020db4bf6fe4a7595757a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1a19d26e29eabb434b05e434343aadba6b" kindref="member">BaseBufferMap</ref><sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer_1add6f6338f4020db4bf6fe4a7595757a6" kindref="member">all_buffers</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Macro<sp/>to<sp/>help<sp/>define<sp/>the<sp/>buffer<sp/>manager<sp/>getter<sp/>functions</highlight></codeline>
<codeline lineno="414"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>use<sp/>it<sp/>outside<sp/>the<sp/>class<sp/>body,<sp/>and<sp/>be<sp/>sure<sp/>to<sp/>typedef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>types<sp/>which<sp/>can<sp/>not<sp/>form<sp/>part<sp/>of<sp/>a<sp/>valid<sp/>variable<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DEFINE_BUFFMAN_GETTER(TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>inline<sp/>H5P_LocalBufferManager&lt;VertexBufferNumeric1D_HDF5&lt;TYPE,BUFFERLENGTH&gt;&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HDF5Printer::get_mybuffermanager&lt;TYPE&gt;(ulong<sp/>pointID,<sp/>uint<sp/>mpirank)<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>buffermanger<sp/>hasn&apos;t<sp/>been<sp/>initialised,<sp/>do<sp/>so<sp/>now<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>not<sp/>CAT(hdf5_localbufferman_,TYPE).ready()<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAT(hdf5_localbufferman_,TYPE).init(this,synchronised);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>While<sp/>we<sp/>are<sp/>at<sp/>it,<sp/>check<sp/>if<sp/>the<sp/>buffers<sp/>need<sp/>to<sp/>be<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synchronised<sp/>to<sp/>a<sp/>new<sp/>point.<sp/>But<sp/>only<sp/>if<sp/>this<sp/>printer<sp/>is<sp/>running<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&quot;synchronised&quot;<sp/>mode.<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(synchronised)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_for_new_point(PPIDpair(pointID,<sp/>mpirank));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>CAT(hdf5_localbufferman_,TYPE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(uint<sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(ulong<sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(longlong<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(ulonglong)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hdf5printer_8hpp_1aa68e8221caa6ad750724cb2ddf77d190" kindref="member">DEFINE_BUFFMAN_GETTER</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>@{<sp/>Templated<sp/>H5P_LocalBufferManager<sp/>member<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1aaccbeb63140b24b32ef15e0307327ed1" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;class<sp/>BuffType&gt;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager" kindref="compound">H5P_LocalBufferManager</ref>&lt;BuffType&gt;::init(<ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sync)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>global<sp/>behaviour<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synchronised<sp/>=<sp/>sync;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>attach<sp/>to<sp/>printer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p==NULL)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Tried<sp/>to<sp/>initialise<sp/>a<sp/>H5P_LocalBufferManager<sp/>with<sp/>a<sp/>null<sp/>pointer!<sp/>Need<sp/>an<sp/>actual<sp/>HDF5Printer<sp/>object<sp/>in<sp/>order<sp/>to<sp/>work.<sp/>This<sp/>is<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>HDF5Printer<sp/>class,<sp/>please<sp/>report<sp/>it.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>ready())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Tried<sp/>to<sp/>initialise<sp/>a<sp/>H5P_LocalBufferManager<sp/>twice!<sp/>This<sp/>is<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>HDF5Printer<sp/>class,<sp/>please<sp/>report<sp/>it.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470" refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a06b9ff008567f63eee21c439f47a5e84" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>BuffType&gt;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>BuffType&amp;<sp/><ref refid="classGambit_1_1Printers_1_1H5P__LocalBufferManager_1a06b9ff008567f63eee21c439f47a5e84" kindref="member">H5P_LocalBufferManager&lt;BuffType&gt;::get_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertexID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aux_i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>ready())<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Tried<sp/>to<sp/>retrieve<sp/>a<sp/>buffer<sp/>from<sp/>a<sp/>buffer<sp/>manager<sp/>without<sp/>first<sp/>initialising<sp/>it!<sp/>This<sp/>is<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>HDF5Printer<sp/>class,<sp/>please<sp/>report<sp/>it.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGambit_1_1Printers_1_1VBIDpair" kindref="compound">VBIDpair</ref><sp/>key;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key.vertexID<sp/>=<sp/>vertexID;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key.index<sp/><sp/><sp/><sp/>=<sp/>aux_i;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;VBIDpair,<sp/>BuffType&gt;::iterator<sp/>it<sp/>=<sp/>local_buffers.find(key);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>it<sp/>==<sp/>local_buffers.end()<sp/>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1af767fa1930017427eed70f5dc4da60ea" kindref="member">error_if_key_exists</ref>(local_buffers,<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;local_buffers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>local<sp/>buffer<sp/>exists<sp/>for<sp/>this<sp/>output<sp/>stream<sp/>yet,<sp/>so<sp/>make<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>check<sp/>first<sp/>if<sp/>another<sp/>printer<sp/>manager<sp/>is<sp/>already<sp/>handling<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>stream.<sp/>If<sp/>so,<sp/>we<sp/>relinquish<sp/>control<sp/>over<sp/>it<sp/>and<sp/>silence<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>output<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silence<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Preparing<sp/>to<sp/>create<sp/>new<sp/>print<sp/>output<sp/>stream...&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;...label<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;label&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;...is<sp/>stream<sp/>already<sp/>managed?<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;printer-&gt;is_stream_managed(key)&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;...from<sp/>printer<sp/>with<sp/>name<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;printer-&gt;get_printer_name()&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;...from<sp/>printer<sp/>with<sp/>name<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;printer-&gt;get_printer_name()&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>printer-&gt;is_stream_managed(key)<sp/>)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silence<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>DEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;...is<sp/>silenced?<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;silence&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>buffer<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>loc(-1);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(synchronised)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc<sp/>=<sp/>printer-&gt;get_location();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>write<sp/>to<sp/>the<sp/>RA<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc<sp/>=<sp/>printer-&gt;get_RA_location();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_buffers[key]<sp/>=<sp/>BuffType(<sp/>loc</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>label</highlight><highlight class="comment">/*deconstruct?*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>vertexID</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>aux_i</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>synchronised</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>silence</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*printer-&gt;get_resume()<sp/>--<sp/>In<sp/>this<sp/>new<sp/>version<sp/>of<sp/>the<sp/>HDF5Printer<sp/>we<sp/>write<sp/>temporary<sp/>files<sp/>and<sp/>then<sp/>combine<sp/>them<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>scan,<sp/>so<sp/>each<sp/>individual<sp/>buffer<sp/>no<sp/>longer<sp/>needs<sp/>to<sp/>be<sp/>in<sp/>&apos;resume&apos;<sp/>mode,<sp/>it<sp/>can<sp/>just<sp/>start<sp/>anew<sp/>and<sp/>be<sp/>combined<sp/>with<sp/>the<sp/>old<sp/>data<sp/>later<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>access<sp/></highlight><highlight class="comment">/*<sp/>r/w<sp/>mode.<sp/>Buffers<sp/>can<sp/>now<sp/>be<sp/>used<sp/>for<sp/>reading<sp/>also.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>new<sp/>(possibly<sp/>silenced)<sp/>buffer<sp/>back<sp/>out<sp/>of<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>local_buffers.find(key);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>new<sp/>buffer<sp/>to<sp/>the<sp/>full<sp/>list<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>silence)<sp/>printer-&gt;insert_buffer(<sp/>key,<sp/>it-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>increment<sp/>the<sp/>buffer<sp/>to<sp/>&quot;catch<sp/>it<sp/>up&quot;<sp/>to<sp/>the<sp/>current<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position,<sp/>in<sp/>case<sp/>it<sp/>has<sp/>been<sp/>created<sp/>&quot;late&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>subtract<sp/>one<sp/>because<sp/>another<sp/>increment<sp/>will<sp/>happen<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>print<sp/>statement<sp/>(that<sp/>triggered<sp/>the<sp/>creation<sp/>of<sp/>the<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer)<sp/>completes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(synchronised)<sp/>it-&gt;second.fast_forward(printer-&gt;get_sync_pos()-1);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>it<sp/>==<sp/>local_buffers.end()<sp/>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Failed<sp/>to<sp/>retrieve<sp/>newly<sp/>created<sp/>buffer<sp/>(label=&quot;</highlight><highlight class="normal">&lt;&lt;label&lt;&lt;</highlight><highlight class="stringliteral">&quot;)<sp/>from<sp/>local_buffers<sp/>map!<sp/>Key<sp/>was:<sp/>(&quot;</highlight><highlight class="normal">&lt;&lt;vertexID&lt;&lt;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&lt;&lt;aux_i&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Printers_1aea6c68cb3e134435f26742b0eff32b1a" kindref="member">printer_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="555"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>cluttering<sp/>up<sp/>&quot;macro<sp/>namespace&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>DEFINE_BUFFMAN_GETTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>BT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>printer<sp/>so<sp/>it<sp/>can<sp/>be<sp/>constructed<sp/>via<sp/>inifile<sp/>instructions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>argument<sp/>is<sp/>string<sp/>label<sp/>for<sp/>inifile<sp/>access,<sp/>second<sp/>is<sp/>class<sp/>from<sp/>which<sp/>to<sp/>construct<sp/>printer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>LOAD_PRINTER(hdf5_v1,<sp/><ref refid="classGambit_1_1Printers_1_1HDF5Printer" kindref="compound">HDF5Printer</ref>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Printers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Gambit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>DEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Printers/include/gambit/Printers/printers/hdf5printer.hpp"/>
  </compounddef>
</doxygen>
