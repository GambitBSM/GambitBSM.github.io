<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Scanner_1_1like__ptr" kind="class" language="C++" prot="public">
    <compoundname>Gambit::Scanner::like_ptr</compoundname>
    <basecompoundref refid="classGambit_1_1Scanner_1_1scan__ptr" prot="public" virt="non-virtual">Gambit::Scanner::scan_ptr&lt; double(std::unordered_map&lt; std::string, double &gt; &amp;)&gt;</basecompoundref>
    <includes refid="factory__defs_8hpp" local="no">factory_defs.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classGambit_1_1Scanner_1_1like__ptr_1a1f8fdcf0e7dee7792242e92b0ef0fb91" prot="private" static="no">
        <type><ref refid="classGambit_1_1Scanner_1_1scan__ptr" kindref="compound">scan_ptr</ref>&lt; double(std::unordered_map&lt; std::string, double &gt; &amp;)&gt;</type>
        <definition>typedef scan_ptr&lt;double (std::unordered_map&lt;std::string, double&gt; &amp;)&gt; Gambit::Scanner::like_ptr::s_ptr</definition>
        <argsstring></argsstring>
        <name>s_ptr</name>
        <qualifiedname>Gambit::Scanner::like_ptr::s_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="347" column="30" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1like__ptr_1ad1da2fe25af922edaf33b17e1fc77c7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Scanner::like_ptr::like_ptr</definition>
        <argsstring>()</argsstring>
        <name>like_ptr</name>
        <qualifiedname>Gambit::Scanner::like_ptr::like_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="351" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1like__ptr_1a5ba88a69a395f6d36ea08f324f50b639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Scanner::like_ptr::like_ptr</definition>
        <argsstring>(void *in)</argsstring>
        <name>like_ptr</name>
        <qualifiedname>Gambit::Scanner::like_ptr::like_ptr</qualifiedname>
        <param>
          <type>void *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="352" column="13" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1like__ptr_1ab9c5a5be12e5f7de9901d34bf623b891" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::Scanner::like_ptr::operator()</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;vec)</argsstring>
        <name>operator()</name>
        <qualifiedname>Gambit::Scanner::like_ptr::operator()</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="354" column="20" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1like__ptr_1a3ecc5e1e8eeb736ffa529da44e98a1ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::Scanner::like_ptr::operator()</definition>
        <argsstring>(hyper_cube_ref&lt; double &gt; vec)</argsstring>
        <name>operator()</name>
        <qualifiedname>Gambit::Scanner::like_ptr::operator()</qualifiedname>
        <param>
          <type><ref refid="scanner__util__types_8hpp_1aa2109d688760bfc20fb806f80ee45146" kindref="member">hyper_cube_ref</ref>&lt; double &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="359" column="20" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="359" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Scanner_1_1like__ptr_1aa1079f64528de0fabcb547e62b04c6da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Gambit::Scanner::like_ptr::operator()</definition>
        <argsstring>(std::unordered_map&lt; std::string, double &gt; &amp;map, bool use_prior=false)</argsstring>
        <name>operator()</name>
        <qualifiedname>Gambit::Scanner::like_ptr::operator()</qualifiedname>
        <param>
          <type>std::unordered_map&lt; std::string, double &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_prior</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="384" column="20" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="384" bodyend="402"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>likelihood pointer holder for scanner plugins. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Gambit::Scanner::like_ptr</label>
        <link refid="classGambit_1_1Scanner_1_1like__ptr"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Gambit::Scanner::scan_ptr&lt; double(std::unordered_map&lt; std::string, double &gt; &amp;)&gt;</label>
        <link refid="classGambit_1_1Scanner_1_1scan__ptr"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Gambit::Scanner::like_ptr</label>
        <link refid="classGambit_1_1Scanner_1_1like__ptr"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Gambit::Scanner::scan_ptr&lt; double(std::unordered_map&lt; std::string, double &gt; &amp;)&gt;</label>
        <link refid="classGambit_1_1Scanner_1_1scan__ptr"/>
      </node>
    </collaborationgraph>
    <location file="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" line="344" column="9" bodyfile="ScannerBit/include/gambit/ScannerBit/factory_defs.hpp" bodystart="345" bodyend="403"/>
    <listofallmembers>
      <member refid="classGambit_1_1Scanner_1_1like__ptr_1ad1da2fe25af922edaf33b17e1fc77c7b" prot="public" virt="non-virtual"><scope>Gambit::Scanner::like_ptr</scope><name>like_ptr</name></member>
      <member refid="classGambit_1_1Scanner_1_1like__ptr_1a5ba88a69a395f6d36ea08f324f50b639" prot="public" virt="non-virtual"><scope>Gambit::Scanner::like_ptr</scope><name>like_ptr</name></member>
      <member refid="classGambit_1_1Scanner_1_1like__ptr_1ab9c5a5be12e5f7de9901d34bf623b891" prot="public" virt="non-virtual"><scope>Gambit::Scanner::like_ptr</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Scanner_1_1like__ptr_1a3ecc5e1e8eeb736ffa529da44e98a1ef" prot="public" virt="non-virtual"><scope>Gambit::Scanner::like_ptr</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Scanner_1_1like__ptr_1aa1079f64528de0fabcb547e62b04c6da" prot="public" virt="non-virtual"><scope>Gambit::Scanner::like_ptr</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Scanner_1_1like__ptr_1a1f8fdcf0e7dee7792242e92b0ef0fb91" prot="private" virt="non-virtual"><scope>Gambit::Scanner::like_ptr</scope><name>s_ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
