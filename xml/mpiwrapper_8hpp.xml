<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="mpiwrapper_8hpp" kind="file" language="C++">
    <compoundname>mpiwrapper.hpp</compoundname>
    <includedby refid="DarkSUSY__5__1__3_8cpp" local="yes">DarkSUSY_5_1_3.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__1__1_8cpp" local="yes">DarkSUSY_MSSM_6_1_1.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__2__2_8cpp" local="yes">DarkSUSY_MSSM_6_2_2.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__2__5_8cpp" local="yes">DarkSUSY_MSSM_6_2_5.cpp</includedby>
    <includedby refid="DarkSUSY__MSSM__6__4__0_8cpp" local="yes">DarkSUSY_MSSM_6_4_0.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__1__1_8cpp" local="yes">DarkSUSY_generic_wimp_6_1_1.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__2__2_8cpp" local="yes">DarkSUSY_generic_wimp_6_2_2.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__2__5_8cpp" local="yes">DarkSUSY_generic_wimp_6_2_5.cpp</includedby>
    <includedby refid="DarkSUSY__generic__wimp__6__4__0_8cpp" local="yes">DarkSUSY_generic_wimp_6_4_0.cpp</includedby>
    <includedby refid="DarkBit_2src_2MSSM_8cpp" local="yes">MSSM.cpp</includedby>
    <includedby refid="MicrOmegas__MSSM__3__6__9__2_8cpp" local="yes">MicrOmegas_MSSM_3_6_9_2.cpp</includedby>
    <includedby refid="VertexBufferNumeric1D_8hpp" local="yes">VertexBufferNumeric1D.hpp</includedby>
    <includedby refid="VertexBufferNumeric1D__HDF5_8hpp" local="yes">VertexBufferNumeric1D_HDF5.hpp</includedby>
    <includedby refid="asciiprinter_8cpp" local="yes">asciiprinter.cpp</includedby>
    <includedby refid="asciiprinter_8hpp" local="yes">asciiprinter.hpp</includedby>
    <includedby refid="baseprintermanager_8hpp" local="yes">baseprintermanager.hpp</includedby>
    <includedby refid="exceptions_8cpp" local="yes">exceptions.cpp</includedby>
    <includedby refid="gambit_8cpp" local="yes">gambit.cpp</includedby>
    <includedby refid="great_8cpp" local="yes">great.cpp</includedby>
    <includedby refid="hdf5__combine__tools_8hpp" local="yes">hdf5_combine_tools.hpp</includedby>
    <includedby refid="hdf5printer_8cpp" local="yes">hdf5printer.cpp</includedby>
    <includedby refid="hdf5printer_8hpp" local="yes">hdf5printer.hpp</includedby>
    <includedby refid="hdf5printer__v2_8hpp" local="yes">hdf5printer_v2.hpp</includedby>
    <includedby refid="hdf5tools_8hpp" local="yes">hdf5tools.hpp</includedby>
    <includedby refid="likelihood__container_8cpp" local="yes">likelihood_container.cpp</includedby>
    <includedby refid="logging_8cpp" local="yes">logging.cpp</includedby>
    <includedby refid="logmaster_8cpp" local="yes">logmaster.cpp</includedby>
    <includedby refid="new__mpi__datatypes_8cpp" local="yes">new_mpi_datatypes.cpp</includedby>
    <includedby refid="new__mpi__datatypes_8hpp" local="yes">new_mpi_datatypes.hpp</includedby>
    <includedby refid="noneprinter_8hpp" local="yes">noneprinter.hpp</includedby>
    <includedby refid="plugin__loader_8cpp" local="yes">plugin_loader.cpp</includedby>
    <includedby refid="postprocessor__2_80_80_2postprocessor_8cpp" local="yes">postprocessor.cpp</includedby>
    <includedby refid="postprocessor__1_80_80_2postprocessor_8cpp" local="yes">postprocessor.cpp</includedby>
    <includedby refid="printermanager_8hpp" local="yes">printermanager.hpp</includedby>
    <includedby refid="scan_8cpp" local="yes">scan.cpp</includedby>
    <includedby refid="signal__handling_8cpp" local="yes">signal_handling.cpp</includedby>
    <includedby refid="signal__handling_8hpp" local="yes">signal_handling.hpp</includedby>
    <includedby refid="util__functions_8cpp" local="yes">util_functions.cpp</includedby>
    <includedby refid="yaml__parser__base_8cpp" local="yes">yaml_parser_base.cpp</includedby>
    <invincdepgraph>
      <node id="47">
        <label>backend_macros.hpp</label>
        <link refid="backend__macros_8hpp"/>
      </node>
      <node id="2">
        <label>DarkSUSY_5_1_3.cpp</label>
        <link refid="DarkSUSY__5__1__3_8cpp"/>
      </node>
      <node id="3">
        <label>DarkSUSY_MSSM_6_1_1.cpp</label>
        <link refid="DarkSUSY__MSSM__6__1__1_8cpp"/>
      </node>
      <node id="4">
        <label>DarkSUSY_MSSM_6_2_2.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__2_8cpp"/>
      </node>
      <node id="5">
        <label>DarkSUSY_MSSM_6_2_5.cpp</label>
        <link refid="DarkSUSY__MSSM__6__2__5_8cpp"/>
      </node>
      <node id="6">
        <label>DarkSUSY_MSSM_6_4_0.cpp</label>
        <link refid="DarkSUSY__MSSM__6__4__0_8cpp"/>
      </node>
      <node id="7">
        <label>DarkSUSY_generic_wimp_6_1_1.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__1__1_8cpp"/>
      </node>
      <node id="8">
        <label>DarkSUSY_generic_wimp_6_2_2.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__2_8cpp"/>
      </node>
      <node id="9">
        <label>DarkSUSY_generic_wimp_6_2_5.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__2__5_8cpp"/>
      </node>
      <node id="10">
        <label>DarkSUSY_generic_wimp_6_4_0.cpp</label>
        <link refid="DarkSUSY__generic__wimp__6__4__0_8cpp"/>
      </node>
      <node id="12">
        <label>MicrOmegas_MSSM_3_6_9_2.cpp</label>
        <link refid="MicrOmegas__MSSM__3__6__9__2_8cpp"/>
      </node>
      <node id="36">
        <label>container_factory.hpp</label>
        <link refid="container__factory_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>depresolver.hpp</label>
        <link refid="depresolver_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>gambit.hpp</label>
        <link refid="gambit_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>likelihood_container.hpp</label>
        <link refid="likelihood__container_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>modelgraph.hpp</label>
        <link refid="modelgraph_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>container_factory.cpp</label>
        <link refid="container__factory_8cpp"/>
      </node>
      <node id="108">
        <label>core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="42">
        <label>depresolver.cpp</label>
        <link refid="depresolver_8cpp"/>
      </node>
      <node id="44">
        <label>diagnostics.cpp</label>
        <link refid="diagnostics_8cpp"/>
      </node>
      <node id="124">
        <label>functors_with_signals.cpp</label>
        <link refid="functors__with__signals_8cpp"/>
      </node>
      <node id="40">
        <label>gambit.cpp</label>
        <link refid="gambit_8cpp"/>
      </node>
      <node id="41">
        <label>likelihood_container.cpp</label>
        <link refid="likelihood__container_8cpp"/>
      </node>
      <node id="45">
        <label>modelgraph.cpp</label>
        <link refid="modelgraph_8cpp"/>
      </node>
      <node id="11">
        <label>MSSM.cpp</label>
        <link refid="DarkBit_2src_2MSSM_8cpp"/>
      </node>
      <node id="46">
        <label>functor_definitions.hpp</label>
        <link refid="functor__definitions_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>functors.cpp</label>
        <link refid="Elements_2src_2functors_8cpp"/>
      </node>
      <node id="118">
        <label>logging.cpp</label>
        <link refid="logging_8cpp"/>
      </node>
      <node id="119">
        <label>logmaster.cpp</label>
        <link refid="logmaster_8cpp"/>
      </node>
      <node id="13">
        <label>VertexBufferNumeric1D.hpp</label>
        <link refid="VertexBufferNumeric1D_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basebaseprinter.hpp</label>
        <link refid="basebaseprinter_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>baseprinter.hpp</label>
        <link refid="baseprinter_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>baseprintermanager.hpp</label>
        <link refid="baseprintermanager_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>printer_id_tools.hpp</label>
        <link refid="printer__id__tools_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>printermanager.hpp</label>
        <link refid="printermanager_8hpp"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>asciiprinter.hpp</label>
        <link refid="asciiprinter_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>asciireader.hpp</label>
        <link refid="asciireader_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>coutprinter.hpp</label>
        <link refid="coutprinter_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>hdf5printer.hpp</label>
        <link refid="hdf5printer_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>VertexBufferNumeric1D_HDF5.hpp</label>
        <link refid="VertexBufferNumeric1D__HDF5_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>hdf5_combine_tools.hpp</label>
        <link refid="hdf5__combine__tools_8hpp"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>hdf5tools.hpp</label>
        <link refid="hdf5tools_8hpp"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>hdf5printer_v2.hpp</label>
        <link refid="hdf5printer__v2_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>hdf5reader.hpp</label>
        <link refid="hdf5reader_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>noneprinter.hpp</label>
        <link refid="noneprinter_8hpp"/>
      </node>
      <node id="55">
        <label>sqliteprinter.hpp</label>
        <link refid="sqliteprinter_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sqlitereader.hpp</label>
        <link refid="sqlitereader_8hpp"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>baseprinter.cpp</label>
        <link refid="baseprinter_8cpp"/>
      </node>
      <node id="54">
        <label>printermanager.cpp</label>
        <link refid="printermanager_8cpp"/>
      </node>
      <node id="20">
        <label>asciiprinter.cpp</label>
        <link refid="asciiprinter_8cpp"/>
      </node>
      <node id="29">
        <label>asciireader.cpp</label>
        <link refid="asciireader_8cpp"/>
      </node>
      <node id="22">
        <label>print_overloads.cpp</label>
        <link refid="asciiprinter_2print__overloads_8cpp"/>
      </node>
      <node id="30">
        <label>retrieve_overloads.cpp</label>
        <link refid="asciiprinter_2retrieve__overloads_8cpp"/>
      </node>
      <node id="33">
        <label>coutprinter.cpp</label>
        <link refid="coutprinter_8cpp"/>
      </node>
      <node id="34">
        <label>print_overloads.cpp</label>
        <link refid="coutprinter_2print__overloads_8cpp"/>
      </node>
      <node id="114">
        <label>hdf5_combine_tools.cpp</label>
        <link refid="hdf5__combine__tools_8cpp"/>
      </node>
      <node id="16">
        <label>hdf5printer.cpp</label>
        <link refid="hdf5printer_8cpp"/>
      </node>
      <node id="17">
        <label>hdf5reader.cpp</label>
        <link refid="hdf5reader_8cpp"/>
      </node>
      <node id="117">
        <label>hdf5tools.cpp</label>
        <link refid="hdf5tools_8cpp"/>
      </node>
      <node id="18">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer_2print__overloads_8cpp"/>
      </node>
      <node id="19">
        <label>retrieve_overloads.cpp</label>
        <link refid="hdf5printer_2retrieve__overloads_8cpp"/>
      </node>
      <node id="50">
        <label>hdf5printer_v2.cpp</label>
        <link refid="hdf5printer__v2_8cpp"/>
      </node>
      <node id="51">
        <label>print_overloads.cpp</label>
        <link refid="hdf5printer__v2_2print__overloads_8cpp"/>
      </node>
      <node id="56">
        <label>print_overloads.cpp</label>
        <link refid="sqliteprinter_2print__overloads_8cpp"/>
      </node>
      <node id="59">
        <label>retrieve_overloads.cpp</label>
        <link refid="sqliteprinter_2retrieve__overloads_8cpp"/>
      </node>
      <node id="57">
        <label>sqliteprinter.cpp</label>
        <link refid="sqliteprinter_8cpp"/>
      </node>
      <node id="60">
        <label>sqlitereader.cpp</label>
        <link refid="sqlitereader_8cpp"/>
      </node>
      <node id="115">
        <label>manual_hdf5_combine.cpp</label>
        <link refid="manual__hdf5__combine_8cpp"/>
      </node>
      <node id="66">
        <label>ScannerBit_standalone.cpp</label>
        <link refid="ScannerBit__standalone_8cpp"/>
      </node>
      <node id="62">
        <label>factory_defs.hpp</label>
        <link refid="factory__defs_8hpp"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>objective_plugin.hpp</label>
        <link refid="objective__plugin_8hpp"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>plugin_defs.hpp</label>
        <link refid="plugin__defs_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>plugin_factory.hpp</label>
        <link refid="plugin__factory_8hpp"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>plugin_interface.hpp</label>
        <link refid="plugin__interface_8hpp"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>plugin_loader.hpp</label>
        <link refid="plugin__loader_8hpp"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>plugin_macros.hpp</label>
        <link refid="plugin__macros_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>printer_interface.hpp</label>
        <link refid="printer__interface_8hpp"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>plugin.hpp</label>
        <link refid="plugin_8hpp"/>
      </node>
      <node id="65">
        <label>scan.hpp</label>
        <link refid="scan_8hpp"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>scanner_plugin.hpp</label>
        <link refid="scanner__plugin_8hpp"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>scannerbit.hpp</label>
        <link refid="scannerbit_8hpp"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>diver.hpp</label>
        <link refid="1_80_80_2diver_8hpp"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>diver.hpp</label>
        <link refid="1_80_82_2diver_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>diver.hpp</label>
        <link refid="1_80_84_2diver_8hpp"/>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>great.hpp</label>
        <link refid="great_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>minuit2.hpp</label>
        <link refid="minuit2_8hpp"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>multinest.hpp</label>
        <link refid="multinest_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>polychord.hpp</label>
        <link refid="1_817_81_2polychord_8hpp"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>polychord.hpp</label>
        <link refid="1_818_82_2polychord_8hpp"/>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>polychord.hpp</label>
        <link refid="1_820_81_2polychord_8hpp"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>postprocessor.hpp</label>
        <link refid="postprocessor__1_80_80_2postprocessor_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>postprocessor.hpp</label>
        <link refid="postprocessor__2_80_80_2postprocessor_8hpp"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>twalk.hpp</label>
        <link refid="twalk_8hpp"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>examples.cpp</label>
        <link refid="examples_8cpp"/>
      </node>
      <node id="109">
        <label>plugin_loader.cpp</label>
        <link refid="plugin__loader_8cpp"/>
      </node>
      <node id="64">
        <label>scan.cpp</label>
        <link refid="scan_8cpp"/>
      </node>
      <node id="74">
        <label>diver.cpp</label>
        <link refid="diver__1_80_80_2diver_8cpp"/>
      </node>
      <node id="70">
        <label>diver.cpp</label>
        <link refid="diver__1_80_82_2diver_8cpp"/>
      </node>
      <node id="72">
        <label>diver.cpp</label>
        <link refid="diver__1_80_84_2diver_8cpp"/>
      </node>
      <node id="76">
        <label>great.cpp</label>
        <link refid="great_8cpp"/>
      </node>
      <node id="78">
        <label>minuit2.cpp</label>
        <link refid="minuit2_8cpp"/>
      </node>
      <node id="80">
        <label>multinest.cpp</label>
        <link refid="multinest__3_810_2multinest_8cpp"/>
      </node>
      <node id="82">
        <label>multinest.cpp</label>
        <link refid="multinest__3_811_2multinest_8cpp"/>
      </node>
      <node id="81">
        <label>multinest.cpp</label>
        <link refid="multinest__3_812_2multinest_8cpp"/>
      </node>
      <node id="84">
        <label>polychord.cpp</label>
        <link refid="polychord__1_817_81_2polychord_8cpp"/>
      </node>
      <node id="85">
        <label>polychord.cpp</label>
        <link refid="polychord__1_818_82_2polychord_8cpp"/>
      </node>
      <node id="86">
        <label>polychord.cpp</label>
        <link refid="polychord__1_820_81_2polychord_8cpp"/>
      </node>
      <node id="90">
        <label>postprocessor.cpp</label>
        <link refid="postprocessor__1_80_80_2postprocessor_8cpp"/>
      </node>
      <node id="95">
        <label>postprocessor_object.cpp</label>
        <link refid="postprocessor__1_80_80_2postprocessor__object_8cpp"/>
      </node>
      <node id="91">
        <label>postprocessor.cpp</label>
        <link refid="postprocessor__2_80_80_2postprocessor_8cpp"/>
      </node>
      <node id="93">
        <label>postprocessor_object.cpp</label>
        <link refid="postprocessor__2_80_80_2postprocessor__object_8cpp"/>
      </node>
      <node id="77">
        <label>grid.cpp</label>
        <link refid="grid_8cpp"/>
      </node>
      <node id="96">
        <label>random.cpp</label>
        <link refid="random_8cpp"/>
      </node>
      <node id="97">
        <label>raster.cpp</label>
        <link refid="raster_8cpp"/>
      </node>
      <node id="98">
        <label>square_grid.cpp</label>
        <link refid="square__grid_8cpp"/>
      </node>
      <node id="99">
        <label>toy_mcmc.cpp</label>
        <link refid="toy__mcmc_8cpp"/>
      </node>
      <node id="100">
        <label>twalk.cpp</label>
        <link refid="twalk_8cpp"/>
      </node>
      <node id="27">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="1">
        <label>mpiwrapper.hpp</label>
        <link refid="mpiwrapper_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>new_mpi_datatypes.hpp</label>
        <link refid="new__mpi__datatypes_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>signal_handling.hpp</label>
        <link refid="signal__handling_8hpp"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>exceptions.cpp</label>
        <link refid="exceptions_8cpp"/>
      </node>
      <node id="120">
        <label>new_mpi_datatypes.cpp</label>
        <link refid="new__mpi__datatypes_8cpp"/>
      </node>
      <node id="122">
        <label>signal_handling.cpp</label>
        <link refid="signal__handling_8cpp"/>
      </node>
      <node id="125">
        <label>util_functions.cpp</label>
        <link refid="util__functions_8cpp"/>
      </node>
      <node id="126">
        <label>yaml_parser_base.cpp</label>
        <link refid="yaml__parser__base_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A simple C++ wrapper for the MPI C bindings. It is by no means comprehensive, and is just intended to simplify some MPI commands within <ref refid="namespaceGambit" kindref="compound">Gambit</ref>.</para>
<para>Extend as needed.</para>
<para>Note: Some C++ bindings already exist, but it appears that they are deprecated in really new versions of the MPI standard, and don&apos;t offer functionality over the C bindings anyway. I have nevertheless mirrored the names of some of the deprecated C++ bindings, in case it helps some people who were used to them.</para>
<para>There is also boost/mpi, but it is a compiled library and we have been avoiding those.</para>
<para>You can remove the error handlers if you want these wrappers to be independent of GAMBIT.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Apr</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Jun</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>A<sp/>simple<sp/>C++<sp/>wrapper<sp/>for<sp/>the<sp/>MPI<sp/>C<sp/>bindings.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>It<sp/>is<sp/>by<sp/>no<sp/>means<sp/>comprehensive,<sp/>and<sp/>is<sp/>just</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>intended<sp/>to<sp/>simplify<sp/>some<sp/>MPI<sp/>commands<sp/>within</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>Gambit.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>Extend<sp/>as<sp/>needed.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>Note:<sp/>Some<sp/>C++<sp/>bindings<sp/>already<sp/>exist,<sp/>but</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>it<sp/>appears<sp/>that<sp/>they<sp/>are<sp/>deprecated<sp/>in<sp/>really</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>new<sp/>versions<sp/>of<sp/>the<sp/>MPI<sp/>standard,<sp/>and<sp/>don&apos;t</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>offer<sp/>functionality<sp/>over<sp/>the<sp/>C<sp/>bindings</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>anyway.<sp/>I<sp/>have<sp/>nevertheless<sp/>mirrored<sp/>the<sp/>names</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>of<sp/>some<sp/>of<sp/>the<sp/>deprecated<sp/>C++<sp/>bindings,<sp/>in</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>case<sp/>it<sp/>helps<sp/>some<sp/>people<sp/>who<sp/>were<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>them.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/>There<sp/>is<sp/>also<sp/>boost/mpi,<sp/>but<sp/>it<sp/>is<sp/>a<sp/>compiled</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>library<sp/>and<sp/>we<sp/>have<sp/>been<sp/>avoiding<sp/>those.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>You<sp/>can<sp/>remove<sp/>the<sp/>error<sp/>handlers<sp/>if<sp/>you<sp/>want</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/>these<sp/>wrappers<sp/>to<sp/>be<sp/>independent<sp/>of<sp/>GAMBIT.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Apr</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="36"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="37"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jun</highlight></codeline>
<codeline lineno="38"><highlight class="comment">///</highlight></codeline>
<codeline lineno="39"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>WITH_MPI<sp/>macro<sp/>determines<sp/>whether<sp/>MPI<sp/>is<sp/>used<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>defined<sp/>at<sp/>compile<sp/>time<sp/>by<sp/>cmake<sp/>with<sp/>-DWITH_MPI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>contents<sp/>of<sp/>this<sp/>file<sp/>are<sp/>ignored<sp/>if<sp/>MPI<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__mpiwrapper_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__mpiwrapper_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__ignore__warnings__mpi_8hpp" kindref="compound">gambit/Utils/begin_ignore_warnings_mpi.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="end__ignore__warnings_8hpp" kindref="compound">gambit/Utils/end_ignore_warnings.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="standalone__error__handlers_8hpp" kindref="compound">gambit/Utils/standalone_error_handlers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="local__info_8hpp" kindref="compound">gambit/Utils/local_info.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__macros_8hpp" kindref="compound">gambit/Utils/util_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I<sp/>wanted<sp/>to<sp/>keep<sp/>the<sp/>GAMBIT<sp/>logger<sp/>separate<sp/>from<sp/>this<sp/>code<sp/>so<sp/>that<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>be<sp/>more<sp/>streamlined<sp/>for<sp/>using<sp/>elsewhere.<sp/>But<sp/>the<sp/>logger<sp/>is<sp/>very</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>useful<sp/>for<sp/>debugging,<sp/>so<sp/>this<sp/>preprocessor<sp/>flag<sp/>can<sp/>be<sp/>used<sp/>to<sp/>turn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>on<sp/>and<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Though<sp/>it<sp/>might<sp/>already<sp/>be<sp/>included<sp/>via<sp/>the<sp/>error<sp/>handlers<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_GAMBIT_LOGGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GAMBIT_LOGGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">gambit/Logs/logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOGGER<sp/>logger()<sp/>&lt;&lt;<sp/>LogTags::utils<sp/>&lt;&lt;<sp/>LogTags::info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOGGER<sp/>std::cerr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>EOM<sp/>std::endl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">///<sp/>Provide<sp/>template<sp/>specialisation<sp/>of<sp/>get_mpi_data_type<sp/>only<sp/>if<sp/>the<sp/>requested<sp/>type<sp/>hasn&apos;t<sp/>been<sp/>used<sp/>to<sp/>define<sp/>one<sp/>already.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(TYPEDEFD_TYPE,<sp/>RETURN_MPI_TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>get_mpi_data_type&lt;T,<sp/>typename<sp/>boost::enable_if_c&lt;<sp/>std::is_same&lt;T,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;char,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;short,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;int,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;long<sp/>long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>char,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>short,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>int,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;unsigned<sp/>long<sp/>long,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;float,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;double,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;long<sp/>double,<sp/>TYPEDEFD_TYPE&gt;::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;bool,<sp/>TYPEDEFD_TYPE&gt;::value&gt;::type<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>MPI_Datatype<sp/>type()<sp/>{<sp/>return<sp/>RETURN_MPI_TYPE;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">///<sp/>Trigger<sp/>debugging<sp/>output<sp/>when<sp/>messages<sp/>sent/recvd</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight><highlight class="comment">//#define<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">GMPI</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Mapping<sp/>from<sp/>(basic)<sp/>C++<sp/>types<sp/>to<sp/>MPI<sp/>datatypes</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Based<sp/>on<sp/>of<sp/>&quot;get_hdf5_data_type&quot;<sp/>in<sp/>hdf5tools.hpp</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Base<sp/>template<sp/>is<sp/>left<sp/>undefined<sp/>in<sp/>order<sp/>to<sp/>raise</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>a<sp/>compile<sp/>error<sp/>if<sp/>specialisation<sp/>doesn&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Overload<sp/>to<sp/>work<sp/>with<sp/>arrays</highlight></codeline>
<codeline lineno="120"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;T[SIZE]&gt;<sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_mpi_data_type&lt;T&gt;::type();<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>True<sp/>types</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;char&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CHAR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;short&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_SHORT;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;int&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_INT;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;long&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LONG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;long<sp/>long&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LONG_LONG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;unsigned<sp/>char&gt;<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_CHAR;<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;unsigned<sp/>short&gt;<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_SHORT;<sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;unsigned<sp/>int&gt;<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;unsigned<sp/>long&gt;<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_LONG;<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;unsigned<sp/>long<sp/>long&gt;{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_LONG_LONG;<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;float&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_FLOAT;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;double&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_DOUBLE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_mpi_data_type&lt;long<sp/>double&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LONG_DOUBLE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>};</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Typedef&apos;d<sp/>types;<sp/>enabled<sp/>only<sp/>where<sp/>they<sp/>differ<sp/>from<sp/>the<sp/>true<sp/>types,<sp/>and<sp/>where<sp/>the<sp/>relevant<sp/>constants<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>defined<sp/>in<sp/>the<sp/>linked<sp/>MPI<sp/>implementation.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_INT8_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(int8_t,<sp/><sp/><sp/>MPI_INT8_T<sp/><sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_UINT8_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(uint8_t,<sp/><sp/>MPI_UINT8_T<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_INT16_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(int16_t,<sp/><sp/>MPI_INT16_T<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_UINT16_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(uint16_t,<sp/>MPI_UINT16_T)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_INT32_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(int32_t,<sp/><sp/>MPI_INT32_T<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_UINT32_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(uint32_t,<sp/>MPI_UINT32_T)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_INT64_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(int64_t,<sp/><sp/>MPI_INT64_T<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_UINT64_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIALISE_MPI_DATA_TYPE_IF_NEEDED(uint64_t,<sp/>MPI_UINT64_T)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Main<sp/>&quot;Communicator&quot;<sp/>class</highlight></codeline>
<codeline lineno="170"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EXPORT_SYMBOLS<sp/>Comm</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Default<sp/>Constructor;<sp/>attaches<sp/>to<sp/>MPI_COMM_WORLD</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Comm();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor<sp/>which<sp/>copies<sp/>existing<sp/>communicator<sp/>into<sp/>boundcomm</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Comm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Comm&amp;<sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructor<sp/>which<sp/>creates<sp/>a<sp/>communicator<sp/>gruop<sp/>from<sp/>WORLD<sp/>containing</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>only<sp/>the<sp/>specified<sp/>processes</highlight></codeline>
<codeline lineno="181"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Comm(std::vector&lt;int&gt;<sp/>processes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="184"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~Comm();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Create<sp/>a<sp/>new<sp/>communicator<sp/>group<sp/>for<sp/>the<sp/>specified<sp/>processes</highlight></codeline>
<codeline lineno="187"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Comm<sp/>spawn_new(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>processes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>As<sp/>name</highlight></codeline>
<codeline lineno="190"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_for_undelivered_messages();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Duplicate<sp/>existing<sp/>communicator</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>(NOTE,<sp/>this<sp/>is<sp/>a<sp/>collective<sp/>operation<sp/>on<sp/>all<sp/>procceses)</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Comm&amp;<sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>newname);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>total<sp/>number<sp/>of<sp/>MPI<sp/>tasks<sp/>in<sp/>this<sp/>communicator<sp/>group</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Get_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>&quot;rank&quot;<sp/>(ID<sp/>number)<sp/>of<sp/>current<sp/>task<sp/>in<sp/>this<sp/>communicator<sp/>group</highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Get_rank()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>name<sp/>of<sp/>communicator<sp/>group<sp/>(for<sp/>error<sp/>messages)</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>Get_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Prevent<sp/>further<sp/>executation<sp/>until<sp/>all<sp/>members<sp/>of<sp/>the<sp/>bound<sp/>communicator<sp/>group<sp/>enter<sp/>the<sp/>call</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Barrier()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Barrier()<sp/>called&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Barrier(boundcomm);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Barrier!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Barrier()<sp/>passed&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Blocking<sp/>receive</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>void*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>memory<sp/>address<sp/>in<sp/>which<sp/>to<sp/>store<sp/>received<sp/>message</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/><sp/><sp/><sp/>-<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>message</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>MPI_Datatype<sp/>datatype<sp/>-<sp/>datatype<sp/>of<sp/>each<sp/>message<sp/>element</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/><sp/><sp/>-<sp/>rank<sp/>of<sp/>sending<sp/>(receiving?)<sp/>process</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>message<sp/>tag</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>MPI_status*<sp/><sp/>status<sp/><sp/><sp/>-<sp/>struct<sp/>containing<sp/>data<sp/>about<sp/>the<sp/>received<sp/>message</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Returns:</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/><sp/>MPI_status<sp/>-<sp/>struct<sp/>containing<sp/>data<sp/>about<sp/>the<sp/>received<sp/>message</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Recv(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>MPI_Datatype<sp/>datatype,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status<sp/>*in_status=NULL<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Recv()<sp/>called<sp/>(count=&quot;</highlight><highlight class="normal">&lt;&lt;count&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>source=&quot;</highlight><highlight class="normal">&lt;&lt;source&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>tag=&quot;</highlight><highlight class="normal">&lt;&lt;tag&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Recv(buf,<sp/>count,<sp/>datatype,<sp/>source,<sp/>tag,<sp/>boundcomm,<sp/>in_status<sp/>==<sp/>NULL<sp/>?<sp/>MPI_STATUS_IGNORE<sp/>:<sp/>in_status);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Recv!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Recv()<sp/>finished<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Templated<sp/>blocking<sp/>receive<sp/>to<sp/>automatically<sp/>determine<sp/>types</highlight></codeline>
<codeline lineno="255"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Recv(T<sp/>*buf<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status<sp/>*status=NULL<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Recv(buf,<sp/>count,<sp/>datatype,<sp/>source,<sp/>tag,<sp/>status);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Blocking<sp/>send</highlight></codeline>
<codeline lineno="265"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Send(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>MPI_Datatype<sp/>datatype,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Send()<sp/>called<sp/>(count=&quot;</highlight><highlight class="normal">&lt;&lt;count&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>destination=&quot;</highlight><highlight class="normal">&lt;&lt;destination&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>tag=&quot;</highlight><highlight class="normal">&lt;&lt;tag&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Send(buf,<sp/>count,<sp/>datatype,<sp/>destination,<sp/>tag,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Send!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Send()<sp/>finished&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Blocking<sp/>synchronous<sp/>send<sp/>(will<sp/>not<sp/>return<sp/>until<sp/>matching<sp/>Recv<sp/>is<sp/>posted)</highlight></codeline>
<codeline lineno="284"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ssend(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>MPI_Datatype<sp/>datatype,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Ssend()<sp/>called<sp/>(count=&quot;</highlight><highlight class="normal">&lt;&lt;count&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>destination=&quot;</highlight><highlight class="normal">&lt;&lt;destination&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>tag=&quot;</highlight><highlight class="normal">&lt;&lt;tag&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Ssend(buf,<sp/>count,<sp/>datatype,<sp/>destination,<sp/>tag,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Ssend!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Ssend()<sp/>finished&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Templated<sp/>blocking<sp/>send</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Send(T<sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Send(buf,<sp/>count,<sp/>datatype,<sp/>destination,<sp/>tag);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Templated<sp/>blocking<sp/>synchronous<sp/>send</highlight></codeline>
<codeline lineno="312"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ssend(T<sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ssend(buf,<sp/>count,<sp/>datatype,<sp/>destination,<sp/>tag);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Non-blocking<sp/>send</highlight></codeline>
<codeline lineno="321"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Isend(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>MPI_Datatype<sp/>datatype,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Request<sp/>*request<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Isend()<sp/>called<sp/>(count=&quot;</highlight><highlight class="normal">&lt;&lt;count&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>destination=&quot;</highlight><highlight class="normal">&lt;&lt;destination&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>tag=&quot;</highlight><highlight class="normal">&lt;&lt;tag&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Isend(buf,<sp/>count,<sp/>datatype,<sp/>destination,<sp/>tag,<sp/>boundcomm,<sp/>request);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Isend!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Templated<sp/>Non-blocking<sp/>send</highlight></codeline>
<codeline lineno="338"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Isend(T<sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Request<sp/>*request<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Isend(buf,<sp/>count,<sp/>datatype,<sp/>destination,<sp/>tag,<sp/>request);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Blocking<sp/>wait<sp/>for<sp/>e.g.<sp/>Isend<sp/>to<sp/>complete</highlight></codeline>
<codeline lineno="348"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Wait(MPI_Request<sp/>*request)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status<sp/>status;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag<sp/>=<sp/>MPI_Wait(request,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Wait!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-blocking<sp/>probe<sp/>for<sp/>messages<sp/>waiting<sp/>to<sp/>be<sp/>delivered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Iprobe(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/>MPI_Status*<sp/>in_status=NULL<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;rank<sp/>&quot;&lt;&lt;Get_rank()&lt;&lt;&quot;:<sp/>Iprobe()<sp/>called<sp/>(source=&quot;&lt;&lt;source&lt;&lt;&quot;,<sp/>tag=&quot;&lt;&lt;tag&lt;&lt;&quot;)&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>you_have_mail;<sp/></highlight><highlight class="comment">//<sp/>C<sp/>does<sp/>not<sp/>have<sp/>a<sp/>bool<sp/>type...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status<sp/>def_status;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status*<sp/>status;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in_status!=NULL)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>in_status;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>&amp;def_status;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MPI_Iprobe(source,<sp/>1,<sp/>boundcomm,<sp/>&amp;you_have_mail,<sp/>status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Iprobe(source,<sp/>tag,<sp/>boundcomm,<sp/>&amp;you_have_mail,<sp/>status);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Iprobe!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MPI_MSG_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(you_have_mail!=0)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Iprobe:<sp/>Message<sp/>waiting<sp/>from<sp/>process<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;status-&gt;MPI_SOURCE&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(you_have_mail<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blocking<sp/>probe<sp/>for<sp/>a<sp/>message.<sp/>Doesn&apos;t<sp/>return<sp/>until<sp/>matching<sp/>message<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>point<sp/>having<sp/>default<sp/>NULL<sp/>status<sp/>this<sp/>time,<sp/>because<sp/>the<sp/>only<sp/>reason<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>this<sp/>function<sp/>is<sp/>to<sp/>inspect<sp/>the<sp/>message<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Probe(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/>MPI_Status*<sp/>status)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errflag<sp/>=<sp/>MPI_Probe(source,<sp/>tag,<sp/>boundcomm,<sp/>status);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Probe!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>an<sp/>Isend<sp/>to<sp/>all<sp/>other<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(using<sp/>templated<sp/>non-blocking<sp/>send<sp/>repeatedly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IsendToAll(T<sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Request<sp/>*in_req=NULL<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Request<sp/>def_req;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Request*<sp/>req;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in_req!=NULL)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req<sp/>=<sp/>in_req;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req<sp/>=<sp/>&amp;def_req;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>Get_rank();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>Get_size();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=rank)<sp/>Isend(buf,<sp/>count,<sp/>i,<sp/>tag,<sp/>req);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Bcast<sp/>(std::vector&lt;T&gt;&amp;<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Bcast<sp/>(&amp;buffer[0],<sp/>count,<sp/>datatype,<sp/>root,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scatter<sp/>(std::vector&lt;T&gt;<sp/>&amp;sendbuf,<sp/>T<sp/>&amp;recvbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Scatter<sp/>(&amp;sendbuf[0],<sp/>1,<sp/>datatype,<sp/>&amp;recvbuf,<sp/>1,<sp/>datatype,<sp/>root,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Allreduce<sp/>(T<sp/>&amp;sendbuf,<sp/>T<sp/>&amp;recvbuf,<sp/>MPI_Op<sp/>op)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Allreduce<sp/>(&amp;sendbuf,<sp/>&amp;recvbuf,<sp/>1,<sp/>datatype,<sp/>op,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gather(std::vector&lt;T&gt;<sp/>&amp;sendbuf,<sp/>std::vector&lt;T&gt;<sp/>&amp;recvbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sendcount<sp/>=<sp/>sendbuf.size();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recvcount<sp/>=<sp/>sendbuf.size();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;rank<sp/>&quot;&lt;&lt;Get_rank()&lt;&lt;&quot;:<sp/>Gather<sp/>pars:<sp/>sendcount=&quot;&lt;&lt;sendcount&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Get_rank()==0)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(recvbuf.size()&lt;sendbuf.size()*Get_size())</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>Gather!<sp/>Recv<sp/>buffer<sp/>is<sp/>not<sp/>big<sp/>enough<sp/>to<sp/>fit<sp/>the<sp/>expected<sp/>data!<sp/>We<sp/>expect<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>messages<sp/>of<sp/>count<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;recvcount&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>(total<sp/>size=&quot;</highlight><highlight class="normal">&lt;&lt;recvcount*Get_size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;)<sp/>but<sp/>the<sp/>recv<sp/>buffer<sp/>only<sp/>has<sp/>size<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;recvbuf.size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag<sp/>=<sp/>MPI_Gather(&amp;sendbuf[0],<sp/>sendcount,<sp/>datatype,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;recvbuf[0],<sp/>recvcount,<sp/>datatype,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>Gather!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gatherv(std::vector&lt;T&gt;<sp/>&amp;sendbuf,<sp/>std::vector&lt;T&gt;<sp/>&amp;recvbuf,<sp/>std::vector&lt;int&gt;<sp/>recvcounts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;rank<sp/>&quot;&lt;&lt;Get_rank()&lt;&lt;&quot;:<sp/>Gatherv<sp/>pars:<sp/>recvcounts=&quot;&lt;&lt;recvcounts&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>automatically<sp/>calculate<sp/>the<sp/>displacements<sp/>assuming<sp/>that<sp/>the<sp/>incoming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>should<sp/>just<sp/>be<sp/>stacked<sp/>in<sp/>the<sp/>order<sp/>of<sp/>the<sp/>process<sp/>ranks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>displs;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displs.push_back(0);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>totalsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=recvcounts.begin();<sp/>it!=recvcounts.end();<sp/>++it)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::next(it)!=recvcounts.end())<sp/>displs.push_back(*it<sp/>+<sp/>displs.back());</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalsize<sp/>+=<sp/>(*it);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Get_rank()==0)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(recvbuf.size()&lt;totalsize)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>Gatherv!<sp/>Recv<sp/>buffer<sp/>is<sp/>not<sp/>big<sp/>enough<sp/>to<sp/>fit<sp/>the<sp/>expected<sp/>data!<sp/>We<sp/>expect<sp/>messages<sp/>with<sp/>total<sp/>size<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;totalsize&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>the<sp/>recv<sp/>buffer<sp/>only<sp/>has<sp/>size<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;recvbuf.size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;rank<sp/>&quot;&lt;&lt;Get_rank()&lt;&lt;&quot;:<sp/>sendbuf.size()=&quot;&lt;&lt;sendbuf.size()&lt;&lt;&quot;,<sp/>recvbuf.size()=&quot;&lt;&lt;recvbuf.size()&lt;&lt;&quot;,<sp/>&quot;&lt;&lt;&quot;recvcounts=&quot;&lt;&lt;recvcounts&lt;&lt;&quot;,<sp/>displs=&quot;&lt;&lt;displs&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sendcount<sp/>=<sp/>sendbuf.size();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag<sp/>=<sp/>MPI_Gatherv(&amp;sendbuf[0],<sp/>sendcount,<sp/>datatype,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;recvbuf[0],<sp/>&amp;recvcounts[0],<sp/>&amp;displs[0],</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datatype,<sp/>root,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Gatherv!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AllGather(std::vector&lt;T&gt;<sp/>&amp;sendbuf,<sp/>std::vector&lt;T&gt;<sp/>&amp;recvbuf)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sendcount<sp/>=<sp/>sendbuf.size();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recvcount<sp/>=<sp/>sendbuf.size();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(recvbuf.size()&lt;sendbuf.size()*Get_size())</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>AllGather!<sp/>Recv<sp/>buffer<sp/>is<sp/>not<sp/>big<sp/>enough<sp/>to<sp/>fit<sp/>the<sp/>expected<sp/>data!<sp/>We<sp/>expect<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>messages<sp/>of<sp/>count<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;recvcount&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>(total<sp/>size=&quot;</highlight><highlight class="normal">&lt;&lt;recvcount*Get_size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;)<sp/>but<sp/>the<sp/>recv<sp/>buffer<sp/>only<sp/>has<sp/>size<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;recvbuf.size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag<sp/>=<sp/>MPI_Allgather(&amp;sendbuf[0],<sp/>sendcount,<sp/>datatype,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;recvbuf[0],<sp/>recvcount,<sp/>datatype,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Allgather!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AllGatherv(std::vector&lt;T&gt;<sp/>&amp;sendbuf,<sp/>std::vector&lt;T&gt;<sp/>&amp;recvbuf,<sp/>std::vector&lt;int&gt;<sp/>recvcounts)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>automatically<sp/>calculate<sp/>the<sp/>displacements<sp/>assuming<sp/>that<sp/>the<sp/>incoming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>should<sp/>just<sp/>be<sp/>stacked<sp/>in<sp/>the<sp/>order<sp/>of<sp/>the<sp/>process<sp/>ranks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>displs(Get_size());</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displs.push_back(0);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(recvcounts.size()-1);<sp/>i++)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displs.push_back(i);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sendcount<sp/>=<sp/>sendbuf.size();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errflag<sp/>=<sp/>MPI_Allgatherv(&amp;sendbuf[0],<sp/>sendcount,<sp/>datatype,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;recvbuf[0],<sp/>&amp;recvcounts,<sp/>&amp;displs,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datatype,<sp/>boundcomm);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errflag!=0)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Allgatherv!<sp/>Received<sp/>error<sp/>flag:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;errflag;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>all<sp/>processes<sp/>in<sp/>this<sp/>group<sp/>(possibly<sp/>all<sp/>processes<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&quot;WORLD&quot;;<sp/>implementation<sp/>dependent)<sp/>to<sp/>stop<sp/>executing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Useful<sp/>for<sp/>abnormal<sp/>termination<sp/>(since<sp/>if<sp/>one<sp/>processes<sp/>throws</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>exception<sp/>then<sp/>the<sp/>others<sp/>can<sp/>easily<sp/>get<sp/>stuck<sp/>waiting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>messages<sp/>that<sp/>will<sp/>never<sp/>arrive).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abort()</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rank<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_rank()&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Issuing<sp/>MPI_Abort<sp/>command,<sp/>attempting<sp/>to<sp/>terminate<sp/>all<sp/>processes...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Abort(boundcomm,<sp/>1);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Tells<sp/>master<sp/>to<sp/>wait<sp/>until<sp/>all<sp/>other<sp/>processes<sp/>pass<sp/>this<sp/>function,<sp/>with<sp/>the<sp/>specified<sp/>MPI<sp/>tag</highlight></codeline>
<codeline lineno="576"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>masterWaitForAll(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Inverse<sp/>of<sp/>the<sp/>above.<sp/>Everyone<sp/>waits<sp/>for<sp/>master<sp/>to<sp/>pass<sp/>this<sp/>(but<sp/>not<sp/>for<sp/>anyone<sp/>else)</highlight></codeline>
<codeline lineno="579"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allWaitForMaster(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Everyone<sp/>waits<sp/>for<sp/>master<sp/>to<sp/>pass<sp/>this,<sp/>and<sp/>runs<sp/>&quot;func&quot;<sp/>periodically<sp/>while<sp/>waiting</highlight></codeline>
<codeline lineno="582"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allWaitForMasterWithFunc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*func)());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>An<sp/>implementation<sp/>of<sp/>Barrier<sp/>that<sp/>will<sp/>fall<sp/>through<sp/>if<sp/>synchronisation<sp/>takes<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Could<sp/>modify<sp/>to<sp/>take<sp/>a<sp/>function<sp/>pointer<sp/>to<sp/>run<sp/>while<sp/>waiting.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Supply<sp/>MPI<sp/>tag<sp/>to<sp/>identify<sp/>each<sp/>particular<sp/>barrier.</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Returns<sp/>&apos;false&apos;<sp/>if<sp/>barrier<sp/>succeeds,<sp/>&apos;true&apos;<sp/>if<sp/>barrier<sp/>times<sp/>out<sp/>(i.e.<sp/>answers<sp/>the<sp/>question<sp/>&quot;did<sp/>the<sp/>barrier<sp/>time<sp/>out?&quot;)</highlight></codeline>
<codeline lineno="588"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BarrierWithTimeout(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::duration&lt;double&gt;<sp/>timeout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>This<sp/>is<sp/>a<sp/>fancy<sp/>barrier<sp/>that<sp/>waits<sp/>a<sp/>certain<sp/>amount<sp/>of<sp/>time<sp/>after<sp/>the<sp/>FIRST<sp/>process</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>enters<sp/>before<sp/>unlocking<sp/>(so<sp/>that<sp/>other<sp/>action<sp/>can<sp/>be<sp/>taken).<sp/>This<sp/>means<sp/>that<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>processes<sp/>that<sp/>enter<sp/>the<sp/>barrier<sp/>*do*<sp/>get<sp/>synchronised,<sp/>even<sp/>if<sp/>the<sp/>barrier<sp/>unlocks.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>This<sp/>helps<sp/>the<sp/>synchronisation<sp/>to<sp/>be<sp/>achieved<sp/>next<sp/>time.</highlight></codeline>
<codeline lineno="594"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BarrierWithCommonTimeout(std::chrono::duration&lt;double&gt;<sp/>timeout,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag_entered,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag_timeleft);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>This<sp/>routine<sp/>exists<sp/>for<sp/>MPI<sp/>debugging<sp/>purposes,<sp/>to<sp/>help<sp/>make<sp/>sure<sp/>that</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>all<sp/>MPI<sp/>messages<sp/>are<sp/>received<sp/>before<sp/>MPI_Finalize<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>It<sp/>doesn&apos;t<sp/>fix<sp/>any<sp/>problems,<sp/>it<sp/>just<sp/>lets<sp/>us<sp/>notice<sp/>if<sp/>they<sp/>exist.</highlight></codeline>
<codeline lineno="601"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_for_unreceived_messages(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Receive<sp/>any<sp/>waiting<sp/>messages<sp/>with<sp/>a<sp/>given<sp/>tag<sp/>from<sp/>a<sp/>given<sp/>source<sp/>(possibly<sp/>MPI_ANY_SOURCE)</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Need<sp/>to<sp/>know<sp/>what<sp/>the<sp/>messages<sp/>are<sp/>in<sp/>order<sp/>to<sp/>provide<sp/>an<sp/>appropriate<sp/>Recv<sp/>buffer<sp/>(and<sp/>size)</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>The<sp/>last<sp/>message<sp/>received<sp/>will<sp/>remain<sp/>in<sp/>the<sp/>buffer<sp/>and<sp/>may<sp/>be<sp/>used<sp/>(useful<sp/>if<sp/>several<sp/>messages</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>about<sp/>the<sp/>same<sp/>thing<sp/>are<sp/>expected<sp/>to<sp/>pile<sp/>up)</highlight></codeline>
<codeline lineno="607"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Recv_all(T*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_loops)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status<sp/>status;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(loop&lt;max_loops<sp/>and<sp/>Iprobe(source,<sp/>tag,<sp/>&amp;status))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Detected<sp/>message<sp/>from<sp/>process<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;status.MPI_SOURCE&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>tag<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;status.MPI_TAG&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>doing<sp/>Recv&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Status<sp/>recv_status;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Recv(buffer,<sp/>size,<sp/>status.MPI_SOURCE,<sp/>status.MPI_TAG,<sp/>&amp;recv_status);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>message<sp/>from<sp/>process<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;status.MPI_SOURCE&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>tag<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;status.MPI_TAG&lt;&lt;</highlight><highlight class="stringliteral">&quot;.<sp/>Discarding<sp/>any<sp/>existing<sp/>message<sp/>in<sp/>the<sp/>output<sp/>buffer<sp/>as<sp/>obsolete...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++loop;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(loop==max_loops)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>attempting<sp/>to<sp/>clean<sp/>out<sp/>unreceived<sp/>messages<sp/>from<sp/>other<sp/>processes!<sp/>Received<sp/>maximum<sp/>allowed<sp/>number<sp/>of<sp/>messages<sp/>(&quot;</highlight><highlight class="normal">&lt;&lt;loop&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>note<sp/>that<sp/>MPI<sp/>size<sp/>is<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Get_size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(loop&gt;0)<sp/>LOGGER<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Communicator<sp/>&apos;&quot;</highlight><highlight class="normal">&lt;&lt;myname&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;<sp/>received<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;loop&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>messages<sp/>with<sp/>tag<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tag&lt;&lt;</highlight><highlight class="stringliteral">&quot;.<sp/>Only<sp/>the<sp/>last<sp/>of<sp/>these<sp/>will<sp/>be<sp/>readable<sp/>from<sp/>the<sp/>output<sp/>buffer,<sp/>the<sp/>rest<sp/>were<sp/>discarded.&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>A<sp/>generic<sp/>place<sp/>to<sp/>store<sp/>a<sp/>tag<sp/>commonly<sp/>used<sp/>by<sp/>this<sp/>communicator</highlight></codeline>
<codeline lineno="637"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mytag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>pointer<sp/>to<sp/>raw<sp/>bound<sp/>communicator</highlight></codeline>
<codeline lineno="640"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm*<sp/>get_boundcomm()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;boundcomm;<sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>process<sp/>ID<sp/>of<sp/>the<sp/>master<sp/>process<sp/>(rank<sp/>0)</highlight></codeline>
<codeline lineno="643"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MasterPID();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>process<sp/>ID<sp/>of<sp/>the<sp/>master<sp/>process<sp/>(rank<sp/>0)</highlight></codeline>
<codeline lineno="646"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_MasterPID(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>The<sp/>MPI<sp/>communicator<sp/>to<sp/>which<sp/>the<sp/>current<sp/>object<sp/>&quot;talks&quot;.</highlight></codeline>
<codeline lineno="651"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm<sp/>boundcomm;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>A<sp/>name<sp/>to<sp/>identify<sp/>the<sp/>communicator<sp/>group<sp/>to<sp/>which<sp/>this<sp/>object<sp/>is<sp/>bound</highlight></codeline>
<codeline lineno="654"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>myname;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>The<sp/>process<sp/>ID<sp/>of<sp/>the<sp/>master<sp/>process<sp/>(rank<sp/>0)</highlight></codeline>
<codeline lineno="657"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>MPI_Init<sp/>has<sp/>been<sp/>called<sp/>(it<sp/>is<sp/>an<sp/>error<sp/>to<sp/>call<sp/>it<sp/>twice)</highlight></codeline>
<codeline lineno="661"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT_SYMBOLS<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Is_initialized();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialise<sp/>MPI</highlight></codeline>
<codeline lineno="664"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT_SYMBOLS<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>MPI_Finalize<sp/>has<sp/>been<sp/>called<sp/>(it<sp/>is<sp/>an<sp/>error<sp/>to<sp/>do<sp/>anything<sp/>else<sp/>after<sp/>this)</highlight></codeline>
<codeline lineno="667"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT_SYMBOLS<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Is_finalized();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Finalize<sp/>MPI</highlight></codeline>
<codeline lineno="670"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT_SYMBOLS<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Finalize();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Prepare<sp/>for<sp/>calling<sp/>MPI_Finalize,<sp/>but<sp/>call<sp/>MPI_abort<sp/>and<sp/>exit<sp/>function<sp/>if<sp/>timeout<sp/>is<sp/>exceeded.</highlight></codeline>
<codeline lineno="673"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT_SYMBOLS<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PrepareForFinalizeWithTimeout(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_mpi_abort);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Nice<sp/>wrapper<sp/>for<sp/>getting<sp/>the<sp/>message<sp/>size<sp/>from<sp/>an<sp/>MPI_status<sp/>struct.</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Provide<sp/>the<sp/>type<sp/>whose<sp/>MPI_Datatype<sp/>you<sp/>want<sp/>to<sp/>retrieve<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>template<sp/>argument.</highlight></codeline>
<codeline lineno="678"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Get_count(MPI_Status<sp/>*status)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Datatype<sp/>datatype<sp/>=<sp/>get_mpi_data_type&lt;T&gt;::type();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgsize;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Get_count(status,<sp/>datatype,<sp/>&amp;msgsize);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msgsize&lt;0)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>errmsg;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>performing<sp/>MPI_Get_count!<sp/>Message<sp/>size<sp/>returned<sp/>negative<sp/>(value<sp/>was<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;msgsize&lt;&lt;</highlight><highlight class="stringliteral">&quot;)!<sp/>This<sp/>can<sp/>happen<sp/>if<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>received<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>size<sp/>of<sp/>the<sp/>specified<sp/>MPI_Datatype.<sp/>In<sp/>other<sp/>words<sp/>you<sp/>may<sp/>have<sp/>specified<sp/>a<sp/>type<sp/>that<sp/>doesn&apos;t<sp/>match<sp/>the<sp/>type<sp/>of<sp/>the<sp/>sent<sp/>message;<sp/>please<sp/>double-check<sp/>this.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>errmsg.str());</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msgsize;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@{<sp/>Helpers<sp/>for<sp/>registration<sp/>of<sp/>compound<sp/>datatypes</highlight></codeline>
<codeline lineno="694"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Structure<sp/>to<sp/>hold<sp/>an<sp/>MPI<sp/>startup<sp/>function<sp/>plus<sp/>metadata</highlight></codeline>
<codeline lineno="696"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MpiIniFunc</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>location;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*func)();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MpiIniFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*f)())</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>location(l)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>name(n)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>func(f)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runme()</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*func)();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>mylocation(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>location;}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>myname<sp/><sp/><sp/><sp/>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Struct<sp/>for<sp/>adding<sp/>functions<sp/>to<sp/>the<sp/>&apos;mpi_ini_functions&apos;<sp/>map</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>This<sp/>will<sp/>add<sp/>functions<sp/>to<sp/>the<sp/>map<sp/>when<sp/>it<sp/>is<sp/>constructed.<sp/>Works</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>on<sp/>the<sp/>same<sp/>idea<sp/>as<sp/>the<sp/>&quot;ini_code&quot;<sp/>struct,<sp/>except<sp/>it<sp/>doesn&apos;t</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>cause<sp/>the<sp/>functions<sp/>to<sp/>be<sp/>run,<sp/>just<sp/>&quot;queues<sp/>them<sp/>up&quot;<sp/>so<sp/>to<sp/>speak.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>struct<sp/>AddMpiIniFunc<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>AddMpiIniFunc(const<sp/>std::string&amp;<sp/>local_info,<sp/>const<sp/>std::string&amp;<sp/>name,<sp/>void(*func)());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="726"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>include<sp/>guard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Utils/include/gambit/Utils/mpiwrapper.hpp"/>
  </compounddef>
</doxygen>
