<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1Priors_1_1BasePrior" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gambit::Priors::BasePrior</compoundname>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1Cauchy" prot="public" virt="non-virtual">Gambit::Priors::Cauchy</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1CompositePrior" prot="public" virt="non-virtual">Gambit::Priors::CompositePrior</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1DoubleLogFlatJoin" prot="public" virt="non-virtual">Gambit::Priors::DoubleLogFlatJoin</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1Dummy" prot="public" virt="non-virtual">Gambit::Priors::Dummy</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1FixedPrior" prot="public" virt="non-virtual">Gambit::Priors::FixedPrior</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1Gaussian" prot="public" virt="non-virtual">Gambit::Priors::Gaussian</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1LogNormal" prot="public" virt="non-virtual">Gambit::Priors::LogNormal</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1MultiPriors" prot="public" virt="non-virtual">Gambit::Priors::MultiPriors</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1None" prot="public" virt="non-virtual">Gambit::Priors::None</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1Plugin" prot="public" virt="non-virtual">Gambit::Priors::Plugin</derivedcompoundref>
    <derivedcompoundref refid="classGambit_1_1Priors_1_1RangePrior1D" prot="public" virt="non-virtual">Gambit::Priors::RangePrior1D&lt; T &gt;</derivedcompoundref>
    <includes refid="base__prior_8hpp" local="no">base_prior.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1BasePrior_1afc544e1c4aef32e2d4c4a0fcbb1e2339" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gambit::Priors::BasePrior::param_size</definition>
        <argsstring></argsstring>
        <name>param_size</name>
        <qualifiedname>Gambit::Priors::BasePrior::param_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="43" column="20" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGambit_1_1Priors_1_1BasePrior_1ab54eef4c7b0188cc43c60e10f77fac3d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gambit::Priors::BasePrior::param_names</definition>
        <argsstring></argsstring>
        <name>param_names</name>
        <qualifiedname>Gambit::Priors::BasePrior::param_names</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="46" column="19" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1af23c343daddeab5deb668909eff4d918" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Gambit::Priors::BasePrior::~BasePrior</definition>
        <argsstring>()=default</argsstring>
        <name>~BasePrior</name>
        <qualifiedname>Gambit::Priors::BasePrior::~BasePrior</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="49" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a839ff7a9704898c967f03add67950b05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::BasePrior::BasePrior</definition>
        <argsstring>()</argsstring>
        <name>BasePrior</name>
        <qualifiedname>Gambit::Priors::BasePrior::BasePrior</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="51" column="7" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1aefa66cd74f99ecf7d29dcb9c608ed202" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::BasePrior::BasePrior</definition>
        <argsstring>(const int param_size)</argsstring>
        <name>BasePrior</name>
        <qualifiedname>Gambit::Priors::BasePrior::BasePrior</qualifiedname>
        <param>
          <type>const int</type>
          <declname>param_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="53" column="16" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a55ba5474027bb858c3561600aeb39dbb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::BasePrior::BasePrior</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;param_names, const int param_size=0)</argsstring>
        <name>BasePrior</name>
        <qualifiedname>Gambit::Priors::BasePrior::BasePrior</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>param_names</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>param_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="56" column="16" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="56" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a421fbf213a5d7b1734ff5190cc27ff6a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::Priors::BasePrior::BasePrior</definition>
        <argsstring>(const std::string &amp;param_name, const int param_size=0)</argsstring>
        <name>BasePrior</name>
        <qualifiedname>Gambit::Priors::BasePrior::BasePrior</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>param_name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>param_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="59" column="16" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1adaf214a4f7aa4e9c4c3fa7daebc32903" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gambit::Priors::BasePrior::transform</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;, std::unordered_map&lt; std::string, double &gt; &amp;) const =0</argsstring>
        <name>transform</name>
        <qualifiedname>Gambit::Priors::BasePrior::transform</qualifiedname>
        <reimplementedby refid="classGambit_1_1Priors_1_1None_1a891e558a6272bddbd35b9de9c66e2d88">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1FixedPrior_1a3dbf627a3ac53d937863e4b5fa0bc74e">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1MultiPriors_1ac61f7b43b139175a56e6e26c76ff8c2f">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1DoubleLogFlatJoin_1abd99d4d54844f9f30c2fdbb62028d85e">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1RangePrior1D_1aff4c53ab319d72b7a4b82768aeeae7ee">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Cauchy_1a4b2a3519c38536de901cfa78385d4a7e">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1CompositePrior_1afead5e0542bcef9cd58203783a7660ea">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Dummy_1a31a00e08ae9b3382872a873b87a70331">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Gaussian_1a2d48f21dfaa76fcc5ce7ffc9b341abbf">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1LogNormal_1aeb2cefb923592d9d0234431b67dab9bb">transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Plugin_1ad1b5e2c85a3d5c374f4318fb17184638">transform</reimplementedby>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Transform from unit hypercube to parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="63" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a5ae0c15c2fb6c0ad555ff3b230b26352" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>virtual std::vector&lt; double &gt; Gambit::Priors::BasePrior::inverse_transform</definition>
        <argsstring>(const std::unordered_map&lt; std::string, double &gt; &amp;) const =0</argsstring>
        <name>inverse_transform</name>
        <qualifiedname>Gambit::Priors::BasePrior::inverse_transform</qualifiedname>
        <reimplementedby refid="classGambit_1_1Priors_1_1DoubleLogFlatJoin_1adef085e75b90cda7ffdaf093b7960c8d">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1None_1a8d32d675075a9e03baf74ad22f454c08">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Plugin_1ae9c1188db01b34c70104cf9e902175d3">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Cauchy_1aea5fc8fc53625a44d75c7fdb690ddb83">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1CompositePrior_1a07a0b875989e2ded406e13749fb378d1">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Dummy_1ab4c4eba859288071773c4f9df0ebddf6">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1FixedPrior_1adef251b900e96ee76668d056b5ecee9c">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1MultiPriors_1a29b3ab7e38c3e5130b7cafbe1f56b837">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1RangePrior1D_1a575d46d465dc7a32a37a967b1bfc05bd">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Gaussian_1ab91f955a1223a2da39d5476cb1091a78">inverse_transform</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1LogNormal_1a4d1c5c55a9160199b8534e18ca4e41fa">inverse_transform</reimplementedby>
        <param>
          <type>const std::unordered_map&lt; std::string, double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Transform from parameter back to unit hypercube. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="66" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a6b502e586d6c964a9dfe2935b630a2d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double Gambit::Priors::BasePrior::operator()</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Gambit::Priors::BasePrior::operator()</qualifiedname>
        <reimplementedby refid="classGambit_1_1Priors_1_1Cauchy_1aed77f6e26c21985480ad6b9aa8afdc9e">operator()</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1DoubleLogFlatJoin_1aec998fb8ef2bf5b07e654a5b369346dc">operator()</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1RangePrior1D_1a03d09c89c5d33507d969a5e26f3b76d3">operator()</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Gaussian_1a226ea5cb481e4c662d722232924e038e">operator()</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1LogNormal_1a52764b5e8ba402d151c4a09bf9a48d29">operator()</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1Plugin_1a80252b54f2f6090ca3c0ef1accd64c74">operator()</reimplementedby>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Log of PDF density. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="69" column="22" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a6e59882ac88444b03d95ecd3607ec986" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt; std::string &gt; Gambit::Priors::BasePrior::getShownParameters</definition>
        <argsstring>() const</argsstring>
        <name>getShownParameters</name>
        <qualifiedname>Gambit::Priors::BasePrior::getShownParameters</qualifiedname>
        <reimplementedby refid="classGambit_1_1Priors_1_1CompositePrior_1ae8635657b2beaec96521bd88c3636d89">getShownParameters</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1FixedPrior_1a7e3acda0a07c505caf5c6f412149bb14">getShownParameters</reimplementedby>
        <reimplementedby refid="classGambit_1_1Priors_1_1MultiPriors_1af5a3de26d78d61e1f873da09b0ba5090">getShownParameters</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="75" column="27" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a9c476b07daa0abd7259573e5825c3d48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Gambit::Priors::BasePrior::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Gambit::Priors::BasePrior::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="77" column="27" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1ab79d2df1f9c6350ed69a76e5d123de39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::Priors::BasePrior::setSize</definition>
        <argsstring>(const unsigned int size)</argsstring>
        <name>setSize</name>
        <qualifiedname>Gambit::Priors::BasePrior::setSize</qualifiedname>
        <param>
          <type>const unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="79" column="19" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1a58e160ebd0cc101bf53e65cf4e6eb94a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int &amp;</type>
        <definition>unsigned int &amp; Gambit::Priors::BasePrior::sizeRef</definition>
        <argsstring>()</argsstring>
        <name>sizeRef</name>
        <qualifiedname>Gambit::Priors::BasePrior::sizeRef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="81" column="28" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1Priors_1_1BasePrior_1aaf6a0098f19105d7e11b5e7a8b74a873" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; Gambit::Priors::BasePrior::getParameters</definition>
        <argsstring>() const</argsstring>
        <name>getParameters</name>
        <qualifiedname>Gambit::Priors::BasePrior::getParameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="83" column="26" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for priors. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Gambit::Priors::BasePrior</label>
        <link refid="classGambit_1_1Priors_1_1BasePrior"/>
      </node>
      <node id="2">
        <label>Gambit::Priors::Cauchy</label>
        <link refid="classGambit_1_1Priors_1_1Cauchy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Gambit::Priors::CompositePrior</label>
        <link refid="classGambit_1_1Priors_1_1CompositePrior"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Gambit::Priors::DoubleLogFlatJoin</label>
        <link refid="classGambit_1_1Priors_1_1DoubleLogFlatJoin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Gambit::Priors::Dummy</label>
        <link refid="classGambit_1_1Priors_1_1Dummy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Gambit::Priors::FixedPrior</label>
        <link refid="classGambit_1_1Priors_1_1FixedPrior"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Gambit::Priors::Gaussian</label>
        <link refid="classGambit_1_1Priors_1_1Gaussian"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Gambit::Priors::LogNormal</label>
        <link refid="classGambit_1_1Priors_1_1LogNormal"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Gambit::Priors::MultiPriors</label>
        <link refid="classGambit_1_1Priors_1_1MultiPriors"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Gambit::Priors::None</label>
        <link refid="classGambit_1_1Priors_1_1None"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Gambit::Priors::Plugin</label>
        <link refid="classGambit_1_1Priors_1_1Plugin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Gambit::Priors::RangePrior1D&lt; T &gt;</label>
        <link refid="classGambit_1_1Priors_1_1RangePrior1D"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" line="40" column="5" bodyfile="ScannerBit/include/gambit/ScannerBit/base_prior.hpp" bodystart="41" bodyend="84"/>
    <listofallmembers>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a839ff7a9704898c967f03add67950b05" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aefa66cd74f99ecf7d29dcb9c608ed202" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a55ba5474027bb858c3561600aeb39dbb" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a421fbf213a5d7b1734ff5190cc27ff6a" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>BasePrior</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1aaf6a0098f19105d7e11b5e7a8b74a873" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>getParameters</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a6e59882ac88444b03d95ecd3607ec986" prot="public" virt="virtual"><scope>Gambit::Priors::BasePrior</scope><name>getShownParameters</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a5ae0c15c2fb6c0ad555ff3b230b26352" prot="public" virt="pure-virtual"><scope>Gambit::Priors::BasePrior</scope><name>inverse_transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a6b502e586d6c964a9dfe2935b630a2d3" prot="public" virt="virtual"><scope>Gambit::Priors::BasePrior</scope><name>operator()</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab54eef4c7b0188cc43c60e10f77fac3d" prot="protected" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>param_names</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1afc544e1c4aef32e2d4c4a0fcbb1e2339" prot="private" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>param_size</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1ab79d2df1f9c6350ed69a76e5d123de39" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>setSize</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a9c476b07daa0abd7259573e5825c3d48" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>size</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1a58e160ebd0cc101bf53e65cf4e6eb94a" prot="public" virt="non-virtual"><scope>Gambit::Priors::BasePrior</scope><name>sizeRef</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1adaf214a4f7aa4e9c4c3fa7daebc32903" prot="public" virt="pure-virtual"><scope>Gambit::Priors::BasePrior</scope><name>transform</name></member>
      <member refid="classGambit_1_1Priors_1_1BasePrior_1af23c343daddeab5deb668909eff4d918" prot="public" virt="virtual"><scope>Gambit::Priors::BasePrior</scope><name>~BasePrior</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
