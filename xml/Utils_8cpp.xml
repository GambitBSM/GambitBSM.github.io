<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Utils_8cpp" kind="file" language="C++">
    <compoundname>Utils.cpp</compoundname>
    <includes refid="Utils_8hpp" local="yes">gambit/ColliderBit/Utils.hpp</includes>
    <includes refid="ColliderBit__eventloop_8hpp" local="yes">gambit/ColliderBit/ColliderBit_eventloop.hpp</includes>
    <includes refid="threadsafe__rng_8hpp" local="yes">gambit/Utils/threadsafe_rng.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="118">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>gambit/Backends/default_bossed_versions.hpp</label>
        <link refid="default__bossed__versions_8hpp"/>
      </node>
      <node id="115">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="120">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>gambit/ColliderBit/ColliderBit_Higgs_rollcall.hpp</label>
        <link refid="ColliderBit__Higgs__rollcall_8hpp"/>
      </node>
      <node id="157">
        <label>gambit/ColliderBit/ColliderBit_LEP_rollcall.hpp</label>
        <link refid="ColliderBit__LEP__rollcall_8hpp"/>
      </node>
      <node id="158">
        <label>gambit/ColliderBit/ColliderBit_MC_rollcall.hpp</label>
        <link refid="ColliderBit__MC__rollcall_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gambit/ColliderBit/ColliderBit_eventloop.hpp</label>
        <link refid="ColliderBit__eventloop_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>gambit/ColliderBit/ColliderBit_eventloop_utils.hpp</label>
        <link refid="ColliderBit__eventloop__utils_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>gambit/ColliderBit/ColliderBit_measurements_rollcall.hpp</label>
        <link refid="ColliderBit__measurements__rollcall_8hpp"/>
      </node>
      <node id="125">
        <label>gambit/ColliderBit/ColliderBit_rollcall.hpp</label>
        <link refid="ColliderBit__rollcall_8hpp"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>gambit/ColliderBit/ColliderBit_types.hpp</label>
        <link refid="ColliderBit__types_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>gambit/ColliderBit/MCLoopInfo.hpp</label>
        <link refid="MCLoopInfo_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>gambit/ColliderBit/MC_convergence.hpp</label>
        <link refid="MC__convergence_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/ColliderBit/Utils.hpp</label>
        <link refid="Utils_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>gambit/ColliderBit/analyses/AnalysisContainer.hpp</label>
        <link refid="AnalysisContainer_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>gambit/ColliderBit/analyses/AnalysisData.hpp</label>
        <link refid="AnalysisData_8hpp"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>gambit/ColliderBit/analyses/AnalysisLogLikes.hpp</label>
        <link refid="AnalysisLogLikes_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>gambit/ColliderBit/analyses/EventCounter.hpp</label>
        <link refid="EventCounter_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>gambit/ColliderBit/analyses/SignalRegionData.hpp</label>
        <link refid="SignalRegionData_8hpp"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>gambit/ColliderBit/colliders/BaseCollider.hpp</label>
        <link refid="BaseCollider_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>gambit/ColliderBit/colliders/Pythia8/Py8Collider.hpp</label>
        <link refid="Py8Collider_8hpp"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>gambit/ColliderBit/colliders/Pythia8/SetHooksClass.hpp</label>
        <link refid="SetHooksClass_8hpp"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>gambit/ColliderBit/detectors/BaseDetector.hpp</label>
        <link refid="BaseDetector_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>gambit/ColliderBit/detectors/BuckFast.hpp</label>
        <link refid="BuckFast_8hpp"/>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>gambit/ColliderBit/limits/ALEPHSleptonLimits.hpp</label>
        <link refid="ALEPHSleptonLimits_8hpp_source"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>gambit/ColliderBit/limits/BaseLimitContainer.hpp</label>
        <link refid="BaseLimitContainer_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>gambit/ColliderBit/limits/L3GauginoLimits.hpp</label>
        <link refid="L3GauginoLimits_8hpp_source"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>gambit/ColliderBit/limits/L3SleptonLimits.hpp</label>
        <link refid="L3SleptonLimits_8hpp_source"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>gambit/ColliderBit/limits/OPALDegenerateCharginoLimits.hpp</label>
        <link refid="OPALDegenerateCharginoLimits_8hpp_source"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>gambit/ColliderBit/limits/OPALGauginoLimits.hpp</label>
        <link refid="OPALGauginoLimits_8hpp_source"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>gambit/ColliderBit/limits/PointsAndLines.hpp</label>
        <link refid="PointsAndLines_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/ColliderBit/mt2_bisect.h</label>
        <link refid="mt2__bisect_8h_source"/>
      </node>
      <node id="130">
        <label>gambit/ColliderBit/xsec.hpp</label>
        <link refid="xsec_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Utils.cpp</label>
        <link refid="Utils_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>gambit/Elements/daFunk.hpp</label>
        <link refid="daFunk_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>gambit/Elements/decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>gambit/Elements/flav_prediction.hpp</label>
        <link refid="flav__prediction_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gambit/Elements/functors.hpp</label>
        <link refid="functors_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>gambit/Elements/gambit_module_headers.hpp</label>
        <link refid="gambit__module__headers_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>gambit/Elements/halo_types.hpp</label>
        <link refid="halo__types_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>gambit/Elements/higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>gambit/Elements/module_macros_common.hpp</label>
        <link refid="module__macros__common_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gambit/Elements/module_macros_inmodule.hpp</label>
        <link refid="module__macros__inmodule_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Elements/module_macros_inmodule_defs.hpp</label>
        <link refid="module__macros__inmodule__defs_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Elements/safety_bucket.hpp</label>
        <link refid="safety__bucket_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>gambit/Elements/shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>gambit/Elements/spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>gambit/Elements/wimp_types.hpp</label>
        <link refid="wimp__types_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="75">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>gambit/Utils/PID_pair.hpp</label>
        <link refid="PID__pair_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>gambit/Utils/begin_ignore_warnings_eigen.hpp</label>
        <link refid="begin__ignore__warnings__eigen_8hpp"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="143">
        <label>gambit/Utils/end_ignore_warnings.hpp</label>
        <link refid="end__ignore__warnings_8hpp"/>
      </node>
      <node id="49">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="39">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="90">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="123">
        <label>gambit/Utils/threadsafe_rng.hpp</label>
        <link refid="threadsafe__rng_8hpp"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>Eigen/Core</label>
      </node>
      <node id="7">
        <label>HEPUtils/BinnedFn.h</label>
      </node>
      <node id="8">
        <label>HEPUtils/Event.h</label>
      </node>
      <node id="9">
        <label>HEPUtils/FastJet.h</label>
      </node>
      <node id="138">
        <label>HEPUtils/Jet.h</label>
      </node>
      <node id="6">
        <label>HEPUtils/MathUtils.h</label>
      </node>
      <node id="137">
        <label>HEPUtils/Particle.h</label>
      </node>
      <node id="91">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="62">
        <label>array</label>
      </node>
      <node id="107">
        <label>assert.h</label>
      </node>
      <node id="67">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="119">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="66">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="40">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="35">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="109">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="46">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="36">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="45">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="80">
        <label>boost/preprocessor/comparison/greater.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="44">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="81">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="47">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="48">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="82">
        <label>boost/preprocessor/repetition/enum.hpp</label>
      </node>
      <node id="83">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="42">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="43">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="84">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="92">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="108">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="33">
        <label>boost/version.hpp</label>
      </node>
      <node id="56">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>cfloat</label>
      </node>
      <node id="22">
        <label>chrono</label>
      </node>
      <node id="64">
        <label>cmath</label>
      </node>
      <node id="28">
        <label>complex</label>
      </node>
      <node id="150">
        <label>cstdlib</label>
      </node>
      <node id="27">
        <label>cstring</label>
      </node>
      <node id="61">
        <label>deque</label>
      </node>
      <node id="50">
        <label>exception</label>
      </node>
      <node id="60">
        <label>forward_list</label>
      </node>
      <node id="54">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="122">
        <label>gambit/Backends/backend_types_rollcall.hpp</label>
      </node>
      <node id="159">
        <label>gambit/ColliderBit/ColliderBit_models_rollcall.hpp</label>
      </node>
      <node id="134">
        <label>gambit/ColliderBit/colliders/Pythia8/Py8Collider_typedefs.hpp</label>
      </node>
      <node id="65">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="111">
        <label>gsl/gsl_errno.h</label>
      </node>
      <node id="110">
        <label>gsl/gsl_integration.h</label>
      </node>
      <node id="144">
        <label>iomanip</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="73">
        <label>limits</label>
      </node>
      <node id="59">
        <label>list</label>
      </node>
      <node id="19">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="68">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="17">
        <label>omp.h</label>
      </node>
      <node id="77">
        <label>ostream</label>
      </node>
      <node id="124">
        <label>random</label>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="23">
        <label>sstream</label>
      </node>
      <node id="86">
        <label>stdexcept</label>
      </node>
      <node id="102">
        <label>stdio.h</label>
      </node>
      <node id="103">
        <label>stdlib.h</label>
      </node>
      <node id="26">
        <label>string</label>
      </node>
      <node id="55">
        <label>type_traits</label>
      </node>
      <node id="31">
        <label>unistd.h</label>
      </node>
      <node id="57">
        <label>unordered_map</label>
      </node>
      <node id="58">
        <label>unordered_set</label>
      </node>
      <node id="51">
        <label>utility</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="71">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1ColliderBit">Gambit::ColliderBit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Util function definitions for ColliderBit</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Andy Buckley (<ulink url="mailto:andy.buckley@glasgow.ac.uk">andy.buckley@glasgow.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2017 Aug</para>
</simplesect>
<simplesect kind="author"><para>Abram Krislock (<ulink url="mailto:a.m.b.krislock@fys.uio.no">a.m.b.krislock@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Mar</para>
</simplesect>
<simplesect kind="author"><para>Anders Kvellestad (<ulink url="mailto:anders.kvellestad@fys.uio.no">anders.kvellestad@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Jan</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott (<ulink url="mailto:pat.scott@uq.edu.au">pat.scott@uq.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2020 Jan</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physk.rwth-aachen.de">gonzalo@physk.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Jul</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Util<sp/>function<sp/>definitions<sp/>for<sp/>ColliderBit</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Andy<sp/>Buckley</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(andy.buckley@glasgow.ac.uk)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>\date<sp/>2017<sp/>Aug</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\author<sp/>Abram<sp/>Krislock</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a.m.b.krislock@fys.uio.no)</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Mar</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>\author<sp/>Anders<sp/>Kvellestad</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(anders.kvellestad@fys.uio.no)</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>Jan</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pat.scott@uq.edu.au)</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///<sp/><sp/>\date<sp/>2020<sp/>Jan</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(gonzalo@physk.rwth-aachen.de)</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>\date<sp/>2021<sp/>Jul</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Utils_8hpp" kindref="compound">gambit/ColliderBit/Utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ColliderBit__eventloop_8hpp" kindref="compound">gambit/ColliderBit/ColliderBit_eventloop.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="threadsafe__rng_8hpp" kindref="compound">gambit/Utils/threadsafe_rng.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ColliderBit</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Storage<sp/>of<sp/>different<sp/>FastJet<sp/>methods</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>FJNS::JetAlgorithm<sp/><ref refid="Utils_8hpp_1aae924570454bbbe9d25dcd4eb8af5c96" kindref="member">FJalgorithm_map</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>algorithm)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FJNS::JetAlgorithm<sp/>result;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algorithm<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;antikt&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::antikt_algorithm;}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algorithm<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cambridge&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::cambridge_algorithm;}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algorithm<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;kt&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::kt_algorithm;}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algorithm<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;genkt&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::genkt_algorithm;}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algorithm<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cambridge_for_passive&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::cambridge_for_passive_algorithm;}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>jet<sp/>algorithm<sp/>in<sp/>list<sp/>available.<sp/>Please<sp/>add<sp/>the<sp/>missing<sp/>option<sp/>to<sp/>the<sp/>FJalgorithm_map<sp/>function<sp/>in<sp/>ColliderBit/src/Utils.cpp.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>FJNS::Strategy<sp/>FJstrategy_map(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>strategy)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FJNS::Strategy<sp/>result;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strategy<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Best&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::Best;}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strategy<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NlnN&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::NlnN;}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>jet<sp/>strategy<sp/>in<sp/>list<sp/>available.<sp/>Please<sp/>add<sp/>the<sp/>missing<sp/>option<sp/>to<sp/>the<sp/>FJstrategy_map<sp/>function<sp/>in<sp/>ColliderBit/src/Utils.cpp.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>FJNS::RecombinationScheme<sp/>FJRecomScheme_map(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>reco_scheme)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FJNS::RecombinationScheme<sp/>result;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reco_scheme<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;E_scheme&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::E_scheme;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reco_scheme<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pt_scheme&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::pt_scheme;}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reco_scheme<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pt2_scheme&quot;</highlight><highlight class="normal">)<sp/>{result<sp/>=<sp/>FJNS::pt2_scheme;}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>jet<sp/>recombination<sp/>scheme<sp/>in<sp/>list<sp/>available.<sp/>Please<sp/>add<sp/>the<sp/>missing<sp/>option<sp/>to<sp/>the<sp/>FJRecomScheme_map<sp/>function<sp/>in<sp/>ColliderBit/src/Utils.cpp.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Utils_8hpp_1a3b59353a7ec6cb32c170baddc17ee4ed" kindref="member">random_bool</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@todo<sp/>Handle<sp/>out-of-range<sp/>eff<sp/>values</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1Random_1a2e1bf1e5c2dc85b07a80e06968080817" kindref="member">Random::draw</ref>()<sp/>&lt;<sp/>eff;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Utils_8hpp_1a878e042861c7e3c817f85f0678954ecc" kindref="member">filtereff</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>particles,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_delete)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptParticlesEnd<sp/>=<sp/>std::remove_if(particles.begin(),<sp/>particles.end(),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>bool<sp/>rm<sp/>=<sp/>!random_bool(eff);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(do_delete<sp/>&amp;&amp;<sp/>rm)<sp/>delete<sp/>p;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rm;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>particles.erase(keptParticlesEnd,<sp/>particles.end());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Utility<sp/>function<sp/>for<sp/>filtering<sp/>a<sp/>supplied<sp/>particle<sp/>vector<sp/>by<sp/>sampling<sp/>wrt<sp/>a<sp/>binned<sp/>1D<sp/>efficiency<sp/>map<sp/>in<sp/>pT</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Utils_8hpp_1a878e042861c7e3c817f85f0678954ecc" kindref="member">filtereff</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>particles,<sp/>std::function&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*)&gt;<sp/>eff_fn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_delete)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptParticlesEnd<sp/>=<sp/>std::remove_if(particles.begin(),<sp/>particles.end(),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>p)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>eff<sp/>=<sp/>eff_fn(p);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>bool<sp/>rm<sp/>=<sp/>!random_bool(eff);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(do_delete<sp/>&amp;&amp;<sp/>rm)<sp/>delete<sp/>p;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rm;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>particles.erase(keptParticlesEnd,<sp/>particles.end());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>for<sp/>filtering<sp/>a<sp/>supplied<sp/>particle<sp/>vector<sp/>by<sp/>sampling<sp/>wrt<sp/>a<sp/>binned<sp/>1D<sp/>efficiency<sp/>map<sp/>in<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Utils_8hpp_1acacdc93daa0787f1cf7a436380390a7a" kindref="member">filtereff_pt</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>particles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;&amp;<sp/>eff_pt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_delete)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptParticlesEnd<sp/>=<sp/>std::remove_if(particles.begin(),<sp/>particles.end(),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>p)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>bool<sp/>rm<sp/>=<sp/>!random_bool(eff_pt,<sp/>p-&gt;pT());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(do_delete<sp/>&amp;&amp;<sp/>rm)<sp/>delete<sp/>p;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rm;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>particles.erase(keptParticlesEnd,<sp/>particles.end());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>for<sp/>filtering<sp/>a<sp/>supplied<sp/>particle<sp/>vector<sp/>by<sp/>sampling<sp/>wrt<sp/>a<sp/>binned<sp/>2D<sp/>efficiency<sp/>map<sp/>in<sp/>|eta|<sp/>and<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Utils_8hpp_1a198880b5e00a4a2c6a6e7a3ee801ad1e" kindref="member">filtereff_etapt</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>particles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;&amp;<sp/>eff_etapt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_delete)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptParticlesEnd<sp/>=<sp/>std::remove_if(particles.begin(),<sp/>particles.end(),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>p)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>bool<sp/>rm<sp/>=<sp/>!random_bool(eff_etapt,<sp/>p-&gt;abseta(),<sp/>p-&gt;pT());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(do_delete<sp/>&amp;&amp;<sp/>rm)<sp/>delete<sp/>p;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rm;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>particles.erase(keptParticlesEnd,<sp/>particles.end());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>for<sp/>returning<sp/>a<sp/>collection<sp/>of<sp/>same-flavour,<sp/>oppsosite-sign<sp/>particle<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&gt;<sp/><ref refid="Utils_8hpp_1a4b8fca22bab46eebe47ed3908eca1725" kindref="member">getSFOSpairs</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;<sp/>particles)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&gt;<sp/>SFOSpair_container;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ip1=0;<sp/>ip1&lt;particles.size();<sp/>ip1++)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ip2=ip1+1;<sp/>ip2&lt;particles.size();<sp/>ip2++)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles[ip1]-&gt;abspid()==particles[ip2]-&gt;abspid()<sp/>&amp;&amp;<sp/>particles[ip1]-&gt;pid()!=particles[ip2]-&gt;pid())</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>HEPUtils::Particle*&gt;<sp/>SFOSpair;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SFOSpair.push_back(particles[ip1]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SFOSpair.push_back(particles[ip2]);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SFOSpair_container.push_back(SFOSpair);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SFOSpair_container;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>for<sp/>returning<sp/>a<sp/>collection<sp/>of<sp/>oppsosite-sign<sp/>particle<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&gt;<sp/><ref refid="Utils_8hpp_1a4ade2e59fe5795e1cd55cc1516f6a6f3" kindref="member">getOSpairs</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;<sp/>particles)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&gt;<sp/>OSpair_container;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ip1=0;ip1&lt;particles.size();ip1++)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ip2=ip1+1;<sp/>ip2&lt;particles.size();<sp/>ip2++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles[ip1]-&gt;pid()*particles[ip2]-&gt;pid()&lt;0.)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>HEPUtils::Particle*&gt;<sp/>OSpair;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OSpair.push_back(particles[ip1]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OSpair.push_back(particles[ip2]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OSpair_container.push_back(OSpair);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OSpair_container;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>for<sp/>returning<sp/>a<sp/>collection<sp/>of<sp/>same-sign<sp/>particle<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&gt;<sp/><ref refid="Utils_8hpp_1ab2dfeadec5c25359a418f22b14cf1da6" kindref="member">getSSpairs</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;<sp/>particles)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&gt;<sp/>SSpair_container;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ip1=0;ip1&lt;particles.size();ip1++)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ip2=ip1+1;<sp/>ip2&lt;particles.size();<sp/>ip2++)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(particles[ip1]-&gt;pid()*particles[ip2]-&gt;pid()&gt;0.)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>HEPUtils::Particle*&gt;<sp/>SSpair;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSpair.push_back(particles[ip1]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSpair.push_back(particles[ip2]);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSpair_container.push_back(SSpair);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SSpair_container;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>for<sp/>returning<sp/>a<sp/>collection<sp/>of<sp/>b-tagged<sp/>jet<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Jet*&gt;&gt;<sp/><ref refid="Utils_8hpp_1a0045f719bf4f0224bd502f71fbd49b34" kindref="member">getBJetPairs</ref>(std::vector&lt;const<sp/>HEPUtils::Jet*&gt;<sp/>bjets)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>HEPUtils::Jet*&gt;&gt;<sp/>BJetpair_container;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ibj1=0;<sp/>ibj1&lt;bjets.size();<sp/>++ibj1)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ibj2=ibj1+1;<sp/>ibj2&lt;bjets.size();<sp/>++ibj2)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>HEPUtils::Jet*&gt;<sp/>BJetpair;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BJetpair.push_back(bjets[ibj1]);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BJetpair.push_back(bjets[ibj2]);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BJetpair_container.push_back(BJetpair);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BJetpair_container;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ColliderBit/src/Utils.cpp"/>
  </compounddef>
</doxygen>
