<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="functor__definitions_8hpp" kind="file" language="C++">
    <compoundname>functor_definitions.hpp</compoundname>
    <includes local="no">chrono</includes>
    <includes refid="functors_8hpp" local="yes">gambit/Elements/functors.hpp</includes>
    <includes refid="standalone__error__handlers_8hpp" local="yes">gambit/Utils/standalone_error_handlers.hpp</includes>
    <includes refid="models_8hpp" local="yes">gambit/Models/models.hpp</includes>
    <includes refid="logger_8hpp" local="yes">gambit/Logs/logger.hpp</includes>
    <includes refid="baseprinter_8hpp" local="yes">gambit/Printers/baseprinter.hpp</includes>
    <includes local="no">boost/preprocessor/seq/for_each.hpp</includes>
    <includes local="no">boost/io/ios_state.hpp</includes>
    <includedby refid="backend__macros_8hpp" local="yes">backend_macros.hpp</includedby>
    <includedby refid="Elements_2src_2functors_8cpp" local="yes">functors.cpp</includedby>
    <incdepgraph>
      <node id="113">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>gambit/Backends/default_bossed_versions.hpp</label>
        <link refid="default__bossed__versions_8hpp"/>
      </node>
      <node id="110">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="115">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>gambit/Elements/daFunk.hpp</label>
        <link refid="daFunk_8hpp_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>gambit/Elements/decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>gambit/Elements/flav_prediction.hpp</label>
        <link refid="flav__prediction_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>functor_definitions.hpp</label>
        <link refid="functor__definitions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Elements/functors.hpp</label>
        <link refid="functors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>gambit/Elements/halo_types.hpp</label>
        <link refid="halo__types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>gambit/Elements/higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>gambit/Elements/printable_types.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2printable__types_8hpp"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>gambit/Elements/shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>gambit/Elements/spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gambit/Elements/types_rollcall.hpp</label>
        <link refid="types__rollcall_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>gambit/Elements/wimp_types.hpp</label>
        <link refid="wimp__types_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="62">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gambit/Models/models.hpp</label>
        <link refid="models_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gambit/Printers/basebaseprinter.hpp</label>
        <link refid="basebaseprinter_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>gambit/Printers/baseprinter.hpp</label>
        <link refid="baseprinter_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/Printers/baseprintermanager.hpp</label>
        <link refid="baseprintermanager_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>gambit/Printers/printer_id_tools.hpp</label>
        <link refid="printer__id__tools_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>gambit/ScannerBit/printable_types.hpp</label>
        <link refid="ScannerBit_2include_2gambit_2ScannerBit_2printable__types_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="35">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="75">
        <label>gambit/Utils/factory_registry.hpp</label>
        <link refid="factory__registry_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Utils/mpiwrapper.hpp</label>
        <link refid="mpiwrapper_8hpp"/>
      </node>
      <node id="74">
        <label>gambit/Utils/new_mpi_datatypes.hpp</label>
        <link refid="new__mpi__datatypes_8hpp"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="82">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="50">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="49">
        <label>array</label>
      </node>
      <node id="102">
        <label>assert.h</label>
      </node>
      <node id="54">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="114">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="53">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="26">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="21">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="104">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="120">
        <label>boost/io/ios_state.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="22">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="20">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="69">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="76">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="84">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="103">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="19">
        <label>boost/version.hpp</label>
      </node>
      <node id="43">
        <label>cassert</label>
      </node>
      <node id="87">
        <label>cfloat</label>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
      <node id="51">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>complex</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="48">
        <label>deque</label>
      </node>
      <node id="36">
        <label>exception</label>
      </node>
      <node id="47">
        <label>forward_list</label>
      </node>
      <node id="41">
        <label>fstream</label>
      </node>
      <node id="117">
        <label>gambit/Backends/backend_types_rollcall.hpp</label>
      </node>
      <node id="118">
        <label>gambit/Elements/module_types_rollcall.hpp</label>
      </node>
      <node id="119">
        <label>gambit/Models/model_types_rollcall.hpp</label>
      </node>
      <node id="52">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="106">
        <label>gsl/gsl_errno.h</label>
      </node>
      <node id="105">
        <label>gsl/gsl_integration.h</label>
      </node>
      <node id="40">
        <label>iostream</label>
      </node>
      <node id="60">
        <label>limits</label>
      </node>
      <node id="46">
        <label>list</label>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="55">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="9">
        <label>omp.h</label>
      </node>
      <node id="64">
        <label>ostream</label>
      </node>
      <node id="5">
        <label>set</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="94">
        <label>stdexcept</label>
      </node>
      <node id="97">
        <label>stdio.h</label>
      </node>
      <node id="98">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="42">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>unistd.h</label>
      </node>
      <node id="44">
        <label>unordered_map</label>
      </node>
      <node id="45">
        <label>unordered_set</label>
      </node>
      <node id="37">
        <label>utility</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="58">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>backend_macros.hpp</label>
        <link refid="backend__macros_8hpp"/>
      </node>
      <node id="1">
        <label>functor_definitions.hpp</label>
        <link refid="functor__definitions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>functors.cpp</label>
        <link refid="Elements_2src_2functors_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functor template class definitions.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:patscott@physics.mcgill.ca">patscott@physics.mcgill.ca</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Apr-July, Dec </para>
</simplesect>
<simplesect kind="date"><para>2014 Jan, Mar-May, Sep </para>
</simplesect>
<simplesect kind="date"><para>2015 Apr</para>
</simplesect>
<simplesect kind="author"><para>Anders Kvellestad (<ulink url="mailto:anders.kvellestad@fys.uio.no">anders.kvellestad@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 Apr, Nov</para>
</simplesect>
<simplesect kind="author"><para>Christoph Weniger (<ulink url="mailto:c.weniger@uva.nl">c.weniger@uva.nl</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 May, June, July</para>
</simplesect>
<simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@monash.edu.au">benjamin.farmer@monash.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2013 July, Sep </para>
</simplesect>
<simplesect kind="date"><para>2014 Jan</para>
</simplesect>
<simplesect kind="author"><para>Lars A. Dal (<ulink url="mailto:l.a.dal@fys.uio.no">l.a.dal@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Jan</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:gonzalo@physik.rwth-aachen.de">gonzalo@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2021 Sep</para>
</simplesect>
<simplesect kind="author"><para>Patrick Stoecker (<ulink url="mailto:stoecker@physik.rwth-aachen.de">stoecker@physik.rwth-aachen.de</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2023 Nov</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>Functor<sp/>template<sp/>class<sp/>definitions.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(patscott@physics.mcgill.ca)</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>Apr-July,<sp/>Dec</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Jan,<sp/>Mar-May,<sp/>Sep</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Apr</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Anders<sp/>Kvellestad</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(anders.kvellestad@fys.uio.no)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/>\date<sp/>2013<sp/>Apr,<sp/>Nov</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\author<sp/>Christoph<sp/>Weniger</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c.weniger@uva.nl)</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>May,<sp/>June,<sp/>July</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@monash.edu.au)</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>\date<sp/>2013<sp/>July,<sp/>Sep</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/>\date<sp/>2014<sp/>Jan</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/>\author<sp/>Lars<sp/>A.<sp/>Dal</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(l.a.dal@fys.uio.no)</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Jan</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="36"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(gonzalo@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="37"><highlight class="comment">///<sp/><sp/>\date<sp/>2021<sp/>Sep</highlight></codeline>
<codeline lineno="38"><highlight class="comment">///</highlight></codeline>
<codeline lineno="39"><highlight class="comment">///<sp/><sp/>\author<sp/>Patrick<sp/>Stoecker</highlight></codeline>
<codeline lineno="40"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stoecker@physik.rwth-aachen.de)</highlight></codeline>
<codeline lineno="41"><highlight class="comment">///<sp/><sp/>\date<sp/>2023<sp/>Nov</highlight></codeline>
<codeline lineno="42"><highlight class="comment">///</highlight></codeline>
<codeline lineno="43"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__functor_definitions_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__functor_definitions_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="functors_8hpp" kindref="compound">gambit/Elements/functors.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="standalone__error__handlers_8hpp" kindref="compound">gambit/Utils/standalone_error_handlers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="models_8hpp" kindref="compound">gambit/Models/models.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">gambit/Logs/logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PRINTERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="baseprinter_8hpp" kindref="compound">gambit/Printers/baseprinter.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/seq/for_each.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/io/ios_state.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">LogTags;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Class<sp/>methods<sp/>for<sp/>actual<sp/>module<sp/>functors<sp/>for<sp/>TYPE<sp/>!=<sp/>void</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="68" refid="classGambit_1_1module__functor_1a2b6d5d20d90906aa4b2ccf9b6e820f89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1module__functor_1a2b6d5d20d90906aa4b2ccf9b6e820f89" kindref="member">module_functor&lt;TYPE&gt;::module_functor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*inputFunction)(TYPE<sp/>&amp;),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_name,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_capability,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>result_type,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_name,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref><sp/>&amp;claw)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGambit_1_1module__functor__common" kindref="compound">module_functor_common</ref>(func_name,<sp/>func_capability,<sp/>result_type,<sp/>origin_name,<sp/>claw),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myFunction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(inputFunction),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myValue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myPrintFlag<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(false)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Destructor</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="82" refid="classGambit_1_1module__functor_1a302a7e36f414924e2fea0bc38deeba83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1module__functor_1a302a7e36f414924e2fea0bc38deeba83" kindref="member">module_functor&lt;TYPE&gt;::~module_functor</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myValue<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>myValue;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Setter<sp/>for<sp/>indicating<sp/>if<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>result<sp/>should<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="89" refid="classGambit_1_1module__functor_1ab1a3b51ffb937f26f9d109811410fb62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1ab1a3b51ffb937f26f9d109811410fb62" kindref="member">module_functor&lt;TYPE&gt;::setPrintRequirement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)<sp/>{<sp/>myPrintFlag<sp/>=<sp/>flag;}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>indicating<sp/>if<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>result<sp/>should<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="93" refid="classGambit_1_1module__functor_1ad4f4ce209987e753b78e5d47fafe5d11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1ad4f4ce209987e753b78e5d47fafe5d11" kindref="member">module_functor&lt;TYPE&gt;::requiresPrinting</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myPrintFlag;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Calculate<sp/>method</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>(no<sp/>loop-manager<sp/>stuff<sp/>here<sp/>because<sp/>only<sp/>void<sp/>specialisation<sp/>can<sp/>manage<sp/>loops)</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="98" refid="classGambit_1_1module__functor_1a8b95bea55acc882c4ec06636016e4429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1a8b95bea55acc882c4ec06636016e4429" kindref="member">module_functor&lt;TYPE&gt;::calculate</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myStatus<sp/>==<sp/>FunctorStatus::Classes_missing)<sp/></highlight><highlight class="comment">//<sp/>Do<sp/>an<sp/>explicit<sp/>status<sp/>check<sp/>to<sp/>hold<sp/>standalone<sp/>writers&apos;<sp/>hands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sorry,<sp/>the<sp/>function<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>origin()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cannot<sp/>be<sp/>used&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;because<sp/>it<sp/>requires<sp/>classes<sp/>from<sp/>a<sp/>backend<sp/>that<sp/>you<sp/>do<sp/>not<sp/>have<sp/>installed.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>backends:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>missing_backends.begin();<sp/>it<sp/>!=<sp/>missing_backends.end();<sp/>++it)<sp/>ss<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*it;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a22f9590f97f034945dfabd86a0345ec9" kindref="member">backend_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/>ss.str());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::io::ios_flags_saver<sp/>ifs(cout);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>allow<sp/>module<sp/>functions<sp/>to<sp/>change<sp/>the<sp/>output<sp/>precision<sp/>of<sp/>cout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_num<sp/>=<sp/>omp_get_thread_num();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init_memory();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>memory<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>run<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needs_recalculating[thread_num])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>actual<sp/>calculation<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().<ref refid="classGambit_1_1Logging_1_1LogMaster_1a719aff569b1e2a72069b5d575b4c6855" kindref="member">entering_module</ref>(myLogTag);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startTiming(thread_num);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Begin<sp/>timing<sp/>function<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;myFunction(myValue[thread_num]);<sp/><sp/><sp/></highlight><highlight class="comment">//Run<sp/>and<sp/>place<sp/>result<sp/>in<sp/>the<sp/>appropriate<sp/>slot<sp/>in<sp/>myValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classGambit_1_1invalid__point__exception" kindref="compound">invalid_point_exception</ref>&amp;<sp/>e)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>point_exception_raised)<sp/>acknowledgeInvalidation(e);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(omp_get_level()==0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>in<sp/>an<sp/>OpenMP<sp/>parallel<sp/>block,<sp/>throw<sp/>onwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;finishTiming(thread_num);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Stop<sp/>timing<sp/>function<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;finishTiming(thread_num);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Stop<sp/>timing<sp/>function<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().leaving_module();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Initialise<sp/>the<sp/>memory<sp/>of<sp/>this<sp/>functor.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="136" refid="classGambit_1_1module__functor_1a5132c201b17e8935e0810f66f2ecce80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1a5132c201b17e8935e0810f66f2ecce80" kindref="member">module_functor&lt;TYPE&gt;::init_memory</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classGambit_1_1module__functor__common_1a90d617ce75a8ade1c843c3bdaa20c231" kindref="member">module_functor_common::init_memory</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myValue==NULL)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>critical(module_functor_init_memory)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>enough<sp/>space<sp/>to<sp/>hold<sp/>as<sp/>many<sp/>results<sp/>as<sp/>there<sp/>are<sp/>slots<sp/>(threads)<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myValue==NULL)<sp/>myValue<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TYPE[(iRunNested<sp/>?<sp/>globlMaxThreads<sp/>:<sp/>1)];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(return<sp/>value)</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="151" refid="classGambit_1_1module__functor_1a768d06bf12431023fe0cebf862edc670" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE&amp;<sp/><ref refid="classGambit_1_1module__functor_1a768d06bf12431023fe0cebf862edc670" kindref="member">module_functor&lt;TYPE&gt;::operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init_memory();<sp/></highlight><highlight class="comment">//<sp/>Init<sp/>memory<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>run<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iRunNested<sp/>?<sp/>myValue[index]<sp/>:<sp/>myValue[0]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Alternative<sp/>to<sp/>operation<sp/>(returns<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>value)</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="159" refid="classGambit_1_1module__functor_1a30c323a1171f5415b9ffce90cf0e43bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;TYPE&gt;</ref><sp/><ref refid="classGambit_1_1module__functor_1a30c323a1171f5415b9ffce90cf0e43bd" kindref="member">module_functor&lt;TYPE&gt;::valuePtr</ref>()</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init_memory();<sp/></highlight><highlight class="comment">//<sp/>Init<sp/>memory<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>run<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;TYPE&gt;</ref>(myValue);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>NO_PRINTERS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Printer<sp/>function</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="168" refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" kindref="member">module_functor&lt;TYPE&gt;::print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*<sp/>printer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_num)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>try<sp/>to<sp/>print<sp/>if<sp/>print<sp/>flag<sp/>set<sp/>to<sp/>true,<sp/>and<sp/>if<sp/>this<sp/>functor(+thread)<sp/>hasn&apos;t<sp/>already<sp/>been<sp/>printed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>though<sp/>actually<sp/>the<sp/>printer<sp/>system<sp/>will<sp/>probably<sp/>cark<sp/>it<sp/>if<sp/>printing<sp/>from<sp/>multiple<sp/>threads<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attempted,<sp/>because<sp/>it<sp/>uses<sp/>the<sp/>VertexID<sp/>to<sp/>differentiate<sp/>print<sp/>streams,<sp/>and<sp/>this<sp/>is<sp/>shared<sp/>among<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>fix<sp/>by<sp/>requiring<sp/>a<sp/>VertexID+thread_num<sp/>pair,<sp/>but<sp/>I<sp/>am<sp/>leaving<sp/>this<sp/>for<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_memory();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>memory<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>run<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myPrintFlag<sp/>and<sp/>not<sp/>already_printed[thread_num]<sp/>and<sp/>type()!=</highlight><highlight class="stringliteral">&quot;void&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>myPrintFlag<sp/>should<sp/>anyway<sp/>not<sp/>be<sp/>true<sp/>for<sp/>void<sp/>result<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>iRunNested)<sp/>thread_num<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>printing<sp/>of<sp/>thread_num=0<sp/>if<sp/>this<sp/>functor<sp/>cannot<sp/>run<sp/>nested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>printer-&gt;<ref refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a8f7e69489c1a83b4208c3ca0237bf823" kindref="member">getRank</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>&quot;first<sp/>pass&quot;<sp/>printing,<sp/>so<sp/>use<sp/>the<sp/>actual<sp/>rank<sp/>of<sp/>this<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>auxilliary<sp/>printing<sp/>system<sp/>we<sp/>may<sp/>tell<sp/>the<sp/>printer<sp/>to<sp/>overwrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>output<sp/>of<sp/>other<sp/>ranks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>()<sp/>&lt;&lt;<sp/>LogTags::debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Printing<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;myLabel&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>(vID=&quot;</highlight><highlight class="normal">&lt;&lt;myVertexID&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>rank=&quot;</highlight><highlight class="normal">&lt;&lt;rank&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>pID=&quot;</highlight><highlight class="normal">&lt;&lt;pointID&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>type=&quot;</highlight><highlight class="normal">&lt;&lt;myType&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer-&gt;print(myValue[thread_num],myLabel,myVertexID,rank,pointID);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already_printed[thread_num]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>timing<sp/>info<sp/>if<sp/>requested<sp/>(independent<sp/>of<sp/>whether<sp/>printing<sp/>actual<sp/>result)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myTimingPrintFlag<sp/>and<sp/>not<sp/>already_printed_timing[thread_num])</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>iRunNested)<sp/>thread_num<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>printing<sp/>of<sp/>thread_num=0<sp/>if<sp/>this<sp/>functor<sp/>cannot<sp/>run<sp/>nested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>printer-&gt;<ref refid="classGambit_1_1Printers_1_1BaseBasePrinter_1a8f7e69489c1a83b4208c3ca0237bf823" kindref="member">getRank</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>runtime<sp/>=<sp/>end[thread_num]<sp/>-<sp/>start[thread_num];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>()<sp/>&lt;&lt;<sp/>LogTags::debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Printing<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;myTimingLabel&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>(vID=&quot;</highlight><highlight class="normal">&lt;&lt;myTimingVertexID&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>rank=&quot;</highlight><highlight class="normal">&lt;&lt;rank&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>pID=&quot;</highlight><highlight class="normal">&lt;&lt;pointID&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer-&gt;print(runtime.count(),myTimingLabel,myTimingVertexID,rank,pointID);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already_printed_timing[thread_num]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Printer<sp/>function<sp/>(no-thread-index<sp/>short-circuit)</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="200" refid="classGambit_1_1module__functor_1a3be3261712c311f7a9bd0be812d64a56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1module__functor_1aa51b6fc974adb298ff6b2feeab91e1f8" kindref="member">module_functor&lt;TYPE&gt;::print</ref>(<ref refid="classGambit_1_1Printers_1_1BasePrinter" kindref="compound">Printers::BasePrinter</ref>*<sp/>printer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointID)<sp/>{<sp/>print(printer,pointID,0);<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backend_functor_common<sp/>class<sp/>method<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="207" refid="classGambit_1_1backend__functor__common_1a6c65848898364bfb7891743e453a49ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1a6c65848898364bfb7891743e453a49ac" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::backend_functor_common</ref><sp/>(<ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref><sp/>inputFunction,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_name,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_capability,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>result_type,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_name,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_version,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_safe_version,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>citation_key,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref><sp/>&amp;claw)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGambit_1_1functor" kindref="compound">functor</ref><sp/>(func_name,<sp/>func_capability,<sp/>result_type,<sp/>origin_name,<sp/>claw),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myFunction<sp/>(inputFunction),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myLogTag(-1),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inUse(false)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1abb4eae828a1503e4f21be3090117cb44" kindref="member">myVersion</ref><sp/>=<sp/>origin_version;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1a205268bb599cd3fd2328d6a222160993" kindref="member">mySafeVersion</ref><sp/>=<sp/>origin_safe_version;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1functor_1af7284750b2816b9c1601a5e4637a503c" kindref="member">myCitationKey</ref><sp/>=<sp/>citation_key;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>LogTag<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor__common_1a9dd4f156fb57f61f1da6002292a35d1d" kindref="member">myLogTag</ref><sp/>=<sp/>Logging::str2tag(<ref refid="classGambit_1_1functor_1a0a323ed83c7025b6d789e7fac64addc7" kindref="member">myOrigin</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Or<sp/>in<sp/>the<sp/>case<sp/>where<sp/>we<sp/>prefer<sp/>to<sp/>include<sp/>the<sp/>version<sp/>number<sp/>in<sp/>the<sp/>LogTag<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//myLogTag<sp/>=<sp/>Logging::str2tag(myOrigin+&quot;v&quot;+myVersion);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classGambit_1_1backend__functor__common_1a9dd4f156fb57f61f1da6002292a35d1d" kindref="member">myLogTag</ref>==-1)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>retrieving<sp/>LogTag<sp/>number<sp/>(in<sp/>functors.hpp,<sp/>constructor<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;backend_functor_common)!<sp/>No<sp/>match<sp/>for<sp/>backend<sp/>name<sp/>in<sp/>tag2str<sp/>map!<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>a<sp/>backend<sp/>functor,<sp/>so<sp/>this<sp/>is<sp/>a<sp/>fatal<sp/>error.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(myOrigin=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classGambit_1_1functor_1a0a323ed83c7025b6d789e7fac64addc7" kindref="member">myOrigin</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>myName=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classGambit_1_1functor_1ad9345bebb312d0352f8576d57b326759" kindref="member">myName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ab8f36a16d614ad49a62f810ef8ce8c84" kindref="member">utils_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,ss.str());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Update<sp/>the<sp/>internal<sp/>function<sp/>pointer<sp/>wrapped<sp/>by<sp/>the<sp/>functor</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="243" refid="classGambit_1_1backend__functor__common_1a1b7376bd99a159aebd4e6473f22d966d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1a1b7376bd99a159aebd4e6473f22d966d" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::updatePointer</ref>(<ref refid="classGambit_1_1backend__functor__common_1a52178f0fbb305166abc62807f2ec31fe" kindref="member">funcPtrType</ref><sp/>inputFunction)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myFunction<sp/>=<sp/>inputFunction;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Hand<sp/>out<sp/>the<sp/>internal<sp/>function<sp/>pointer<sp/>wrapped<sp/>by<sp/>the<sp/>functor</highlight></codeline>
<codeline lineno="249"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="250" refid="classGambit_1_1backend__functor__common_1a6aa6c5c3b9f4d5dabf6c647848a4e9b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;PTR_TYPE,<sp/>TYPE,<sp/>ARGS...&gt;::funcPtrType<sp/><ref refid="classGambit_1_1backend__functor__common_1a6aa6c5c3b9f4d5dabf6c647848a4e9b5" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::handoutFunctionPointer</ref>()</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myFunction;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>version<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>backend.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="257" refid="classGambit_1_1backend__functor__common_1a37ab7d16a3437db0e91b3c4806c73852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a37ab7d16a3437db0e91b3c4806c73852" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::version</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myVersion;<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Getter<sp/>for<sp/>the<sp/>&apos;safe&apos;<sp/>incarnation<sp/>of<sp/>the<sp/>version<sp/>of<sp/>the<sp/>wrapped<sp/>function&apos;s<sp/>backend.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="261" refid="classGambit_1_1backend__functor__common_1af9bcd2e979961e755476c41b611ddc40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1af9bcd2e979961e755476c41b611ddc40" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::safe_version</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mySafeVersion;<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>the<sp/>inUse<sp/>flag.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="265" refid="classGambit_1_1backend__functor__common_1a89d7ab912fc7b66ca49726eb7b412a00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor__common_1a89d7ab912fc7b66ca49726eb7b412a00" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::setInUse</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)<sp/>{<sp/>inUse<sp/>=<sp/>flag;<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Hand<sp/>out<sp/>a<sp/>safe<sp/>pointer<sp/>to<sp/>this<sp/>backend<sp/>functor&apos;s<sp/>inUse<sp/>flag.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PTR_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="269" refid="classGambit_1_1backend__functor__common_1a4b8bbe62177404dc63d8fb640ddd4ec8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;bool&gt;</ref><sp/><ref refid="classGambit_1_1backend__functor__common_1a4b8bbe62177404dc63d8fb640ddd4ec8" kindref="member">backend_functor_common&lt;PTR_TYPE, TYPE, ARGS...&gt;::inUsePtr</ref>()</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1safe__ptr" kindref="compound">safe_ptr&lt;bool&gt;</ref>(&amp;inUse);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>non-variadic<sp/>backend<sp/>functor<sp/>class<sp/>method<sp/>definitions<sp/>for<sp/>TYPE<sp/>!=<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="279" refid="classGambit_1_1backend__functor_3_01TYPE_07_5_08_07ARGS_8_8_8_08_00_01TYPE_00_01ARGS_8_8_8_01_4_1ae7c53a5d54a9dcec5d05a4882cc56145" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;TYPE(*)(ARGS...),<sp/>TYPE,<sp/>ARGS...&gt;::backend_functor<sp/>(TYPE<sp/>(*inputFunction)(ARGS...),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_name,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_capability,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>result_type,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_name,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_version,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>safe_version,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>citation_key,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref><sp/>&amp;claw)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;TYPE(*)(ARGS...),<sp/>TYPE,<sp/>ARGS...&gt;(inputFunction,<sp/>func_name,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func_capability,<sp/>result_type,<sp/>origin_name,<sp/>origin_version,<sp/>safe_version,<sp/>citation_key,<sp/>claw)<sp/>{}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(execute<sp/>function<sp/>and<sp/>return<sp/>value)</highlight></codeline>
<codeline lineno="292"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="293" refid="classGambit_1_1backend__functor_3_01TYPE_07_5_08_07ARGS_8_8_8_08_00_01TYPE_00_01ARGS_8_8_8_01_4_1a96d3075e8ef106d51e48c093149a5203" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE<sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;TYPE(*)(ARGS...),<sp/>TYPE,<sp/>ARGS...&gt;::operator()(ARGS&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().entering_backend(this-&gt;myLogTag);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>tmp<sp/>=<sp/>this-&gt;myFunction(std::forward&lt;ARGS&gt;(args)...);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().leaving_backend();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>non-variadic<sp/>backend<sp/>functor<sp/>class<sp/>method<sp/>definitions<sp/>for<sp/>TYPE=void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="305"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="306" refid="classGambit_1_1backend__functor_3_01void_07_5_08_07ARGS_8_8_8_08_00_01void_00_01ARGS_8_8_8_01_4_1a10b43a21a3edaa1da56dfd002ef5983b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;void(*)(ARGS...),<sp/>void,<sp/>ARGS...&gt;::backend_functor<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*inputFunction)(ARGS...),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_name,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_capability,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>result_type,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_name,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_version,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>safe_version,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>citation_key,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref><sp/>&amp;claw)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;void(*)(ARGS...),<sp/>void,<sp/>ARGS...&gt;(inputFunction,<sp/>func_name,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func_capability,<sp/>result_type,<sp/>origin_name,<sp/>origin_version,<sp/>safe_version,<sp/>citation_key,<sp/>claw)<sp/>{}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Operation<sp/>(execute<sp/>function<sp/>and<sp/>return<sp/>value)</highlight></codeline>
<codeline lineno="319"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="320" refid="classGambit_1_1backend__functor_3_01void_07_5_08_07ARGS_8_8_8_08_00_01void_00_01ARGS_8_8_8_01_4_1a9a72f7d781cc04c3ba9fb35f1726f8e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;void(*)(ARGS...),<sp/>void,<sp/>ARGS...&gt;::operator()(ARGS&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().entering_backend(this-&gt;myLogTag);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;myFunction(std::forward&lt;ARGS&gt;(args)...);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1adc186dd8542984ac7c777296f545f7f5" kindref="member">logger</ref>().leaving_backend();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>variadic<sp/>backend<sp/>functor<sp/>class<sp/>method<sp/>definitions<sp/>for<sp/>TYPE<sp/>!=<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="330"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1backend__functor" kindref="compound">backend_functor</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr</ref>&lt;TYPE,ARGS...&gt;::type,<sp/>TYPE,<sp/>ARGS...&gt;::backend_functor</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr&lt;TYPE,ARGS...&gt;::type</ref><sp/>inputFunction,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_name,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_capability,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>result_type,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_name,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_version,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>safe_version,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>citation_key,<sp/><ref refid="classGambit_1_1Models_1_1ModelFunctorClaw" kindref="compound">Models::ModelFunctorClaw</ref><sp/>&amp;claw)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGambit_1_1backend__functor__common" kindref="compound">backend_functor_common</ref>&lt;typename<sp/><ref refid="structGambit_1_1variadic__ptr" kindref="compound">variadic_ptr</ref>&lt;TYPE,ARGS...&gt;::type,<sp/>TYPE,<sp/>ARGS...&gt;(inputFunction,<sp/>func_name,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func_capability,<sp/>result_type,<sp/>origin_name,<sp/>origin_version,<sp/>safe_version,<sp/>citation_key,<sp/>claw)<sp/>{}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>variadic<sp/>backend<sp/>functor<sp/>class<sp/>method<sp/>definitions<sp/>for<sp/>TYPE=void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Constructor</highlight></codeline>
<codeline lineno="340"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>backend_functor&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>variadic_ptr&lt;void,ARGS...&gt;::type,<sp/>void,<sp/>ARGS...&gt;::backend_functor</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>variadic_ptr&lt;void,ARGS...&gt;::type<sp/>inputFunction,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_name,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>func_capability,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>result_type,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_name,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>origin_version,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>safe_version,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>citation_key,<sp/>Models::ModelFunctorClaw<sp/>&amp;claw)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>backend_functor_common&lt;typename<sp/>variadic_ptr&lt;void,ARGS...&gt;::type,<sp/>void,<sp/>ARGS...&gt;(inputFunction,<sp/>func_name,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func_capability,<sp/>result_type,<sp/>origin_name,<sp/>origin_version,<sp/>safe_version,<sp/>citation_key,<sp/>claw)<sp/>{}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__functor_definitions_hpp__)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Elements/include/gambit/Elements/functor_definitions.hpp"/>
  </compounddef>
</doxygen>
