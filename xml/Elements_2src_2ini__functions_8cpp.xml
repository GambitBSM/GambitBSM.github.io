<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Elements_2src_2ini__functions_8cpp" kind="file" language="C++">
    <compoundname>Elements/src/ini_functions.cpp</compoundname>
    <includes refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp" local="yes">gambit/Elements/ini_functions.hpp</includes>
    <includes refid="ini__catch_8hpp" local="yes">gambit/Elements/ini_catch.hpp</includes>
    <includes refid="functors_8hpp" local="yes">gambit/Elements/functors.hpp</includes>
    <includes refid="equivalency__singleton_8hpp" local="yes">gambit/Elements/equivalency_singleton.hpp</includes>
    <includes refid="backend__singleton_8hpp" local="yes">gambit/Backends/backend_singleton.hpp</includes>
    <includes refid="claw__singleton_8hpp" local="yes">gambit/Models/claw_singleton.hpp</includes>
    <includes refid="logging_8hpp" local="yes">gambit/Logs/logging.hpp</includes>
    <incdepgraph>
      <node id="71">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gambit/Elements/equivalency_singleton.hpp</label>
        <link refid="equivalency__singleton_8hpp"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>gambit/Elements/functors.hpp</label>
        <link refid="functors_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Elements/ini_functions.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gambit/Elements/type_equivalency.hpp</label>
        <link refid="type__equivalency_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ini_functions.cpp</label>
        <link refid="Elements_2src_2ini__functions_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="64">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>gambit/Logs/logging.hpp</label>
        <link refid="logging_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/Models/claw_singleton.hpp</label>
        <link refid="claw__singleton_8hpp"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Models/models.hpp</label>
        <link refid="models_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="32">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="75">
        <label>gambit/Utils/file_lock.hpp</label>
        <link refid="file__lock_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="52">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>algorithm</label>
      </node>
      <node id="47">
        <label>array</label>
      </node>
      <node id="56">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="55">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="23">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="18">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="19">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="17">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="25">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="26">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="16">
        <label>boost/version.hpp</label>
      </node>
      <node id="41">
        <label>cassert</label>
      </node>
      <node id="50">
        <label>chrono</label>
      </node>
      <node id="53">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>complex</label>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="46">
        <label>deque</label>
      </node>
      <node id="34">
        <label>exception</label>
      </node>
      <node id="45">
        <label>forward_list</label>
      </node>
      <node id="39">
        <label>fstream</label>
      </node>
      <node id="54">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="38">
        <label>iostream</label>
      </node>
      <node id="62">
        <label>limits</label>
      </node>
      <node id="44">
        <label>list</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="57">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="8">
        <label>omp.h</label>
      </node>
      <node id="66">
        <label>ostream</label>
      </node>
      <node id="33">
        <label>set</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="40">
        <label>type_traits</label>
      </node>
      <node id="14">
        <label>unistd.h</label>
      </node>
      <node id="42">
        <label>unordered_map</label>
      </node>
      <node id="43">
        <label>unordered_set</label>
      </node>
      <node id="35">
        <label>utility</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="60">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1slhahelp">Gambit::slhahelp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions for triggering initialisation code.</para>
<para><hruler/>
</para>
<sect1 id="Elements_2src_2ini__functions_8cpp_1autotoc_md41">
<title>Authors</title>
<para>(add name and date if you modify)</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Feb</para>
</simplesect>
<simplesect kind="author"><para>Peter Athron (<ulink url="mailto:peter.athron@coepp.org.au">peter.athron@coepp.org.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015</para>
</simplesect>
<simplesect kind="author"><para>Christoph Weniger (<ulink url="mailto:c.weniger@uva.nl">c.weniger@uva.nl</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Feb</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:t.e.gonzalo@fys.uio.no">t.e.gonzalo@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Sep</para>
</simplesect>
<hruler/>
 </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Functions<sp/>for<sp/>triggering<sp/>initialisation<sp/>code.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>=======</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Feb</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Peter<sp/>Athron</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(peter.athron@coepp.org.au)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\date<sp/>2015</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\author<sp/>Christoph<sp/>Weniger</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c.weniger@uva.nl)</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Feb</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomas<sp/>Gonzalo</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t.e.gonzalo@fys.uio.no)</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>\date<sp/>2016<sp/>Sep</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///</highlight></codeline>
<codeline lineno="30"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp" kindref="compound">gambit/Elements/ini_functions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ini__catch_8hpp" kindref="compound">gambit/Elements/ini_catch.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="functors_8hpp" kindref="compound">gambit/Elements/functors.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="equivalency__singleton_8hpp" kindref="compound">gambit/Elements/equivalency_singleton.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="backend__singleton_8hpp" kindref="compound">gambit/Backends/backend_singleton.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="claw__singleton_8hpp" kindref="compound">gambit/Models/claw_singleton.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8hpp" kindref="compound">gambit/Logs/logging.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>///<sp/>Helper<sp/>function<sp/>for<sp/>adding<sp/>a<sp/>type<sp/>equivalency<sp/>at<sp/>initialisation</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a582df32493393e5c5a14f7d64131cbbf" kindref="member">add_equivrelation</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>s1,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>s2)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Utils::typeEquivalencies().add(s1,s2);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>///<sp/>Helper<sp/>function<sp/>for<sp/>passing<sp/>default<sp/>backend<sp/>information<sp/>at<sp/>initialisation</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2b32cf7ddc654f2d4a8cfe250ccb74f6" kindref="member">pass_default_to_backendinfo</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>be,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>def)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Backends::backendInfo().default_safe_versions[be]<sp/>=<sp/>def;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>///<sp/>Runtime<sp/>addition<sp/>of<sp/>model<sp/>to<sp/>GAMBIT<sp/>model<sp/>database</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a2b4e1ea4c0602d28d8d87a1ef51d00bd" kindref="member">add_model</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>parent)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1Models_1a698b0d82296ea8426bef5995c5a40989" kindref="member">Models::ModelDB</ref>().<ref refid="classGambit_1_1Models_1_1ModelFunctorClaw_1a71125c5db2fc189bd2522680cd7c9418" kindref="member">declare_model</ref>(model,<sp/>parent);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>///<sp/>Add<sp/>a<sp/>new<sp/>parameter<sp/>to<sp/>a<sp/>primary<sp/>model<sp/>functor</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aad155d8146087ec0f7b176b1b961cf0d" kindref="member">add_parameter</ref>(model_functor&amp;<sp/>primary_parameters,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>param)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>primary_parameters.addParameter(param);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/>///<sp/>Set<sp/>model<sp/>name<sp/>string<sp/>in<sp/>a<sp/>primary<sp/>model<sp/>functor</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ad081b37eac94f086abb8e2fa818f1394" kindref="member">set_model_name</ref>(model_functor&amp;<sp/>primary_parameters,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model_name)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>primary_parameters.setModelName(model_name);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/>///<sp/>Tell<sp/>a<sp/>model<sp/>functor<sp/>to<sp/>take<sp/>its<sp/>parameter<sp/>definition<sp/>from<sp/>another<sp/>model<sp/>functor.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a7ad47ef01ccf52dec72fcef1cc03ef34" kindref="member">copy_parameters</ref>(model_functor&amp;<sp/>donor,<sp/>model_functor&amp;<sp/>donee,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_friend,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>model_x)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>donor.donateParameters(donee);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(add_friend)<sp/><ref refid="namespaceGambit_1_1Models_1a698b0d82296ea8426bef5995c5a40989" kindref="member">Models::ModelDB</ref>().<ref refid="classGambit_1_1Models_1_1ModelFunctorClaw_1ab2d501255fc89da00a24d9818b9ede38" kindref="member">add_friend</ref>(model,<sp/>model_x);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>///<sp/>Create<sp/>a<sp/>log<sp/>tag<sp/>for<sp/>a<sp/>new<sp/>module.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a1191fc24dcb64db06bb338f872c86f69" kindref="member">register_module_with_log</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>module)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mytag;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mytag<sp/>=<sp/>Logging::getfreetag();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logging::tag2str()[mytag]<sp/>=<sp/>module;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logging::components().insert(mytag);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mytag;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>function<sp/>with<sp/>a<sp/>module.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a13f769ff48058ee7907ceef8362e1cfb" kindref="member">register_function</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>can_manage,<sp/>safe_ptr&lt;bool&gt;*<sp/>done,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>safe_ptr&lt;Options&gt;&amp;<sp/>opts,<sp/>safe_ptr&lt;std::set&lt;sspair&gt;&gt;&amp;<sp/>dependees,<sp/>safe_ptr&lt;Options&gt;&amp;<sp/>subcaps)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(can_manage)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.setCanBeLoopManager(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*done<sp/>=<sp/>f.loopIsDone();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opts<sp/>=<sp/>f.getOptions();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dependees<sp/>=<sp/>f.getDependees();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subcaps<sp/>=<sp/>f.getSubCaps();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>the<sp/>fact<sp/>that<sp/>a<sp/>module<sp/>function<sp/>needs<sp/>to<sp/>run<sp/>nested</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ac0af463f99cf94f7031edf01c00567f4" kindref="member">register_function_nesting</ref>(module_functor_common&amp;<sp/>f,<sp/>omp_safe_ptr&lt;long<sp/>long&gt;&amp;<sp/>iteration,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>loopmanager_capability,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>loopmanager_type)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setLoopManagerCapType(loopmanager_capability,<sp/>loopmanager_type);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iteration<sp/>=<sp/>f.iterationPtr();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>that<sp/>a<sp/>module<sp/>function<sp/>is<sp/>compatible<sp/>with<sp/>a<sp/>single<sp/>model</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1afe79d6f5ae97aafc17cdeb7c7123ba10" kindref="member">register_model_singly</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>model)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setAllowedModel(model);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>backend<sp/>requirement<sp/>for<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1adb92c5bae3f37d5ef41330000b0aac89" kindref="member">register_backend_requirement</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>group,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>tags,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_variable,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>req_type1,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>req_type2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*resolver)(functor*))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>signature<sp/>=<sp/>req_type1<sp/>+<sp/>(is_variable<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>:<sp/>req_type2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setBackendReq(group,<sp/>req,<sp/>tags,<sp/>signature,<sp/>resolver);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a68c91a85d23d8614a46f658e4f506c10" kindref="member">register_dependency</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep_type,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*resolver)(functor*,<sp/>module_functor_common*))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setDependency(dep,<sp/>dep_type,<sp/>resolver);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>conditional<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ad10912f63f7aaf426d82da8f399b9482" kindref="member">register_conditional_dependency</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep_type)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setConditionalDependency(dep,<sp/>dep_type);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model<sp/>parameters<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a4d7f20c689e7cc9e23761bcb2c582199" kindref="member">register_model_parameter_dependency</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>model,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*resolver)(functor*,<sp/>module_functor_common*))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="namespaceGambit_1ad10912f63f7aaf426d82da8f399b9482" kindref="member">register_conditional_dependency</ref>(f,<sp/>dep,<sp/></highlight><highlight class="stringliteral">&quot;ModelParameters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>+<sp/><ref refid="namespaceGambit_1a8ad07692725311cd166ad5ca485e0202" kindref="member">register_model_conditional_dependency</ref>(f,<sp/>model,<sp/>dep,<sp/>resolver);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model-conditional<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a8ad07692725311cd166ad5ca485e0202" kindref="member">register_model_conditional_dependency</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>model,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*resolver)(functor*,<sp/>module_functor_common*))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setModelConditionalDependency(model,<sp/>dep,<sp/>resolver);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>backend-conditional<sp/>dependency<sp/>of<sp/>a<sp/>module<sp/>function</highlight></codeline>
<codeline lineno="225"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a74484fe5684440c139a6cecf165dd23c" kindref="member">register_backend_conditional_dependency</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>be,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>versions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>dep,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*resolver)(functor*,<sp/>module_functor_common*))</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setBackendConditionalDependency(req,<sp/>be,<sp/>versions,<sp/>dep,<sp/>resolver);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>model<sp/>group<sp/>with<sp/>a<sp/>functor</highlight></codeline>
<codeline lineno="237"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a7b28bc19fdc1b365e38057b551e31ba1" kindref="member">register_model_group</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>group_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>group)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setModelGroup(group_name,group);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/>///<sp/>Register<sp/>a<sp/>combination<sp/>of<sp/>models<sp/>as<sp/>allowed<sp/>with<sp/>a<sp/>functor</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ab7746d989ab7116134034cf4734b15d1" kindref="member">register_model_combination</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>combo)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setAllowedModelGroupCombo(combo);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/>///<sp/>Apply<sp/>a<sp/>backend-matching<sp/>rule</highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ac7e076479f2c71cd91b638340449fcca" kindref="member">apply_backend_matching_rule</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>rule)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.makeBackendMatchingRule(rule);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/>///<sp/>Apply<sp/>a<sp/>backend<sp/>option<sp/>rule</highlight></codeline>
<codeline lineno="270"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1a17c3ce0893730ccc8c28454b03cc458f" kindref="member">apply_backend_option_rule</ref>(module_functor_common&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>be_and_ver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>tags)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.makeBackendOptionRule(be_and_ver,<sp/>tags);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><ref refid="namespaceGambit_1a4ae203c31e880f8dc24caba978956555" kindref="member">ini_catch</ref>(e);<sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">slhahelp</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>gauge<sp/>eigenstate<sp/>strings<sp/>to<sp/>string,<sp/>index<sp/>pairs</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>p_int_string&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a907d4a521e709ad333b40354e0337de4" kindref="member">init_gauge_label_to_index_type</ref>()</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>p_int_string&gt;<sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~tau_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(4,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(5,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~tau_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>std::make_pair(6,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~b_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(4,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(5,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~b_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(6,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~t_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(4,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(5,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~t_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_pair(6,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~nu_e_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~nu_mu_L&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>[</highlight><highlight class="stringliteral">&quot;~nu_tau_L&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mssm__slhahelp_8cpp_1a86ab3dbb17ba1708557160c92cb4b0c4" kindref="member">gauge_label_to_index_type</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>mass<sp/>eigenstate<sp/>strings<sp/>to<sp/>string,<sp/>index<sp/>pairs</highlight></codeline>
<codeline lineno="318"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>p_int_string&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a6f201d86d2f579a3756c0251dfce422d" kindref="member">init_mass_label_to_index_type</ref>()</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>p_int_string&gt;<sp/>mass_label_to_index_type;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~e-_3&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~e-_4&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(4,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~e-_5&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(5,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~e-_6&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(6,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~d_3&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~d_4&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(4,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~d_5&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(5,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~d_6&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(6,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~u_3&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~u_4&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(4,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~u_5&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(5,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~u_6&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>std::make_pair(6,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~nu_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~nu_2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_label_to_index_type[</highlight><highlight class="stringliteral">&quot;~nu_3&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>mass_label_to_index_type;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>to<sp/>extract<sp/>info<sp/>from<sp/>family<sp/>state</highlight></codeline>
<codeline lineno="350"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>pair_string_ints&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a71a7b97d68dfcc495002f75abade80d0" kindref="member">init_familystate_label</ref>()</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>pair_string_ints&gt;<sp/>familystate_label;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pairs<sp/>labeling<sp/>family,<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>three_one(3,1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>three_two(3,2);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>two_one(3,1);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>two_two(3,2);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>one_one(3,1);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>one_two(3,2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//triplet<sp/>labelling<sp/>type,<sp/>generation<sp/>and<sp/>mass<sp/>order<sp/>of<sp/>family<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stop1(</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">,three_one);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stop2(</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">,three_two);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sbot1(</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">,three_one);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sbot2(</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">,three_two);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stau1(</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">,three_one);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stau2(</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">,three_two);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scharm1(</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">,two_one);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scharm2(</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">,two_two);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sstrange1(</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">,two_one);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sstrange2(</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">,two_two);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>smuon1(</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">,two_one);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>smuon2(</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">,two_two);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sup1(</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">,one_one);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sup2(</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">,one_two);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sdown1(</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">,one_one);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sdown2(</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">,one_two);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>selectron1(</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">,one_one);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>selectron2(</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">,one_two);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>have<sp/>left<sp/>handed<sp/>sneutrinos<sp/>in<sp/>MSSM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snue1(</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">,three_one);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snumu1(</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">,two_one);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_string_ints<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snutau1(</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">,one_one);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~t_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/><sp/>stop1;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~t_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>stop2;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~b_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sbot1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~b_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sbot2;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>stau1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>stau2;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~c_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>scharm1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~c_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>scharm2;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~s_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sstrange1;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~s_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sstrange2;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~muon_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>smuon1;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~muon_2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>smuon2;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>maybe<sp/>we<sp/>shouldn&apos;t<sp/>do<sp/>first<sp/>gen<sp/>it&apos;s<sp/>confusing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sup1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sup2;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sdown1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>sdown2;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>selectron1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>selectron2;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>even<sp/>less<sp/>needed<sp/>since<sp/>no<sp/>l-r<sp/>mixing<sp/>without<sp/>r<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~nu_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>snue1;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~nu_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>snumu1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>familystate_label[</highlight><highlight class="stringliteral">&quot;~nu_3&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>snutau1;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>familystate_label;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/>///map<sp/>to<sp/>obtain<sp/>left_right<sp/>gauge_pairs<sp/>from<sp/>state<sp/>info</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>helps<sp/>us<sp/>reuse<sp/>other<sp/>routiones<sp/>with<sp/>string<sp/>arguments</highlight></codeline>
<codeline lineno="420"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;p_int_string,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/><sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1af39f4cde76f9b808205a113350168fe2" kindref="member">init_type_family_to_gauge_states</ref>()</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;p_int_string,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/>type_family_to_gauge_states;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~t_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~t_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~b_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~b_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(3,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">)]=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~tau_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~tau_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(2,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">)]=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_family_to_gauge_states[std::make_pair(1,</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">)]=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>sneutrino<sp/>gauges<sp/>pairs<sp/>as<sp/>no<sp/>right<sp/>sneutrino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_family_to_gauge_states;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>maps<sp/>directly<sp/>from<sp/>family<sp/>string<sp/>to<sp/>left_right<sp/>gauge_pairs</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>helps<sp/>us<sp/>reuse<sp/>other<sp/>routines<sp/>that<sp/>take<sp/>string<sp/>arguments</highlight></codeline>
<codeline lineno="440"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a2a92030a1d0d2096b79b2a578b03c77f" kindref="member">init_family_state_to_gauge_state</ref>()</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/>family_state_to_gauge_state;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~t_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~t_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~t_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~t_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~t_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~t_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~b_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~b_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~b_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~b_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~b_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~b_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~tau_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~tau_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~tau_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~tau_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~c_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~c_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~s_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~s_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~muon_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~muon_2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family_state_to_gauge_state[</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>family_state_to_gauge_state;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/>///maps<sp/>directly<sp/>from<sp/>gauge_es<sp/>string<sp/>to<sp/>familystates</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>helps<sp/>us<sp/>reuse<sp/>other<sp/>routines<sp/>that<sp/>take<sp/>string<sp/>arguments</highlight></codeline>
<codeline lineno="470"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/><sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a97ee6ef1971e290a481a15bfe3c67834" kindref="member">init_gauge_es_to_family_states</ref>()</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,<sp/>std::vector&lt;str&gt;<sp/>&gt;<sp/><sp/>gauge_es_to_family_states;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~t_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~t_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~t_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~t_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~t_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~t_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~b_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~b_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~b_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~b_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~b_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~b_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~tau_L&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~tau_R&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~c_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~c_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~c_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~c_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~s_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~s_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~s_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~s_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~mu_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~mu_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~mu_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~mu_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gauge_es_to_family_states[</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gauge_es_to_family_states;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>string<sp/>representing<sp/>type<sp/>(ie<sp/>up-squarks,<sp/>down-squarks<sp/>or</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>charged<sp/>sleptons)<sp/>to<sp/>appropriate<sp/>set<sp/>of<sp/>mass<sp/>eigenstates</highlight></codeline>
<codeline lineno="499"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1aeba1b829b60d4d1bef9ea801b7ec92c7" kindref="member">init_type_to_vec_of_mass_es</ref>()</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/>type_to_vec_of_mass_es;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_mass_es[</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_mass_es[</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_mass_es[</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e-_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e-_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e-_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e-_4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e-_5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e-_6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_mass_es[</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~nu_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~nu_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~nu_3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_to_vec_of_mass_es;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>from<sp/>string<sp/>representing<sp/>type<sp/>(ie<sp/>up-squarks,<sp/>down-squarks<sp/>or</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>charged<sp/>sleptons)<sp/>to<sp/>appropriate<sp/>set<sp/>of<sp/>gauge<sp/>eigenstates</highlight></codeline>
<codeline lineno="513"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/><ref refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp_1a236436a2ec54995573da0cff78ee2f0e" kindref="member">init_type_to_vec_of_gauge_es</ref>()</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;str,std::vector&lt;str&gt;<sp/>&gt;<sp/>type_to_vec_of_gauge_es;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_gauge_es[</highlight><highlight class="stringliteral">&quot;~u&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~u_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~c_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~t_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~u_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~c_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~t_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_gauge_es[</highlight><highlight class="stringliteral">&quot;~d&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~d_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~s_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~b_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~d_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~s_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~b_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_gauge_es[</highlight><highlight class="stringliteral">&quot;~e-&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~tau_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~tau_R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_to_vec_of_gauge_es[</highlight><highlight class="stringliteral">&quot;~nu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initVector&lt;str&gt;(</highlight><highlight class="stringliteral">&quot;~nu_e_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~nu_mu_L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~nu_tau_L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_to_vec_of_gauge_es;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Elements/src/ini_functions.cpp"/>
  </compounddef>
</doxygen>
