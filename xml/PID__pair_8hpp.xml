<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="PID__pair_8hpp" kind="file" language="C++">
    <compoundname>PID_pair.hpp</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">string</includes>
    <includedby refid="ColliderBit__types_8hpp" local="yes">ColliderBit_types.hpp</includedby>
    <includedby refid="Prospino_8hpp" local="yes">Prospino.hpp</includedby>
    <includedby refid="xsec_8hpp" local="yes">xsec.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>PID_pair.hpp</label>
        <link refid="PID__pair_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29">
        <label>Prospino.hpp</label>
        <link refid="Prospino_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Prospino.cpp</label>
        <link refid="Prospino_8cpp"/>
      </node>
      <node id="8">
        <label>ColliderBit_eventloop.hpp</label>
        <link refid="ColliderBit__eventloop_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ColliderBit_rollcall.hpp</label>
        <link refid="ColliderBit__rollcall_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ColliderBit_types.hpp</label>
        <link refid="ColliderBit__types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>complete_process_PID_pair_multimaps.hpp</label>
        <link refid="complete__process__PID__pair__multimaps_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>generateEventPy8Collider.hpp</label>
        <link refid="generateEventPy8Collider_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>getPy8Collider.hpp</label>
        <link refid="getPy8Collider_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>xsec.hpp</label>
        <link refid="xsec_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ColliderBit_Higgs.cpp</label>
        <link refid="ColliderBit__Higgs_8cpp"/>
      </node>
      <node id="5">
        <label>ColliderBit_InterpolatedYields.cpp</label>
        <link refid="ColliderBit__InterpolatedYields_8cpp"/>
      </node>
      <node id="6">
        <label>ColliderBit_LEP.cpp</label>
        <link refid="ColliderBit__LEP_8cpp"/>
      </node>
      <node id="7">
        <label>ColliderBit_dummy.cpp</label>
        <link refid="ColliderBit__dummy_8cpp"/>
      </node>
      <node id="9">
        <label>ColliderBit_eventloop.cpp</label>
        <link refid="ColliderBit__eventloop_8cpp"/>
      </node>
      <node id="10">
        <label>ColliderBit_measurements.cpp</label>
        <link refid="ColliderBit__measurements_8cpp"/>
      </node>
      <node id="25">
        <label>LHC_likelihoods.cpp</label>
        <link refid="LHC__likelihoods_8cpp"/>
      </node>
      <node id="11">
        <label>collider_event_weights.cpp</label>
        <link refid="collider__event__weights_8cpp"/>
      </node>
      <node id="28">
        <label>complete_process_PID_pair_multimaps.cpp</label>
        <link refid="complete__process__PID__pair__multimaps_8cpp"/>
      </node>
      <node id="15">
        <label>getActiveProcessCodes.cpp</label>
        <link refid="getActiveProcessCodes_8cpp"/>
      </node>
      <node id="16">
        <label>getAnalysisContainer.cpp</label>
        <link refid="getAnalysisContainer_8cpp"/>
      </node>
      <node id="17">
        <label>getBuckFast.cpp</label>
        <link refid="getBuckFast_8cpp"/>
      </node>
      <node id="18">
        <label>getHepMCEvent.cpp</label>
        <link refid="getHepMCEvent_8cpp"/>
      </node>
      <node id="19">
        <label>getLHEvent.cpp</label>
        <link refid="getLHEvent_8cpp"/>
      </node>
      <node id="21">
        <label>getxsec.cpp</label>
        <link refid="getxsec_8cpp"/>
      </node>
      <node id="26">
        <label>lep_mssm_xsecs.cpp</label>
        <link refid="lep__mssm__xsecs_8cpp"/>
      </node>
      <node id="13">
        <label>SUSY.cpp</label>
        <link refid="SUSY_8cpp"/>
      </node>
      <node id="14">
        <label>SUSY_extras.cpp</label>
        <link refid="SUSY__extras_8cpp"/>
      </node>
      <node id="22">
        <label>process_code_PID_pair_mapping.cpp</label>
        <link refid="process__code__PID__pair__mapping_8cpp"/>
      </node>
      <node id="23">
        <label>runAnalyses.cpp</label>
        <link refid="runAnalyses_8cpp"/>
      </node>
      <node id="24">
        <label>smearEvent.cpp</label>
        <link refid="smearEvent_8cpp"/>
      </node>
      <node id="32">
        <label>xsec.cpp</label>
        <link refid="xsec_8cpp"/>
      </node>
      <node id="1">
        <label>PID_pair.hpp</label>
        <link refid="PID__pair_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classGambit_1_1PID__pair" prot="public">Gambit::PID_pair</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Simple class for holding a sorted pair of particle ID (PID) codes</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Anders Kvellestad (<ulink url="mailto:anders.kvellestad@fys.uio.no">anders.kvellestad@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 Sep </para>
</simplesect>
<simplesect kind="date"><para>2019 Nov</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Simple<sp/>class<sp/>for<sp/>holding<sp/>a<sp/>sorted<sp/>pair</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>of<sp/>particle<sp/>ID<sp/>(PID)<sp/>codes</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\author<sp/>Anders<sp/>Kvellestad</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(anders.kvellestad@fys.uio.no)</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>Sep</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>Nov</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>///<sp/>Simple<sp/>class<sp/>for<sp/>holding<sp/>a<sp/>sorted<sp/>pair<sp/>of<sp/>particle<sp/>ID<sp/>(PID)<sp/>codes.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>///<sp/>This<sp/>is<sp/>essentially<sp/>just<sp/>a<sp/>wrapper<sp/>around<sp/>a<sp/>std::pair&lt;int,int&gt;,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>///<sp/>with<sp/>forced<sp/>ordering<sp/>(first<sp/>element<sp/>&lt;=<sp/>second<sp/>element)<sp/>and<sp/>some<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>///<sp/>extra<sp/>bells<sp/>and<sp/>whistles.</highlight></codeline>
<codeline lineno="31" refid="classGambit_1_1PID__pair" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1PID__pair" kindref="compound">PID_pair</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;<sp/>iipair;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Constructors</highlight></codeline>
<codeline lineno="39" refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>()<sp/>:<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pids(iipair({0,<sp/>0}))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2_in)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>function<sp/>to<sp/>ensure<sp/>correct<sp/>sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair_1a73c34d37abde49c50929f0ec0527153f" kindref="member">set_pids</ref>(pid1_in,<sp/>pid2_in);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iipair&amp;<sp/>PIDs_in)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>function<sp/>to<sp/>ensure<sp/>correct<sp/>sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair_1a73c34d37abde49c50929f0ec0527153f" kindref="member">set_pids</ref>(PIDs_in);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Detstructor</highlight></codeline>
<codeline lineno="56" refid="classGambit_1_1PID__pair_1af70c6da31f21c944d37c140aeaa95e01" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1af70c6da31f21c944d37c140aeaa95e01" kindref="member">~PID_pair</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Set<sp/>PIDs,<sp/>with<sp/>sorting</highlight></codeline>
<codeline lineno="60" refid="classGambit_1_1PID__pair_1a73c34d37abde49c50929f0ec0527153f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1a73c34d37abde49c50929f0ec0527153f" kindref="member">set_pids</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2_in)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid1_in<sp/>&lt;=<sp/>pid2_in)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pids<sp/>=<sp/>iipair({pid1_in,<sp/>pid2_in});</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pids<sp/>=<sp/>iipair({pid2_in,<sp/>pid1_in});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1a73c34d37abde49c50929f0ec0527153f" kindref="member">set_pids</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1ad59d3bd695b3851e7d7adbca2aa294aa" kindref="member">iipair</ref>&amp;<sp/>PIDs_in)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair_1a73c34d37abde49c50929f0ec0527153f" kindref="member">set_pids</ref>(PIDs_in.first,<sp/>PIDs_in.second);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>PIDs</highlight></codeline>
<codeline lineno="79" refid="classGambit_1_1PID__pair_1a99a97b13f0fbdd7ba78d6816639114c9" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iipair&amp;<sp/><ref refid="classGambit_1_1PID__pair_1a99a97b13f0fbdd7ba78d6816639114c9" kindref="member">PIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pids;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid1()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pids.first;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid2()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pids.second;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>charge-conjugated<sp/>PID<sp/>pair</highlight></codeline>
<codeline lineno="95" refid="classGambit_1_1PID__pair_1a34e78c302595256beb94420a6ff44e2d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1PID__pair" kindref="compound">PID_pair</ref><sp/><ref refid="classGambit_1_1PID__pair_1a34e78c302595256beb94420a6ff44e2d" kindref="member">cc_pid_pair</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="96"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>(-_pids.second,<sp/>-_pids.first);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Check<sp/>if<sp/>|pid1|<sp/>==<sp/>|pid2|</highlight></codeline>
<codeline lineno="101" refid="classGambit_1_1PID__pair_1a83252ce06a7ac05006f783d86656d246" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1a83252ce06a7ac05006f783d86656d246" kindref="member">is_antiparticle_pair</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_pids.first<sp/>==<sp/>-_pids.second);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Relational<sp/>operators,<sp/>simply<sp/>using<sp/>the<sp/>relational<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>operators<sp/>for<sp/>the<sp/>underlying<sp/>pair&lt;int,int&gt;</highlight></codeline>
<codeline lineno="108" refid="classGambit_1_1PID__pair_1a994e20ecca74e98cb48084854cd8419b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1a994e20ecca74e98cb48084854cd8419b" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair" kindref="compound">PID_pair</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_pids.first<sp/>==<sp/>rhs._pids.first<sp/>&amp;&amp;<sp/>this-&gt;_pids.second<sp/>==<sp/>rhs._pids.second;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair" kindref="compound">PID_pair</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_pids.first<sp/>&lt;<sp/>rhs._pids.first<sp/>||<sp/>(!(rhs._pids.first<sp/>&lt;<sp/>this-&gt;_pids.first)<sp/>&amp;&amp;<sp/>this-&gt;_pids.second<sp/>&lt;<sp/>rhs._pids.second);<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(rhs<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="121"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1af7342a06a25c91e4d5a1ee5ee6709e59" kindref="member">PID_pair</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Reset<sp/>the<sp/>PIDs</highlight></codeline>
<codeline lineno="128" refid="classGambit_1_1PID__pair_1a8633b37b6db054f306b4e8d3b1fd60f6" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1PID__pair_1a8633b37b6db054f306b4e8d3b1fd60f6" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pids<sp/>=<sp/>iipair({0,0});</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>PID<sp/>pair<sp/>as<sp/>a<sp/>string:<sp/>&quot;&lt;pid1&gt;_&lt;pid2&gt;&quot;</highlight></codeline>
<codeline lineno="135" refid="classGambit_1_1PID__pair_1a8a289e6164aa7333fb6a1813e75967b8" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classGambit_1_1PID__pair_1a8a289e6164aa7333fb6a1813e75967b8" kindref="member">str</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pids_str<sp/>=<sp/>std::to_string(_pids.first)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(_pids.second);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pids_str;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ad59d3bd695b3851e7d7adbca2aa294aa" kindref="member">iipair</ref><sp/>_pids;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Utils/include/gambit/Utils/PID_pair.hpp"/>
  </compounddef>
</doxygen>
