<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="SpecBit__rollcall_8hpp" kind="file" language="C++">
    <compoundname>SpecBit_rollcall.hpp</compoundname>
    <includes refid="SpecBit__types_8hpp" local="yes">gambit/SpecBit/SpecBit_types.hpp</includes>
    <includes refid="SpecBit__SM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_SM_rollcall.hpp</includes>
    <includes refid="SpecBit__MSSM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_MSSM_rollcall.hpp</includes>
    <includes refid="SpecBit__VS__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_VS_rollcall.hpp</includes>
    <includes refid="SpecBit__ScalarSingletDM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_ScalarSingletDM_rollcall.hpp</includes>
    <includes refid="SpecBit__VectorSingletDM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_VectorSingletDM_rollcall.hpp</includes>
    <includes refid="SpecBit__MajoranaSingletDM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_MajoranaSingletDM_rollcall.hpp</includes>
    <includes refid="SpecBit__DiracSingletDM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_DiracSingletDM_rollcall.hpp</includes>
    <includes refid="SpecBit__MDM__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_MDM_rollcall.hpp</includes>
    <includes refid="SpecBit__tests__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_tests_rollcall.hpp</includes>
    <includes refid="SpecBit__DMEFT__rollcall_8hpp" local="yes">gambit/SpecBit/SpecBit_DMEFT_rollcall.hpp</includes>
    <includedby refid="3bithit_8cpp" local="yes">3bithit.cpp</includedby>
    <includedby refid="SpecBit_8cpp" local="yes">SpecBit.cpp</includedby>
    <includedby refid="SpecBit__DMEFT_8cpp" local="yes">SpecBit_DMEFT.cpp</includedby>
    <includedby refid="SpecBit__DiracSingletDM_8cpp" local="yes">SpecBit_DiracSingletDM.cpp</includedby>
    <includedby refid="SpecBit__MDM_8cpp" local="yes">SpecBit_MDM.cpp</includedby>
    <includedby refid="SpecBit__MSSM_8cpp" local="yes">SpecBit_MSSM.cpp</includedby>
    <includedby refid="SpecBit__MajoranaSingletDM_8cpp" local="yes">SpecBit_MajoranaSingletDM.cpp</includedby>
    <includedby refid="SpecBit__SM_8cpp" local="yes">SpecBit_SM.cpp</includedby>
    <includedby refid="SpecBit__ScalarSingletDM_8cpp" local="yes">SpecBit_ScalarSingletDM.cpp</includedby>
    <includedby refid="SpecBit__VS_8cpp" local="yes">SpecBit_VS.cpp</includedby>
    <includedby refid="SpecBit__VectorSingletDM_8cpp" local="yes">SpecBit_VectorSingletDM.cpp</includedby>
    <includedby refid="SpecBit__examples_8cpp" local="yes">SpecBit_examples.cpp</includedby>
    <includedby refid="examples_2SpecBit__tests_8cpp" local="yes">SpecBit_tests.cpp</includedby>
    <includedby refid="src_2SpecBit__tests_8cpp" local="yes">SpecBit_tests.cpp</includedby>
    <incdepgraph>
      <node id="16">
        <label>gambit/SpecBit/SpecBit_DMEFT_rollcall.hpp</label>
        <link refid="SpecBit__DMEFT__rollcall_8hpp"/>
      </node>
      <node id="13">
        <label>gambit/SpecBit/SpecBit_DiracSingletDM_rollcall.hpp</label>
        <link refid="SpecBit__DiracSingletDM__rollcall_8hpp"/>
      </node>
      <node id="14">
        <label>gambit/SpecBit/SpecBit_MDM_rollcall.hpp</label>
        <link refid="SpecBit__MDM__rollcall_8hpp"/>
      </node>
      <node id="7">
        <label>gambit/SpecBit/SpecBit_MSSM_rollcall.hpp</label>
        <link refid="SpecBit__MSSM__rollcall_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>gambit/SpecBit/SpecBit_MajoranaSingletDM_rollcall.hpp</label>
        <link refid="SpecBit__MajoranaSingletDM__rollcall_8hpp"/>
      </node>
      <node id="6">
        <label>gambit/SpecBit/SpecBit_SM_rollcall.hpp</label>
        <link refid="SpecBit__SM__rollcall_8hpp"/>
      </node>
      <node id="10">
        <label>gambit/SpecBit/SpecBit_ScalarSingletDM_rollcall.hpp</label>
        <link refid="SpecBit__ScalarSingletDM__rollcall_8hpp"/>
      </node>
      <node id="9">
        <label>gambit/SpecBit/SpecBit_VS_rollcall.hpp</label>
        <link refid="SpecBit__VS__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gambit/SpecBit/SpecBit_VectorSingletDM_rollcall.hpp</label>
        <link refid="SpecBit__VectorSingletDM__rollcall_8hpp"/>
      </node>
      <node id="1">
        <label>SpecBit_rollcall.hpp</label>
        <link refid="SpecBit__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gambit/SpecBit/SpecBit_tests_rollcall.hpp</label>
        <link refid="SpecBit__tests__rollcall_8hpp"/>
      </node>
      <node id="2">
        <label>gambit/SpecBit/SpecBit_types.hpp</label>
        <link refid="SpecBit__types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
      </node>
      <node id="5">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="13">
        <label>SpecBit_examples.cpp</label>
        <link refid="SpecBit__examples_8cpp"/>
      </node>
      <node id="14">
        <label>SpecBit_tests.cpp</label>
        <link refid="examples_2SpecBit__tests_8cpp"/>
      </node>
      <node id="1">
        <label>SpecBit_rollcall.hpp</label>
        <link refid="SpecBit__rollcall_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SpecBit.cpp</label>
        <link refid="SpecBit_8cpp"/>
      </node>
      <node id="4">
        <label>SpecBit_DMEFT.cpp</label>
        <link refid="SpecBit__DMEFT_8cpp"/>
      </node>
      <node id="5">
        <label>SpecBit_DiracSingletDM.cpp</label>
        <link refid="SpecBit__DiracSingletDM_8cpp"/>
      </node>
      <node id="6">
        <label>SpecBit_MDM.cpp</label>
        <link refid="SpecBit__MDM_8cpp"/>
      </node>
      <node id="7">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="8">
        <label>SpecBit_MajoranaSingletDM.cpp</label>
        <link refid="SpecBit__MajoranaSingletDM_8cpp"/>
      </node>
      <node id="9">
        <label>SpecBit_SM.cpp</label>
        <link refid="SpecBit__SM_8cpp"/>
      </node>
      <node id="10">
        <label>SpecBit_ScalarSingletDM.cpp</label>
        <link refid="SpecBit__ScalarSingletDM_8cpp"/>
      </node>
      <node id="11">
        <label>SpecBit_VS.cpp</label>
        <link refid="SpecBit__VS_8cpp"/>
      </node>
      <node id="12">
        <label>SpecBit_VectorSingletDM.cpp</label>
        <link refid="SpecBit__VectorSingletDM_8cpp"/>
      </node>
      <node id="15">
        <label>SpecBit_tests.cpp</label>
        <link refid="src_2SpecBit__tests_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="SpecBit__rollcall_8hpp_1ae52e6f74ea68215e1692b00525fa0e2e" prot="public" static="no" mutable="no">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY SM_spectrum</definition>
        <argsstring></argsstring>
        <name>SM_spectrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="82" column="4" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__rollcall_8hpp_1ae6d66c6426c5aa3939a00ac28075070d" prot="public" static="no" mutable="no">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY OLD_CAPABILITY</definition>
        <argsstring></argsstring>
        <name>OLD_CAPABILITY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="82" column="16" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__rollcall_8hpp_1ade15f668f238d067e621489dcab03360" prot="public" static="no" mutable="no">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY convert_NMSSM_to_SM</definition>
        <argsstring></argsstring>
        <name>convert_NMSSM_to_SM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="82" column="31" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__rollcall_8hpp_1a7049fdc0ea7c82d8ed9485806a8eeaf5" prot="public" static="no" mutable="no">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY Spectrum</definition>
        <argsstring></argsstring>
        <name>Spectrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="82" column="52" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__rollcall_8hpp_1a26dce2a3ca4ad8598099d76cf4b64382" prot="public" static="no" mutable="no">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY NMSSM_does_not_exist_yet</definition>
        <argsstring></argsstring>
        <name>NMSSM_does_not_exist_yet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="82" column="61" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpecBit__rollcall_8hpp_1a2d0f210e2b89caef08efc8fcd6ff8489" prot="public" static="no" mutable="no">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY NMSSM_spectrum</definition>
        <argsstring></argsstring>
        <name>NMSSM_spectrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="82" column="86" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="SpecBit__rollcall_8hpp_1a15456ee6218caadee59f862e30a68bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>START_CAPABILITY</type>
        <definition>START_CAPABILITY QUICK_FUNCTION</definition>
        <argsstring>(MODULE, SM_spectrum, OLD_CAPABILITY, convert_MSSM_to_SM, Spectrum,(MSSM63atQ, MSSM63atMGUT),(MSSM_spectrum, Spectrum)) QUICK_FUNCTION(MODULE</argsstring>
        <name>QUICK_FUNCTION</name>
        <param>
          <type><ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref></type>
        </param>
        <param>
          <type>SM_spectrum</type>
        </param>
        <param>
          <type>OLD_CAPABILITY</type>
        </param>
        <param>
          <type>convert_MSSM_to_SM</type>
        </param>
        <param>
          <type>Spectrum</type>
        </param>
        <param>
          <type>(MSSM63atQ, MSSM63atMGUT)</type>
        </param>
        <param>
          <type>(MSSM_spectrum, Spectrum)</type>
        </param>
        <briefdescription>
<para>Module function declarations for <ref refid="SpecBit__SM_8cpp" kindref="compound">SpecBit_SM.cpp</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Module function declarations for <ref refid="SpecBit__MSSM_8cpp" kindref="compound">SpecBit_MSSM.cpp</ref> Module function declarations for <ref refid="SpecBit__ScalarSingletDM_8cpp" kindref="compound">SpecBit_ScalarSingletDM.cpp</ref> Module function declarations for SpecBit_VectorSingletDM_Z2.cpp Module function declarations for SpecBit_MajoranaSingletDM_Z2.cpp Module function declarations for SpecBit_DiracSingletDM_Z2.cpp Module function declarations for <ref refid="SpecBit__MDM_8cpp" kindref="compound">SpecBit_MDM.cpp</ref> Module function declarations for SpecBit_tests.cpp (new tests) Module function declarations for <ref refid="SpecBit__DMEFT_8cpp" kindref="compound">SpecBit_DMEFT.cpp</ref> For SpecBit testing only Functions to change the capability associated with a Spectrum object to &quot;SM_spectrum&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="81" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="SpecBit__rollcall_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" prot="public" static="no">
        <name>MODULE</name>
        <initializer>SpecBit</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="29" column="9" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__rollcall_8hpp_1a62a0f8a0b822f31ff84bc8252b33e7c8" prot="public" static="no">
        <name>REFERENCE</name>
        <initializer>GAMBITModelsWorkgroup:2017ilg</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="30" column="9" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SpecBit__rollcall_8hpp_1a99414bf65bb722f6204c37c7a507b92f" prot="public" static="no">
        <name>CAPABILITY</name>
        <initializer>Higgs_Couplings</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" line="38" column="11" bodyfile="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Rollcall header for module SpecBit</para>
<para>These functions link ModelParameters to Spectrum objects in various ways.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2014 Sep - Dec, 2015 Jan - Mar</para>
</simplesect>
<simplesect kind="author"><para>Ankit Beniwal (<ulink url="mailto:ankit.beniwal@adelaide.edu.au">ankit.beniwal@adelaide.edu.au</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2016 Aug</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Rollcall<sp/>header<sp/>for<sp/>module<sp/>SpecBit</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>These<sp/>functions<sp/>link<sp/>ModelParameters<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>Spectrum<sp/>objects<sp/>in<sp/>various<sp/>ways.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/><sp/><sp/>\date<sp/>2014<sp/>Sep<sp/>-<sp/>Dec,<sp/>2015<sp/>Jan<sp/>-<sp/>Mar</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>\author<sp/>Ankit<sp/>Beniwal</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ankit.beniwal@adelaide.edu.au)</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/><sp/><sp/>\date<sp/>2016<sp/>Aug</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SpecBit_rollcall_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SpecBit_rollcall_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SpecBit__types_8hpp" kindref="compound">gambit/SpecBit/SpecBit_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE<sp/>SpecBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFERENCE<sp/>GAMBITModelsWorkgroup:2017ilg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">START_MODULE</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Capabilities<sp/>used<sp/>in<sp/>more<sp/>than<sp/>one<sp/>of<sp/>the<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>need<sp/>to<sp/>be<sp/>declared<sp/>up-front<sp/>(and<sp/>then<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>declared<sp/>in<sp/>the<sp/>header)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generalised<sp/>Higgs<sp/>couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CAPABILITY<sp/>Higgs_Couplings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>START_CAPABILITY</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_SM.cpp</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__SM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_SM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_MSSM.cpp</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__MSSM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_MSSM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__VS__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_VS_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_ScalarSingletDM.cpp</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__ScalarSingletDM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_ScalarSingletDM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_VectorSingletDM_Z2.cpp</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__VectorSingletDM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_VectorSingletDM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_MajoranaSingletDM_Z2.cpp</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__MajoranaSingletDM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_MajoranaSingletDM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_DiracSingletDM_Z2.cpp</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__DiracSingletDM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_DiracSingletDM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_MDM.cpp</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__MDM__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_MDM_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_tests.cpp<sp/>(new<sp/>tests)</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__tests__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_tests_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_DMEFT.cpp</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="SpecBit__DMEFT__rollcall_8hpp" kindref="compound">gambit/SpecBit/SpecBit_DMEFT_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Temporarily<sp/>disabled<sp/>until<sp/>project<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/>///<sp/>Module<sp/>function<sp/>declarations<sp/>for<sp/>SpecBit_SuperRenormHP.cpp</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>#include<sp/>&quot;gambit/SpecBit/SpecBit_SuperRenormHP_rollcall.hpp&quot;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>///<sp/>For<sp/>SpecBit<sp/>testing<sp/>only</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//#include<sp/>&quot;gambit/SpecBit/SpecBit_sandbox_rollcall.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/>///<sp/>Functions<sp/>to<sp/>change<sp/>the<sp/>capability<sp/>associated<sp/>with<sp/>a<sp/>Spectrum<sp/>object<sp/>to<sp/>&quot;SM_spectrum&quot;</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/>///<sp/>@{</highlight></codeline>
<codeline lineno="81" refid="SpecBit__rollcall_8hpp_1a15456ee6218caadee59f862e30a68bde" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="SpecBit__rollcall_8hpp_1a15456ee6218caadee59f862e30a68bde" kindref="member">QUICK_FUNCTION</ref>(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>,<sp/>SM_spectrum,<sp/>OLD_CAPABILITY,<sp/>convert_MSSM_to_SM,<sp/><sp/>Spectrum,<sp/>(MSSM63atQ,<sp/>MSSM63atMGUT),<sp/>(MSSM_spectrum,<sp/>Spectrum))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="SpecBit__rollcall_8hpp_1a15456ee6218caadee59f862e30a68bde" kindref="member">QUICK_FUNCTION</ref>(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>,<sp/>SM_spectrum,<sp/>OLD_CAPABILITY,<sp/>convert_NMSSM_to_SM,<sp/><sp/>Spectrum,<sp/>(NMSSM_does_not_exist_yet),<sp/>(NMSSM_spectrum,<sp/>Spectrum))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="SpecBit__rollcall_8hpp_1a15456ee6218caadee59f862e30a68bde" kindref="member">QUICK_FUNCTION</ref>(<ref refid="backend__macros_8hpp_1a2c63ae95fe7c6106ae1ec9c283afa486" kindref="member">MODULE</ref>,<sp/>SM_spectrum,<sp/>OLD_CAPABILITY,<sp/>convert_E6MSSM_to_SM,<sp/>Spectrum,<sp/>(E6MSSM_does_not_exist_yet),<sp/>(E6MSSM_spectrum,<sp/>Spectrum))</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="85"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;Convenience&apos;<sp/>functions<sp/>to<sp/>retrieve<sp/>certain<sp/>particle<sp/>properities<sp/>in<sp/>a<sp/>simple<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#define<sp/>CAPABILITY<sp/>LSP_mass<sp/><sp/><sp/>//<sp/>Supplies<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>lightest<sp/>supersymmetric<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>START_CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#define<sp/>FUNCTION<sp/>get_LSP_mass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Retrieves<sp/>the<sp/>LSP<sp/>mass<sp/>from<sp/>a<sp/>Spectrum<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>START_FUNCTION(double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>DEPENDENCY(particle_spectrum,<sp/>SpectrumPtr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Takes<sp/>a<sp/>Spectrum<sp/>object<sp/>and<sp/>returns<sp/>an<sp/>SLHAstruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ALLOW_MODELS(MSSM24,<sp/>CMSSM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#undef<sp/>FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#undef<sp/>CAPABILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>REFERENCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MODULE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__SpecBit_rollcall_hpp__)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="SpecBit/include/gambit/SpecBit/SpecBit_rollcall.hpp"/>
  </compounddef>
</doxygen>
