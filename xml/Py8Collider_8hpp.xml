<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Py8Collider_8hpp" kind="file" language="C++">
    <compoundname>Py8Collider.hpp</compoundname>
    <includes local="no">ostream</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="shared__types_8hpp" local="yes">gambit/Elements/shared_types.hpp</includes>
    <includes refid="BaseCollider_8hpp" local="yes">gambit/ColliderBit/colliders/BaseCollider.hpp</includes>
    <includes refid="SetHooksClass_8hpp" local="yes">gambit/ColliderBit/colliders/Pythia8/SetHooksClass.hpp</includes>
    <includes local="yes">SLHAea/slhaea.h</includes>
    <includedby refid="ColliderBit__types_8hpp" local="yes">ColliderBit_types.hpp</includedby>
    <incdepgraph>
      <node id="96">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>gambit/Backends/default_bossed_versions.hpp</label>
        <link refid="default__bossed__versions_8hpp"/>
      </node>
      <node id="93">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="98">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>gambit/ColliderBit/colliders/BaseCollider.hpp</label>
        <link refid="BaseCollider_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Py8Collider.hpp</label>
        <link refid="Py8Collider_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>gambit/ColliderBit/colliders/Pythia8/SetHooksClass.hpp</label>
        <link refid="SetHooksClass_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>gambit/Elements/daFunk.hpp</label>
        <link refid="daFunk_8hpp_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>gambit/Elements/decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>gambit/Elements/flav_prediction.hpp</label>
        <link refid="flav__prediction_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>gambit/Elements/halo_types.hpp</label>
        <link refid="halo__types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>gambit/Elements/higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Elements/shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Elements/spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>gambit/Elements/wimp_types.hpp</label>
        <link refid="wimp__types_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="74">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="33">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="23">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="54">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="58">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="84">
        <label>algorithm</label>
      </node>
      <node id="49">
        <label>array</label>
      </node>
      <node id="85">
        <label>assert.h</label>
      </node>
      <node id="62">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="97">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="61">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="24">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="19">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="87">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="20">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="18">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="26">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="56">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="86">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="17">
        <label>boost/version.hpp</label>
      </node>
      <node id="43">
        <label>cassert</label>
      </node>
      <node id="70">
        <label>cfloat</label>
      </node>
      <node id="59">
        <label>chrono</label>
      </node>
      <node id="52">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>complex</label>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
      <node id="48">
        <label>deque</label>
      </node>
      <node id="35">
        <label>exception</label>
      </node>
      <node id="47">
        <label>forward_list</label>
      </node>
      <node id="41">
        <label>fstream</label>
      </node>
      <node id="100">
        <label>gambit/Backends/backend_types_rollcall.hpp</label>
      </node>
      <node id="60">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="89">
        <label>gsl/gsl_errno.h</label>
      </node>
      <node id="88">
        <label>gsl/gsl_integration.h</label>
      </node>
      <node id="40">
        <label>iostream</label>
      </node>
      <node id="68">
        <label>limits</label>
      </node>
      <node id="46">
        <label>list</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="63">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="9">
        <label>omp.h</label>
      </node>
      <node id="2">
        <label>ostream</label>
      </node>
      <node id="34">
        <label>set</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>stdexcept</label>
      </node>
      <node id="79">
        <label>stdio.h</label>
      </node>
      <node id="80">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="42">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="44">
        <label>unordered_map</label>
      </node>
      <node id="45">
        <label>unordered_set</label>
      </node>
      <node id="37">
        <label>utility</label>
      </node>
      <node id="36">
        <label>vector</label>
      </node>
      <node id="66">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>ColliderBit_eventloop.hpp</label>
        <link refid="ColliderBit__eventloop_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ColliderBit_rollcall.hpp</label>
        <link refid="ColliderBit__rollcall_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ColliderBit_types.hpp</label>
        <link refid="ColliderBit__types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Py8Collider.hpp</label>
        <link refid="Py8Collider_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>complete_process_PID_pair_multimaps.hpp</label>
        <link refid="complete__process__PID__pair__multimaps_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>generateEventPy8Collider.hpp</label>
        <link refid="generateEventPy8Collider_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>getPy8Collider.hpp</label>
        <link refid="getPy8Collider_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ColliderBit_Higgs.cpp</label>
        <link refid="ColliderBit__Higgs_8cpp"/>
      </node>
      <node id="5">
        <label>ColliderBit_InterpolatedYields.cpp</label>
        <link refid="ColliderBit__InterpolatedYields_8cpp"/>
      </node>
      <node id="6">
        <label>ColliderBit_LEP.cpp</label>
        <link refid="ColliderBit__LEP_8cpp"/>
      </node>
      <node id="7">
        <label>ColliderBit_dummy.cpp</label>
        <link refid="ColliderBit__dummy_8cpp"/>
      </node>
      <node id="9">
        <label>ColliderBit_eventloop.cpp</label>
        <link refid="ColliderBit__eventloop_8cpp"/>
      </node>
      <node id="10">
        <label>ColliderBit_measurements.cpp</label>
        <link refid="ColliderBit__measurements_8cpp"/>
      </node>
      <node id="25">
        <label>LHC_likelihoods.cpp</label>
        <link refid="LHC__likelihoods_8cpp"/>
      </node>
      <node id="11">
        <label>collider_event_weights.cpp</label>
        <link refid="collider__event__weights_8cpp"/>
      </node>
      <node id="28">
        <label>complete_process_PID_pair_multimaps.cpp</label>
        <link refid="complete__process__PID__pair__multimaps_8cpp"/>
      </node>
      <node id="15">
        <label>getActiveProcessCodes.cpp</label>
        <link refid="getActiveProcessCodes_8cpp"/>
      </node>
      <node id="16">
        <label>getAnalysisContainer.cpp</label>
        <link refid="getAnalysisContainer_8cpp"/>
      </node>
      <node id="17">
        <label>getBuckFast.cpp</label>
        <link refid="getBuckFast_8cpp"/>
      </node>
      <node id="18">
        <label>getHepMCEvent.cpp</label>
        <link refid="getHepMCEvent_8cpp"/>
      </node>
      <node id="19">
        <label>getLHEvent.cpp</label>
        <link refid="getLHEvent_8cpp"/>
      </node>
      <node id="21">
        <label>getxsec.cpp</label>
        <link refid="getxsec_8cpp"/>
      </node>
      <node id="26">
        <label>lep_mssm_xsecs.cpp</label>
        <link refid="lep__mssm__xsecs_8cpp"/>
      </node>
      <node id="13">
        <label>SUSY.cpp</label>
        <link refid="SUSY_8cpp"/>
      </node>
      <node id="14">
        <label>SUSY_extras.cpp</label>
        <link refid="SUSY__extras_8cpp"/>
      </node>
      <node id="22">
        <label>process_code_PID_pair_mapping.cpp</label>
        <link refid="process__code__PID__pair__mapping_8cpp"/>
      </node>
      <node id="23">
        <label>runAnalyses.cpp</label>
        <link refid="runAnalyses_8cpp"/>
      </node>
      <node id="24">
        <label>smearEvent.cpp</label>
        <link refid="smearEvent_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGambit_1_1ColliderBit_1_1Py8Collider" prot="public">Gambit::ColliderBit::Py8Collider</innerclass>
    <innerclass refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1InitializationError" prot="public">Gambit::ColliderBit::Py8Collider::InitializationError</innerclass>
    <innerclass refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1EventGenerationError" prot="public">Gambit::ColliderBit::Py8Collider::EventGenerationError</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1ColliderBit">Gambit::ColliderBit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The Py8Collider class.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Abram Krislock </para>
</simplesect>
<simplesect kind="date"><para>July 2016</para>
</simplesect>
<simplesect kind="author"><para>Pat Scott </para>
</simplesect>
<simplesect kind="date"><para>Jan 2019</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>The<sp/>Py8Collider<sp/>class.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Abram<sp/>Krislock</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>\date<sp/>July<sp/>2016</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\date<sp/>Jan<sp/>2019</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shared__types_8hpp" kindref="compound">gambit/Elements/shared_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BaseCollider_8hpp" kindref="compound">gambit/ColliderBit/colliders/BaseCollider.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SetHooksClass_8hpp" kindref="compound">gambit/ColliderBit/colliders/Pythia8/SetHooksClass.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SLHAea/slhaea.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ColliderBit</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>A<sp/>specializable,<sp/>recyclable<sp/>class<sp/>interfacing<sp/>ColliderBit<sp/>and<sp/>Pythia.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PythiaT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>hepmc_writerT&gt;</highlight></codeline>
<codeline lineno="36" refid="classGambit_1_1ColliderBit_1_1Py8Collider" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider" kindref="compound">Py8Collider</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1BaseCollider" kindref="compound">BaseCollider</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PythiaT*<sp/>_pythiaInstance;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PythiaT*<sp/>_pythiaBase;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>_pythiaSettings;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Get<sp/>the<sp/>Pythia<sp/>instance.</highlight></codeline>
<codeline lineno="49" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a010d849869c2d54eb83ef4d68f18f88e" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PythiaT*<sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a010d849869c2d54eb83ef4d68f18f88e" kindref="member">pythia</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>up<sp/>the<sp/>CombineMatchingInput<sp/>UserHook</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetupMatchingUserHook()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ColliderBit_1_1SetHooks" kindref="compound">SetHooks&lt;PythiaT, EventT&gt;</ref><sp/>Hook;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hook.SetupHook(_pythiaInstance);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@name<sp/>Custom<sp/>exceptions:</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@{</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>An<sp/>exception<sp/>for<sp/>when<sp/>Pythia<sp/>fails<sp/>to<sp/>initialize.</highlight></codeline>
<codeline lineno="63" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1InitializationError" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1InitializationError" kindref="compound">InitializationError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Pythia<sp/>could<sp/>not<sp/>initialize.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>An<sp/>exception<sp/>for<sp/>when<sp/>Pythia<sp/>fails<sp/>to<sp/>generate<sp/>events.</highlight></codeline>
<codeline lineno="71" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1EventGenerationError" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1EventGenerationError" kindref="compound">EventGenerationError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Pythia<sp/>could<sp/>not<sp/>make<sp/>the<sp/>next<sp/>event.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@}</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@name<sp/>Construction,<sp/>Destruction,<sp/>and<sp/>Recycling:</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@{</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider" kindref="compound">Py8Collider</ref>()<sp/>:<sp/>_pythiaInstance(nullptr),<sp/>_pythiaBase(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider" kindref="compound">~Py8Collider</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaSettings.<ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1ac02bb06d51ba26df044bd535e6429e2b" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pythiaInstance)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pythiaInstance;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pythiaBase)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pythiaBase;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1ac02bb06d51ba26df044bd535e6429e2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1ac02bb06d51ba26df044bd535e6429e2b" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaSettings.clear();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pythiaInstance)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pythiaInstance;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaInstance=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@}</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@name<sp/>(Re-)Initialization<sp/>functions</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@{</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Add<sp/>a<sp/>command<sp/>to<sp/>the<sp/>list<sp/>of<sp/>settings<sp/>used<sp/>by<sp/>&quot;init&quot;.</highlight></codeline>
<codeline lineno="111" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a6ff3d6eda58c8236d818e0336802414b" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a6ff3d6eda58c8236d818e0336802414b" kindref="member">addToSettings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>command)<sp/>{<sp/>_pythiaSettings.push_back(command);<sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Create<sp/>a<sp/>useless<sp/>Pythia<sp/>instance<sp/>just<sp/>to<sp/>print<sp/>the<sp/>banner.</highlight></codeline>
<codeline lineno="113" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a89df5232d4b46999a0899e7cdfb231e4" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a89df5232d4b46999a0899e7cdfb231e4" kindref="member">banner</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pythiaDocPath)<sp/>{<sp/>PythiaT<sp/>myPythia(pythiaDocPath);<sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialize<sp/>with<sp/>no<sp/>settings<sp/>(error):<sp/>override<sp/>version.</highlight></codeline>
<codeline lineno="115" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aeae80e144f0889e0d5fb42e44c43ffdd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aeae80e144f0889e0d5fb42e44c43ffdd" kindref="member">init</ref>()<sp/>{<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;No<sp/>settings<sp/>given<sp/>to<sp/>Pythia!\n\n&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1InitializationError" kindref="compound">InitializationError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialize<sp/>from<sp/>some<sp/>external<sp/>settings:<sp/>override<sp/>version.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@note<sp/>A<sp/>string<sp/>denoting<sp/>the<sp/>path<sp/>to<sp/>Pythia&apos;s<sp/>xmldoc<sp/>directory<sp/>is</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@note<sp/>assumed<sp/>to<sp/>be<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>settings<sp/>vector:</highlight></codeline>
<codeline lineno="120" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aa0e506de7f07e74bef7594c3eedfd1a1" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aa0e506de7f07e74bef7594c3eedfd1a1" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>externalSettings)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>docPath<sp/>=<sp/>externalSettings.back();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>settings(externalSettings);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.pop_back();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aeae80e144f0889e0d5fb42e44c43ffdd" kindref="member">init</ref>(docPath,<sp/>settings);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialize<sp/>from<sp/>some<sp/>external<sp/>settings.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@note<sp/>This<sp/>override<sp/>is<sp/>most<sp/>commonly<sp/>used<sp/>in<sp/>ColliderBit.</highlight></codeline>
<codeline lineno="130" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a3c51b0f7ca87a71cc5c2f7f386b4e868" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a3c51b0f7ca87a71cc5c2f7f386b4e868" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pythiaDocPath,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>externalSettings,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SLHAea::Coll*<sp/>slhaea=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>std::ostream&amp;<sp/>os=std::cout)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Settings<sp/>acquired<sp/>externally<sp/>(ex<sp/>from<sp/>a<sp/>gambit<sp/>yaml<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>command<sp/>:<sp/>externalSettings)<sp/>_pythiaSettings.push_back(command);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_pythiaBase)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaBase<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PythiaT(pythiaDocPath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>all<sp/>settings<sp/>to<sp/>_pythiaBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>command<sp/>:<sp/>_pythiaSettings)<sp/>_pythiaBase-&gt;readString(command);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>_pythiaInstance<sp/>from<sp/>_pythiaBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pythiaInstance)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pythiaInstance;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaInstance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PythiaT(_pythiaBase-&gt;particleData,<sp/>_pythiaBase-&gt;settings);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>along<sp/>the<sp/>SLHAea::Coll<sp/>pointer,<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slhaea)<sp/>_pythiaInstance-&gt;slhaInterface.slha.setSLHAea(slhaea);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>command<sp/>again<sp/>to<sp/>get<sp/>SM<sp/>decay<sp/>table<sp/>change<sp/>from<sp/>yaml<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>command<sp/>:<sp/>_pythiaSettings)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaInstance-&gt;readString(command);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_pythiaInstance-&gt;init(os))<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1InitializationError" kindref="compound">InitializationError</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialize<sp/>from<sp/>some<sp/>external<sp/>settings.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Special<sp/>version<sp/>of<sp/>the<sp/>init<sp/>function<sp/>for<sp/>user<sp/>defined<sp/>models</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Needs<sp/>to<sp/>directly<sp/>construct<sp/>the<sp/>new<sp/>matrix<sp/>elements<sp/>(rather<sp/>than<sp/>use<sp/>flags)</highlight></codeline>
<codeline lineno="164" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a7a85a588fc16aaee649d6feaf584b329" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a7a85a588fc16aaee649d6feaf584b329" kindref="member">init_user_model</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pythiaDocPath,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>externalSettings,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SLHAea::Coll*<sp/>slhaea=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>std::ostream&amp;<sp/>os=std::cout)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Settings<sp/>acquired<sp/>externally<sp/>(for<sp/>example,<sp/>from<sp/>a<sp/>gambit<sp/>yaml<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>command<sp/>:<sp/>externalSettings)<sp/>_pythiaSettings.push_back(command);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_pythiaBase)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaBase<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PythiaT(pythiaDocPath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>all<sp/>settings<sp/>to<sp/>_pythiaBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>command<sp/>:<sp/>_pythiaSettings)<sp/>_pythiaBase-&gt;readString(command);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>_pythiaInstance<sp/>from<sp/>_pythiaBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pythiaInstance)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pythiaInstance;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pythiaInstance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PythiaT(_pythiaBase-&gt;particleData,<sp/>_pythiaBase-&gt;settings);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>along<sp/>the<sp/>SLHAea::Coll<sp/>pointer,<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slhaea)<sp/>_pythiaInstance-&gt;slhaInterface.slha.setSLHAea(slhaea);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_pythiaInstance-&gt;init(os))<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1InitializationError" kindref="compound">InitializationError</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialize<sp/>from<sp/>some<sp/>external<sp/>settings,<sp/>assuming<sp/>no<sp/>given<sp/>SLHAea<sp/>instance.</highlight></codeline>
<codeline lineno="190" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1add0ca6d3cdbf992ef680c55746fa6f5d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1add0ca6d3cdbf992ef680c55746fa6f5d" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pythiaDocPath,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>externalSettings,<sp/>std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aeae80e144f0889e0d5fb42e44c43ffdd" kindref="member">init</ref>(pythiaDocPath,<sp/>externalSettings,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>os);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Initialize<sp/>from<sp/>some<sp/>external<sp/>settings,<sp/>assuming<sp/>no<sp/>given<sp/>SLHAea<sp/>instance.</highlight></codeline>
<codeline lineno="197" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a5a528c25a241352ad3cc5a56ce9ebdf7" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a5a528c25a241352ad3cc5a56ce9ebdf7" kindref="member">init_user_model</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pythiaDocPath,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>externalSettings,<sp/>std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a7a85a588fc16aaee649d6feaf584b329" kindref="member">init_user_model</ref>(pythiaDocPath,<sp/>externalSettings,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>os);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@}</highlight></codeline>
<codeline lineno="204"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>@name<sp/>Event<sp/>generation<sp/>and<sp/>cross<sp/>section<sp/>functions</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@{</highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Event<sp/>generation<sp/>for<sp/>any<sp/>Pythia<sp/>interface<sp/>to<sp/>Gambit.</highlight></codeline>
<codeline lineno="210" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a6526db446fe9d9211b171377da856d40" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a6526db446fe9d9211b171377da856d40" kindref="member">nextEvent</ref>(EventT&amp;<sp/>event)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>make<sp/>and<sp/>populate<sp/>an<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>accepted_event<sp/>=<sp/>_pythiaInstance-&gt;next();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>_pythiaInstance-&gt;event;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!accepted_event)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1_1EventGenerationError" kindref="compound">EventGenerationError</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Report<sp/>the<sp/>total<sp/>or<sp/>process-specific<sp/>cross<sp/>section<sp/>(in<sp/>fb<sp/>or<sp/>pb).</highlight></codeline>
<codeline lineno="222" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a140a68f9f9181c4af6abdaf6b2728dd6" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a140a68f9f9181c4af6abdaf6b2728dd6" kindref="member">xsec_fb</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaGen()<sp/>*<sp/>1e12;<sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a140a68f9f9181c4af6abdaf6b2728dd6" kindref="member">xsec_fb</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaGen(<ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)<sp/>*<sp/>1e12;<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsec_pb()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaGen()<sp/>*<sp/>1e9;<sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsec_pb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaGen(<ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)<sp/>*<sp/>1e9;<sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Report<sp/>the<sp/>uncertainty<sp/>in<sp/>the<sp/>total<sp/>or<sp/>process-specific<sp/>cross<sp/>section<sp/>(in<sp/>fb<sp/>or<sp/>pb).</highlight></codeline>
<codeline lineno="228" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a0790014470d018de91a3c9abece7859a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a0790014470d018de91a3c9abece7859a" kindref="member">xsecErr_fb</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaErr()<sp/>*<sp/>1e12;<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1a0790014470d018de91a3c9abece7859a" kindref="member">xsecErr_fb</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaErr(<ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)<sp/>*<sp/>1e12;<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecErr_pb()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaErr()<sp/>*<sp/>1e9;<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecErr_pb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.sigmaErr(<ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>)<sp/>*<sp/>1e9;<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Report<sp/>an<sp/>integer<sp/>process<sp/>code<sp/>for<sp/>the<sp/>last<sp/>generated<sp/>event</highlight></codeline>
<codeline lineno="234" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1af0a0e267ea5fced895a34e729609c8ef" kindref="member">process_code</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.code();<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>Report<sp/>the<sp/>list<sp/>of<sp/>all<sp/>active<sp/>process<sp/>codes</highlight></codeline>
<codeline lineno="237" refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aff94f87efa8800793a1bb3fc11834801" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="classGambit_1_1ColliderBit_1_1Py8Collider_1aff94f87efa8800793a1bb3fc11834801" kindref="member">all_active_process_codes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pythiaInstance-&gt;info.codesHard();<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///@}</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ColliderBit/include/gambit/ColliderBit/colliders/Pythia8/Py8Collider.hpp"/>
  </compounddef>
</doxygen>
