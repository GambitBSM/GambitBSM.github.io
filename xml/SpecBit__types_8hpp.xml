<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="SpecBit__types_8hpp" kind="file" language="C++">
    <compoundname>SpecBit_types.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="util__types_8hpp" local="yes">gambit/Utils/util_types.hpp</includes>
    <includedby refid="SpecBit__VS_8cpp" local="yes">SpecBit_VS.cpp</includedby>
    <includedby refid="SpecBit__VS__rollcall_8hpp" local="yes">SpecBit_VS_rollcall.hpp</includedby>
    <includedby refid="SpecBit__rollcall_8hpp" local="yes">SpecBit_rollcall.hpp</includedby>
    <includedby refid="SpecBit__types_8cpp" local="yes">SpecBit_types.cpp</includedby>
    <incdepgraph>
      <node id="35">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="1">
        <label>SpecBit_types.hpp</label>
        <link refid="SpecBit__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="31">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="21">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="12">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>array</label>
      </node>
      <node id="22">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="17">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="28">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="18">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="27">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="16">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="26">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="24">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="25">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="15">
        <label>boost/version.hpp</label>
      </node>
      <node id="40">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>complex</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="45">
        <label>deque</label>
      </node>
      <node id="33">
        <label>exception</label>
      </node>
      <node id="44">
        <label>forward_list</label>
      </node>
      <node id="38">
        <label>fstream</label>
      </node>
      <node id="37">
        <label>iostream</label>
      </node>
      <node id="43">
        <label>list</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="7">
        <label>omp.h</label>
      </node>
      <node id="32">
        <label>set</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="39">
        <label>type_traits</label>
      </node>
      <node id="13">
        <label>unistd.h</label>
      </node>
      <node id="41">
        <label>unordered_map</label>
      </node>
      <node id="42">
        <label>unordered_set</label>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>3bithit.cpp</label>
        <link refid="3bithit_8cpp"/>
      </node>
      <node id="20">
        <label>SpecBit_examples.cpp</label>
        <link refid="SpecBit__examples_8cpp"/>
      </node>
      <node id="21">
        <label>SpecBit_tests.cpp</label>
        <link refid="examples_2SpecBit__tests_8cpp"/>
      </node>
      <node id="3">
        <label>SpecBit_VS_rollcall.hpp</label>
        <link refid="SpecBit__VS__rollcall_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SpecBit_rollcall.hpp</label>
        <link refid="SpecBit__rollcall_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SpecBit_types.hpp</label>
        <link refid="SpecBit__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SpecBit.cpp</label>
        <link refid="SpecBit_8cpp"/>
      </node>
      <node id="7">
        <label>SpecBit_DMEFT.cpp</label>
        <link refid="SpecBit__DMEFT_8cpp"/>
      </node>
      <node id="8">
        <label>SpecBit_DMsimpVectorMedDiracDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedDiracDM_8cpp"/>
      </node>
      <node id="9">
        <label>SpecBit_DMsimpVectorMedMajoranaDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedMajoranaDM_8cpp"/>
      </node>
      <node id="10">
        <label>SpecBit_DMsimpVectorMedScalarDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedScalarDM_8cpp"/>
      </node>
      <node id="11">
        <label>SpecBit_DMsimpVectorMedVectorDM.cpp</label>
        <link refid="SpecBit__DMsimpVectorMedVectorDM_8cpp"/>
      </node>
      <node id="12">
        <label>SpecBit_DiracSingletDM.cpp</label>
        <link refid="SpecBit__DiracSingletDM_8cpp"/>
      </node>
      <node id="13">
        <label>SpecBit_MDM.cpp</label>
        <link refid="SpecBit__MDM_8cpp"/>
      </node>
      <node id="14">
        <label>SpecBit_MSSM.cpp</label>
        <link refid="SpecBit__MSSM_8cpp"/>
      </node>
      <node id="15">
        <label>SpecBit_MajoranaSingletDM.cpp</label>
        <link refid="SpecBit__MajoranaSingletDM_8cpp"/>
      </node>
      <node id="16">
        <label>SpecBit_SM.cpp</label>
        <link refid="SpecBit__SM_8cpp"/>
      </node>
      <node id="17">
        <label>SpecBit_ScalarSingletDM.cpp</label>
        <link refid="SpecBit__ScalarSingletDM_8cpp"/>
      </node>
      <node id="18">
        <label>SpecBit_SubGeVDM.cpp</label>
        <link refid="SpecBit__SubGeVDM_8cpp"/>
      </node>
      <node id="2">
        <label>SpecBit_VS.cpp</label>
        <link refid="SpecBit__VS_8cpp"/>
      </node>
      <node id="19">
        <label>SpecBit_VectorSingletDM.cpp</label>
        <link refid="SpecBit__VectorSingletDM_8cpp"/>
      </node>
      <node id="22">
        <label>SpecBit_tests.cpp</label>
        <link refid="src_2SpecBit__tests_8cpp"/>
      </node>
      <node id="23">
        <label>SpecBit_types.cpp</label>
        <link refid="SpecBit__types_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structGambit_1_1SpecBit_1_1SpectrumEntry" prot="public">Gambit::SpecBit::SpectrumEntry</innerclass>
    <innerclass refid="classGambit_1_1SpecBit_1_1SpectrumEntriesForVevacious" prot="public">Gambit::SpecBit::SpectrumEntriesForVevacious</innerclass>
    <innerclass refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer" prot="public">Gambit::SpecBit::VevaciousResultContainer</innerclass>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1SpecBit">Gambit::SpecBit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Type definition header for module SpecBit.</para>
<para>Compile-time registration of type definitions required for the rest of the code to communicate with SpecBit.</para>
<para>Add to this if you want to define a new type for the functions in SpecBit to return, but you don&apos;t expect that type to be needed by any other modules.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Janina Renk (<ulink url="mailto:janina.renk@fysik.su.se">janina.renk@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2019 July, Dec</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Type<sp/>definition<sp/>header<sp/>for<sp/>module<sp/>SpecBit.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>Compile-time<sp/>registration<sp/>of<sp/>type<sp/>definitions</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>required<sp/>for<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>code<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>communicate<sp/>with<sp/>SpecBit.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>Add<sp/>to<sp/>this<sp/>if<sp/>you<sp/>want<sp/>to<sp/>define<sp/>a<sp/>new<sp/>type</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>for<sp/>the<sp/>functions<sp/>in<sp/>SpecBit<sp/>to<sp/>return,<sp/>but</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>you<sp/>don&apos;t<sp/>expect<sp/>that<sp/>type<sp/>to<sp/>be<sp/>needed<sp/>by</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/><sp/>any<sp/>other<sp/>modules.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>\author<sp/>Janina<sp/>Renk</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(janina.renk@fysik.su.se)</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>\date<sp/>2019<sp/>July,<sp/>Dec</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SpecBit_types_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SpecBit_types_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__types_8hpp" kindref="compound">gambit/Utils/util_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SpecBit</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>vector<sp/>of<sp/>&lt;int,double&gt;<sp/>pairs<sp/>is<sp/>the<sp/>type<sp/>the<sp/>routine<sp/>&apos;ReadLhaBlock&apos;<sp/>of<sp/>vevacious<sp/>uses<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>passed<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;int,double&gt;&gt;<sp/>vec_pair_int_dbl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>spectrum<sp/>entry<sp/>type<sp/>storing<sp/>all<sp/>information<sp/>necessary<sp/>for<sp/>the<sp/>vevacious<sp/>function<sp/>&apos;ReadLhaBlock&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=&gt;<sp/>store<sp/>name,<sp/>parameters<sp/>&amp;<sp/>dimension<sp/>of<sp/>an<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structGambit_1_1SpecBit_1_1SpectrumEntry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1SpecBit_1_1SpectrumEntry" kindref="compound">SpectrumEntry</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec_pair_int_dbl<sp/><ref refid="structGambit_1_1parameters" kindref="compound">parameters</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>typdef<sp/>to<sp/>avoid<sp/>having<sp/>to<sp/>use<sp/>&apos;struct<sp/>SpectrumEntry&apos;<sp/>every<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGambit_1_1SpecBit_1_1SpectrumEntry" kindref="compound">SpectrumEntry</ref><sp/><ref refid="structGambit_1_1SpecBit_1_1SpectrumEntry" kindref="compound">SpectrumEntry</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>map<sp/>mapping<sp/>the<sp/>name<sp/>of<sp/>a<sp/>spectrum<sp/>entry<sp/>to<sp/>the<sp/>SpectrumEntry<sp/>type.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>In<sp/>principle<sp/>one<sp/>could<sp/>just<sp/>use<sp/>a<sp/>vector<sp/>instead<sp/>of<sp/>a<sp/>map.<sp/>However,</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>this<sp/>requires<sp/>a<sp/>lot<sp/>of<sp/>caution<sp/>to<sp/>avoid<sp/>filling<sp/>up<sp/>the<sp/>vector<sp/>with</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>more<sp/>&amp;<sp/>more<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>name<sp/>but<sp/>different<sp/>parameters</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>after<sp/>one<sp/>point<sp/>is<sp/>run<sp/>so<sp/>I<sp/>thought<sp/>this<sp/>was<sp/>the<sp/>safer<sp/>option</highlight></codeline>
<codeline lineno="61" refid="SpecBit__types_8hpp_1ae713578ca9fde57b954348eda35afa4a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,SpectrumEntry&gt;<sp/><ref refid="SpecBit__types_8hpp_1ae713578ca9fde57b954348eda35afa4a" kindref="member">map_str_SpectrumEntry</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>class<sp/>for<sp/>setting<sp/>&amp;<sp/>storing<sp/>all<sp/>spectrum<sp/>entries<sp/>of<sp/>type<sp/>SpectrumEntry</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>that<sp/>need<sp/>to<sp/>be<sp/>passed<sp/>to<sp/>vevacious<sp/>(scale,<sp/>input<sp/>filenames<sp/>&amp;<sp/>paths<sp/>as</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>well<sp/>as<sp/>spectrum<sp/>entries)</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>passed<sp/>to<sp/>vevacious<sp/>before<sp/>calling<sp/>it</highlight></codeline>
<codeline lineno="68" refid="classGambit_1_1SpecBit_1_1SpectrumEntriesForVevacious" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1SpecBit_1_1SpectrumEntriesForVevacious" kindref="compound">SpectrumEntriesForVevacious</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SpecBit_1_1SpectrumEntriesForVevacious" kindref="compound">SpectrumEntriesForVevacious</ref>(){};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setter<sp/>functions<sp/>for<sp/>scale,<sp/>inputPath<sp/>and<sp/>input<sp/>Filenames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_scale<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inScale)<sp/>{scale<sp/>=<sp/>inScale;};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_inputPath<sp/>(std::string<sp/>inPath)<sp/>{inputPath<sp/>=<sp/>inPath;};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_inputFilename<sp/>(std::string<sp/>inFile)<sp/>{inputFilename<sp/>=<sp/>inFile;};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getter<sp/>functions<sp/>for<sp/>scale,<sp/>inputPath<sp/>and<sp/>input<sp/>Filenames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_scale<sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scale;};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>get_inputFilename<sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputFilename;};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>get_inputPath<sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputPath;};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adds<sp/>an<sp/>entry<sp/>to<sp/>the<sp/>spec_entry_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1SpectrumEntriesForVevacious_1ac096c6fe422f87f83494f51dfe7c1962" kindref="member">add_entry</ref><sp/>(std::string<sp/>name,<sp/>vec_pair_int_dbl<sp/>vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>spec_entry_map<sp/>-&gt;<sp/>iterate<sp/>through<sp/>it<sp/>to<sp/>pass<sp/>all<sp/>entries<sp/>to<sp/>vevacious</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpecBit__types_8hpp_1ae713578ca9fde57b954348eda35afa4a" kindref="member">map_str_SpectrumEntry</ref><sp/>get_spec_entry_map()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec_entry_map;};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputFilename;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputPath;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpecBit__types_8hpp_1ae713578ca9fde57b954348eda35afa4a" kindref="member">map_str_SpectrumEntry</ref><sp/>spec_entry_map;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Class<sp/>that<sp/>stores<sp/>the<sp/>results<sp/>computed<sp/>by<sp/>vevacious<sp/>that<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>needed<sp/>by<sp/>other<sp/>capabilites<sp/>in<sp/>GAMBIT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer" kindref="compound">VevaciousResultContainer</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>initialises<sp/>every<sp/>member<sp/>to<sp/>-1<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>problems<sp/>when<sp/>printing<sp/>results<sp/>when<sp/>vevacious<sp/>did<sp/>not<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer" kindref="compound">VevaciousResultContainer</ref>(){};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>all<sp/>maps<sp/>and<sp/>set<sp/>value<sp/>of<sp/>lifetime<sp/>and<sp/>thermalProbability<sp/>to<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer_1a6164e63e6ffd634a33c8d0a94425e74d" kindref="member">clear_results</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vaccum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathFinder_number);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setter<sp/>functions<sp/>for<sp/>results<sp/>lifetime,<sp/>thermal<sp/>probability<sp/>&amp;<sp/>bounce<sp/>action<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>straightPathGoodEnough<sp/>checks<sp/>wethere<sp/>the<sp/>action<sp/>of<sp/>drawing<sp/>a<sp/>straigh<sp/>path<sp/>between<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>physical<sp/>&amp;<sp/>panic<sp/>vacuum<sp/>is<sp/>already<sp/>below<sp/>the<sp/>action<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer_1a4bf0e0095555de41a785868ffaeba24d" kindref="member">set_results</ref><sp/>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vaccum,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGambit_1_1SpecBit_1_1VevaciousResultContainer_1a4da3859b3801d98e20dde7ef98f3d52a" kindref="member">add_straightPathGoodEnough</ref>(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vacuum);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>map<sp/>containing<sp/>results<sp/>for<sp/>nearest/global<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a98f19afeabdc4fcaa456c944cc19a50c" kindref="member">map_str_dbl</ref><sp/>get_nearest_results()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_map[</highlight><highlight class="stringliteral">&quot;nearest&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a98f19afeabdc4fcaa456c944cc19a50c" kindref="member">map_str_dbl</ref><sp/>get_global_results()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_map[</highlight><highlight class="stringliteral">&quot;global&quot;</highlight><highlight class="normal">];}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>width,<sp/>lifetime<sp/>for<sp/>nearest/global<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_width(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vacuum)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_map[panic_vacuum][</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">];<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_lifetime(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vaccum)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_map[panic_vaccum][</highlight><highlight class="stringliteral">&quot;lifetime&quot;</highlight><highlight class="normal">];<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>thermal<sp/>probability<sp/>and<sp/>width<sp/>for<sp/>nearest/global<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_thermalProbability(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vaccum)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_map[panic_vaccum][</highlight><highlight class="stringliteral">&quot;thermalProbability&quot;</highlight><highlight class="normal">];<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_thermalWidth(<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>panic_vacuum)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_map[panic_vacuum][</highlight><highlight class="stringliteral">&quot;thermalWidth&quot;</highlight><highlight class="normal">];<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a89325f4443e809eee69d8f00d882c52f" kindref="member">map_str_map_str_dbl</ref><sp/>result_map;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined<sp/>__SpecBit_types_hpp__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="SpecBit/include/gambit/SpecBit/SpecBit_types.hpp"/>
  </compounddef>
</doxygen>
