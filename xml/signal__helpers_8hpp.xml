<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="signal__helpers_8hpp" kind="file" language="C++">
    <compoundname>signal_helpers.hpp</compoundname>
    <includes local="no">signal.h</includes>
    <includedby refid="gambit_8hpp" local="yes">gambit.hpp</includedby>
    <includedby refid="likelihood__container_8cpp" local="yes">likelihood_container.cpp</includedby>
    <includedby refid="logging_8cpp" local="yes">logging.cpp</includedby>
    <includedby refid="logmaster_8cpp" local="yes">logmaster.cpp</includedby>
    <includedby refid="plugin__factory_8hpp" local="yes">plugin_factory.hpp</includedby>
    <includedby refid="signal__helpers_8cpp" local="yes">signal_helpers.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>signal_helpers.hpp</label>
        <link refid="signal__helpers_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>signal.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>gambit.hpp</label>
        <link refid="gambit_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit.cpp</label>
        <link refid="gambit_8cpp"/>
      </node>
      <node id="4">
        <label>likelihood_container.cpp</label>
        <link refid="likelihood__container_8cpp"/>
      </node>
      <node id="5">
        <label>logging.cpp</label>
        <link refid="logging_8cpp"/>
      </node>
      <node id="6">
        <label>logmaster.cpp</label>
        <link refid="logmaster_8cpp"/>
      </node>
      <node id="7">
        <label>plugin_factory.hpp</label>
        <link refid="plugin__factory_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>scan.cpp</label>
        <link refid="scan_8cpp"/>
      </node>
      <node id="1">
        <label>signal_helpers.hpp</label>
        <link refid="signal__helpers_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>signal_helpers.cpp</label>
        <link refid="signal__helpers_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper functions for dealing with POSIX signals.</para>
<para>It seems that odd things can happen if signals are caught inside some of our OpenMP blocks. To prevent this, the following functions can be used to prevent signals being acted upon until after they are unblocked.</para>
<para>See e.g. <ulink url="http://www.gnu.org/software/libc/manual/html_node/Blocking-Signals.html">http://www.gnu.org/software/libc/manual/html_node/Blocking-Signals.html</ulink></para>
<para>For optimum safety it would probably be best to add these around all OpenMP blocks, though I am not of the maximum time for which the signal block can be maintained.</para>
<para>The blocks act upon a globally defined set of signals, which can be manipulated using other function declared in this file.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Ben Farmer (<ulink url="mailto:benjamin.farmer@fysik.su.se">benjamin.farmer@fysik.su.se</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2015 Oct</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///<sp/><sp/>\file</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>Helper<sp/>functions<sp/>for<sp/>dealing<sp/>with<sp/>POSIX</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///<sp/><sp/>signals.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///<sp/><sp/>It<sp/>seems<sp/>that<sp/>odd<sp/>things<sp/>can<sp/>happen<sp/>if<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>signals<sp/>are<sp/>caught<sp/>inside<sp/>some<sp/>of<sp/>our<sp/>OpenMP<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/><sp/>blocks.<sp/>To<sp/>prevent<sp/>this,<sp/>the<sp/>following<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>functions<sp/>can<sp/>be<sp/>used<sp/>to<sp/>prevent<sp/>signals<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>being<sp/>acted<sp/>upon<sp/>until<sp/>after<sp/>they<sp/>are<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>unblocked.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">///</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>See<sp/>e.g.<sp/>http://www.gnu.org/software/libc/manual/html_node/Blocking-Signals.html</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>For<sp/>optimum<sp/>safety<sp/>it<sp/>would<sp/>probably<sp/>be<sp/>best</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/><sp/>to<sp/>add<sp/>these<sp/>around<sp/>all<sp/>OpenMP<sp/>blocks,<sp/>though</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>I<sp/>am<sp/>not<sp/>of<sp/>the<sp/>maximum<sp/>time<sp/>for<sp/>which<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">///<sp/><sp/>signal<sp/>block<sp/>can<sp/>be<sp/>maintained.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/><sp/>The<sp/>blocks<sp/>act<sp/>upon<sp/>a<sp/>globally<sp/>defined<sp/>set<sp/>of<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/><sp/>signals,<sp/>which<sp/>can<sp/>be<sp/>manipulated<sp/>using<sp/>other</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/><sp/>function<sp/>declared<sp/>in<sp/>this<sp/>file.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="27"><highlight class="comment">///</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment">///<sp/><sp/>\author<sp/>Ben<sp/>Farmer</highlight></codeline>
<codeline lineno="31"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(benjamin.farmer@fysik.su.se)</highlight></codeline>
<codeline lineno="32"><highlight class="comment">///<sp/><sp/>\date<sp/>2015<sp/>Oct</highlight></codeline>
<codeline lineno="33"><highlight class="comment">///</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__signal_helpers_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__signal_helpers_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>///<sp/>@{<sp/>Signal<sp/>blocking/unblocking</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1af402d2cfc9b4b3931b7cef98ad788b6c" kindref="member">block_signals</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unblock_signals();</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>///<sp/>@}</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>global<sp/>signal<sp/>mask<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>sigset_t*<sp/><ref refid="namespaceGambit_1a4dd69f06ef89c647418dd3826349847a" kindref="member">signal_mask</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Utils/include/gambit/Utils/signal_helpers.hpp"/>
  </compounddef>
</doxygen>
