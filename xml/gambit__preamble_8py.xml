<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="gambit__preamble_8py" kind="file" language="Python">
    <compoundname>gambit_preamble.py</compoundname>
    <innernamespace refid="namespacegambit__preamble">gambit_preamble</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#############################################################</highlight></codeline>
<codeline lineno="3"><highlight class="comment">#<sp/>pippi:<sp/>parse<sp/>it,<sp/>plot<sp/>it</highlight></codeline>
<codeline lineno="4"><highlight class="comment">#<sp/>------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment">#<sp/>GAMBIT<sp/>preamble<sp/>module<sp/>for<sp/>pippi.<sp/><sp/>You<sp/>can<sp/>import<sp/>whatever</highlight></codeline>
<codeline lineno="6"><highlight class="comment">#<sp/>you<sp/>want<sp/>to<sp/>pippi<sp/>using<sp/>this,<sp/>and<sp/>it<sp/>will<sp/>be<sp/>available<sp/>for</highlight></codeline>
<codeline lineno="7"><highlight class="comment">#<sp/>you<sp/>to<sp/>do<sp/>inline<sp/>postprocessing<sp/>with<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="8"><highlight class="comment">#<sp/>assign_to_pippi_datastream.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">#</highlight></codeline>
<codeline lineno="10"><highlight class="comment">#<sp/>Authors:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">#<sp/><sp/>Pat<sp/>Scott<sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="12"><highlight class="comment">#<sp/><sp/>Jan<sp/>2017</highlight></codeline>
<codeline lineno="13"><highlight class="comment">#</highlight></codeline>
<codeline lineno="14"><highlight class="comment">#<sp/><sp/>Anders<sp/>Kvellestad<sp/>(anders.kvellestad@nordita.org)</highlight></codeline>
<codeline lineno="15"><highlight class="comment">#<sp/><sp/>May<sp/>2017</highlight></codeline>
<codeline lineno="16"><highlight class="comment">#<sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">#############################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Computes<sp/>the<sp/>elementwise<sp/>minimum<sp/>of<sp/>the<sp/>input<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">bulk_min(x,<sp/>limit):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>indices<sp/>=<sp/>np.where(x<sp/>&gt;<sp/>limit)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>copy.deepcopy(x)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>z[indices]<sp/>=<sp/>limit</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&apos;Safe&apos;<sp/>elementwise<sp/>ratio<sp/>calculation,<sp/>in<sp/>that<sp/>it<sp/>never<sp/>causes<sp/>divide<sp/>by<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>instead<sp/>returning<sp/>zero<sp/>for<sp/>all<sp/>entries<sp/>where<sp/>the<sp/>denominator<sp/>was<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">safe_ratio(x,<sp/>y):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>indices<sp/>=<sp/>np.where(y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>copy.deepcopy(y)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>z[indices]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>x/z</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>z[indices]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Returns<sp/>an<sp/>array<sp/>with<sp/>each<sp/>element<sp/>given<sp/>by<sp/>the<sp/>nearer<sp/>of<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">#<sp/>element<sp/>in<sp/>x<sp/>and<sp/>y<sp/>to<sp/>val.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closest_to(val,<sp/>x,<sp/>y):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>indices<sp/>=<sp/>np.where(abs(x<sp/>-<sp/>val)<sp/>&lt;<sp/>abs(y<sp/>-<sp/>val))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>copy.deepcopy(y)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>z[indices]<sp/>=<sp/>x[indices]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Elementwise<sp/>calculation<sp/>that<sp/>returns<sp/>a<sp/>&quot;signed&quot;<sp/>square<sp/>root,<sp/>sgn(x)*sqrt(x).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">signed_sqrt(x):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>indices<sp/>=<sp/>np.where(x<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>copy.deepcopy(x)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>z[indices]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>z/np.fabs(z)<sp/>*<sp/>np.sqrt(np.fabs(z))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>z[indices]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Utils/scripts/gambit_preamble.py"/>
  </compounddef>
</doxygen>
