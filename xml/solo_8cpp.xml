<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="solo_8cpp" kind="file" language="C++">
    <compoundname>solo.cpp</compoundname>
    <includes refid="standalone__module_8hpp" local="yes">gambit/Elements/standalone_module.hpp</includes>
    <includes refid="ColliderBit__rollcall_8hpp" local="yes">gambit/ColliderBit/ColliderBit_rollcall.hpp</includes>
    <includes refid="util__functions_8hpp" local="yes">gambit/Utils/util_functions.hpp</includes>
    <includes refid="Utils_2include_2gambit_2Utils_2cats_8hpp" local="yes">gambit/Utils/cats.hpp</includes>
    <incdepgraph>
      <node id="110">
        <label>gambit/Backends/backend_info.hpp</label>
        <link refid="backend__info_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>gambit/Backends/backend_singleton.hpp</label>
        <link refid="backend__singleton_8hpp"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>gambit/Backends/default_bossed_versions.hpp</label>
        <link refid="default__bossed__versions_8hpp"/>
      </node>
      <node id="107">
        <label>gambit/Backends/mathematica_variable.hpp</label>
        <link refid="mathematica__variable_8hpp"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>gambit/Backends/python_helpers.hpp</label>
        <link refid="python__helpers_8hpp"/>
      </node>
      <node id="112">
        <label>gambit/Backends/python_variable.hpp</label>
        <link refid="python__variable_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>solo.cpp</label>
        <link refid="solo_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>gambit/ColliderBit/ColliderBit_Higgs_rollcall.hpp</label>
        <link refid="ColliderBit__Higgs__rollcall_8hpp"/>
      </node>
      <node id="165">
        <label>gambit/ColliderBit/ColliderBit_LEP_rollcall.hpp</label>
        <link refid="ColliderBit__LEP__rollcall_8hpp"/>
      </node>
      <node id="166">
        <label>gambit/ColliderBit/ColliderBit_MC_rollcall.hpp</label>
        <link refid="ColliderBit__MC__rollcall_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>gambit/ColliderBit/ColliderBit_measurements_rollcall.hpp</label>
        <link refid="ColliderBit__measurements__rollcall_8hpp"/>
      </node>
      <node id="132">
        <label>gambit/ColliderBit/ColliderBit_rollcall.hpp</label>
        <link refid="ColliderBit__rollcall_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>gambit/ColliderBit/ColliderBit_types.hpp</label>
        <link refid="ColliderBit__types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>gambit/ColliderBit/MCLoopInfo.hpp</label>
        <link refid="MCLoopInfo_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>gambit/ColliderBit/MC_convergence.hpp</label>
        <link refid="MC__convergence_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>gambit/ColliderBit/analyses/AnalysisContainer.hpp</label>
        <link refid="AnalysisContainer_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>gambit/ColliderBit/analyses/AnalysisData.hpp</label>
        <link refid="AnalysisData_8hpp"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>gambit/ColliderBit/analyses/AnalysisLogLikes.hpp</label>
        <link refid="AnalysisLogLikes_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>gambit/ColliderBit/analyses/EventCounter.hpp</label>
        <link refid="EventCounter_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>gambit/ColliderBit/analyses/SignalRegionData.hpp</label>
        <link refid="SignalRegionData_8hpp"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>gambit/ColliderBit/colliders/BaseCollider.hpp</label>
        <link refid="BaseCollider_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>gambit/ColliderBit/colliders/Pythia8/Py8Collider.hpp</label>
        <link refid="Py8Collider_8hpp"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>gambit/ColliderBit/colliders/Pythia8/SetHooksClass.hpp</label>
        <link refid="SetHooksClass_8hpp"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>gambit/ColliderBit/detectors/BaseDetector.hpp</label>
        <link refid="BaseDetector_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>gambit/ColliderBit/detectors/BuckFast.hpp</label>
        <link refid="BuckFast_8hpp"/>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>gambit/ColliderBit/limits/ALEPHSleptonLimits.hpp</label>
        <link refid="ALEPHSleptonLimits_8hpp_source"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>gambit/ColliderBit/limits/BaseLimitContainer.hpp</label>
        <link refid="BaseLimitContainer_8hpp"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>gambit/ColliderBit/limits/L3GauginoLimits.hpp</label>
        <link refid="L3GauginoLimits_8hpp_source"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>gambit/ColliderBit/limits/L3SleptonLimits.hpp</label>
        <link refid="L3SleptonLimits_8hpp_source"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>gambit/ColliderBit/limits/OPALDegenerateCharginoLimits.hpp</label>
        <link refid="OPALDegenerateCharginoLimits_8hpp_source"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>gambit/ColliderBit/limits/OPALGauginoLimits.hpp</label>
        <link refid="OPALGauginoLimits_8hpp_source"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>gambit/ColliderBit/limits/PointsAndLines.hpp</label>
        <link refid="PointsAndLines_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>gambit/ColliderBit/xsec.hpp</label>
        <link refid="xsec_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>gambit/Core/ini_functions.hpp</label>
        <link refid="Core_2include_2gambit_2Core_2ini__functions_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>gambit/Elements/daFunk.hpp</label>
        <link refid="daFunk_8hpp_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>gambit/Elements/decay_table.hpp</label>
        <link refid="decay__table_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>gambit/Elements/flav_prediction.hpp</label>
        <link refid="flav__prediction_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gambit/Elements/functors.hpp</label>
        <link refid="functors_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>gambit/Elements/halo_types.hpp</label>
        <link refid="halo__types_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>gambit/Elements/higgs_couplings_table.hpp</label>
        <link refid="higgs__couplings__table_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>gambit/Elements/ini_catch.hpp</label>
        <link refid="ini__catch_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>gambit/Elements/ini_functions.hpp</label>
        <link refid="Elements_2include_2gambit_2Elements_2ini__functions_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>gambit/Elements/module_macros_common.hpp</label>
        <link refid="module__macros__common_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gambit/Elements/module_macros_incore.hpp</label>
        <link refid="module__macros__incore_8hpp"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gambit/Elements/module_macros_incore_defs.hpp</label>
        <link refid="module__macros__incore__defs_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
        <link refid="mssm__slhahelp_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>gambit/Elements/safety_bucket.hpp</label>
        <link refid="safety__bucket_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>gambit/Elements/shared_types.hpp</label>
        <link refid="shared__types_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>gambit/Elements/slhaea_spec_helpers.hpp</label>
        <link refid="slhaea__spec__helpers_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gambit/Elements/sminputs.hpp</label>
        <link refid="sminputs_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>gambit/Elements/spectrum.hpp</label>
        <link refid="spectrum_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>gambit/Elements/spectrum_helpers.hpp</label>
        <link refid="spectrum__helpers_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gambit/Elements/standalone_module.hpp</label>
        <link refid="standalone__module_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>gambit/Elements/subspectrum.hpp</label>
        <link refid="subspectrum_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>gambit/Elements/terminator.hpp</label>
        <link refid="terminator_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>gambit/Elements/types_rollcall.hpp</label>
        <link refid="types__rollcall_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>gambit/Elements/wimp_types.hpp</label>
        <link refid="wimp__types_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>gambit/Logs/log_tags.hpp</label>
        <link refid="log__tags_8hpp"/>
      </node>
      <node id="56">
        <label>gambit/Logs/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>gambit/Logs/logmaster.hpp</label>
        <link refid="logmaster_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>gambit/Models/SpectrumContents/subspectrum_contents.hpp</label>
        <link refid="subspectrum__contents_8hpp"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>gambit/Models/claw_singleton.hpp</label>
        <link refid="claw__singleton_8hpp"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>gambit/Models/models.hpp</label>
        <link refid="models_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>gambit/Models/partmap.hpp</label>
        <link refid="partmap_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>gambit/Models/safe_param_map.hpp</label>
        <link refid="safe__param__map_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>gambit/Utils/PID_pair.hpp</label>
        <link refid="PID__pair_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>gambit/Utils/begin_ignore_warnings_eigen.hpp</label>
        <link refid="begin__ignore__warnings__eigen_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>gambit/Utils/boost_fallbacks.hpp</label>
        <link refid="boost__fallbacks_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/Utils/cats.hpp</label>
        <link refid="Utils_2include_2gambit_2Utils_2cats_8hpp"/>
      </node>
      <node id="151">
        <label>gambit/Utils/end_ignore_warnings.hpp</label>
        <link refid="end__ignore__warnings_8hpp"/>
      </node>
      <node id="36">
        <label>gambit/Utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/Utils/export_symbols.hpp</label>
        <link refid="export__symbols_8hpp"/>
      </node>
      <node id="26">
        <label>gambit/Utils/local_info.hpp</label>
        <link refid="local__info_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gambit/Utils/model_parameters.hpp</label>
        <link refid="model__parameters_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>gambit/Utils/numerical_constants.hpp</label>
        <link refid="numerical__constants_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>gambit/Utils/safebool.hpp</label>
        <link refid="safebool_8hpp"/>
      </node>
      <node id="79">
        <label>gambit/Utils/slhaea_helpers.hpp</label>
        <link refid="slhaea__helpers_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gambit/Utils/standalone_error_handlers.hpp</label>
        <link refid="standalone__error__handlers_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/Utils/standalone_utils.hpp</label>
        <link refid="standalone__utils_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>gambit/Utils/static_members.hpp</label>
        <link refid="static__members_8hpp"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gambit/Utils/stream_overloads.hpp</label>
        <link refid="stream__overloads_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/Utils/stringify.hpp</label>
        <link refid="stringify_8hpp"/>
      </node>
      <node id="62">
        <label>gambit/Utils/threadsafe_rng.hpp</label>
        <link refid="threadsafe__rng_8hpp"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gambit/Utils/util_functions.hpp</label>
        <link refid="util__functions_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>gambit/Utils/util_macros.hpp</label>
        <link refid="util__macros_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>gambit/Utils/util_types.hpp</label>
        <link refid="util__types_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>gambit/Utils/variadic_functions.hpp</label>
        <link refid="variadic__functions_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>gambit/Utils/yaml_node_utility.hpp</label>
        <link refid="yaml__node__utility_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gambit/Utils/yaml_options.hpp</label>
        <link refid="yaml__options_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gambit/Utils/yaml_variadic_functions.hpp</label>
        <link refid="yaml__variadic__functions_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>Eigen/Core</label>
      </node>
      <node id="144">
        <label>HEPUtils/Event.h</label>
      </node>
      <node id="146">
        <label>HEPUtils/Jet.h</label>
      </node>
      <node id="145">
        <label>HEPUtils/Particle.h</label>
      </node>
      <node id="80">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="67">
        <label>algorithm</label>
      </node>
      <node id="51">
        <label>array</label>
      </node>
      <node id="99">
        <label>assert.h</label>
      </node>
      <node id="54">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="111">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="53">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="27">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="22">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="101">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="33">
        <label>boost/preprocessor/arithmetic/sub.hpp</label>
      </node>
      <node id="23">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="32">
        <label>boost/preprocessor/comparison/equal.hpp</label>
      </node>
      <node id="118">
        <label>boost/preprocessor/comparison/greater.hpp</label>
      </node>
      <node id="21">
        <label>boost/preprocessor/config/config.hpp</label>
      </node>
      <node id="31">
        <label>boost/preprocessor/control/if.hpp</label>
      </node>
      <node id="119">
        <label>boost/preprocessor/control/iif.hpp</label>
      </node>
      <node id="130">
        <label>boost/preprocessor/logical/bitand.hpp</label>
      </node>
      <node id="34">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="35">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="120">
        <label>boost/preprocessor/repetition/enum.hpp</label>
      </node>
      <node id="131">
        <label>boost/preprocessor/seq/cat.hpp</label>
      </node>
      <node id="121">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="29">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="30">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="122">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="81">
        <label>boost/serialization/strong_typedef.hpp</label>
      </node>
      <node id="100">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="20">
        <label>boost/version.hpp</label>
      </node>
      <node id="45">
        <label>cassert</label>
      </node>
      <node id="84">
        <label>cfloat</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>complex</label>
      </node>
      <node id="158">
        <label>cstdlib</label>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="50">
        <label>deque</label>
      </node>
      <node id="38">
        <label>exception</label>
      </node>
      <node id="49">
        <label>forward_list</label>
      </node>
      <node id="43">
        <label>fstream</label>
      </node>
      <node id="60">
        <label>gambit/Backends/backend_rollcall.hpp</label>
      </node>
      <node id="114">
        <label>gambit/Backends/backend_types_rollcall.hpp</label>
      </node>
      <node id="167">
        <label>gambit/ColliderBit/ColliderBit_models_rollcall.hpp</label>
      </node>
      <node id="141">
        <label>gambit/ColliderBit/colliders/Pythia8/Py8Collider_typedefs.hpp</label>
      </node>
      <node id="125">
        <label>gambit/Elements/elements_extras.hpp</label>
      </node>
      <node id="115">
        <label>gambit/Elements/module_types_rollcall.hpp</label>
      </node>
      <node id="59">
        <label>gambit/Models/model_rollcall.hpp</label>
      </node>
      <node id="116">
        <label>gambit/Models/model_types_rollcall.hpp</label>
      </node>
      <node id="52">
        <label>gambit/cmake/cmake_variables.hpp</label>
      </node>
      <node id="103">
        <label>gsl/gsl_errno.h</label>
      </node>
      <node id="102">
        <label>gsl/gsl_integration.h</label>
      </node>
      <node id="152">
        <label>iomanip</label>
      </node>
      <node id="42">
        <label>iostream</label>
      </node>
      <node id="72">
        <label>limits</label>
      </node>
      <node id="48">
        <label>list</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="55">
        <label>mkpath/mkpath.h</label>
      </node>
      <node id="12">
        <label>omp.h</label>
      </node>
      <node id="58">
        <label>ostream</label>
      </node>
      <node id="63">
        <label>random</label>
      </node>
      <node id="37">
        <label>set</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="91">
        <label>stdexcept</label>
      </node>
      <node id="94">
        <label>stdio.h</label>
      </node>
      <node id="95">
        <label>stdlib.h</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="18">
        <label>unistd.h</label>
      </node>
      <node id="46">
        <label>unordered_map</label>
      </node>
      <node id="47">
        <label>unordered_set</label>
      </node>
      <node id="39">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="70">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceColliderBit_1_1Functown">ColliderBit::Functown</innernamespace>
    <innernamespace refid="namespaceBackendIniBit_1_1Functown">BackendIniBit::Functown</innernamespace>
    <innernamespace refid="namespaceCAT">CAT</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="solo_8cpp_1a2b04b2a9edfee67c1280b53d0304c34f" prot="public" static="no">
        <name>NULIKE_VERSION</name>
        <initializer>&quot;1.0.9&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ColliderBit Solo: an event-based LHC recast tool using the GAMBIT ColliderBit module.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Pat Scott (<ulink url="mailto:p.scott@imperial.ac.uk">p.scott@imperial.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>May 2019</para>
</simplesect>
<simplesect kind="author"><para>Tomek Procter (<ulink url="mailto:t.procter.1@research.gla.ac.uk">t.procter.1@research.gla.ac.uk</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>November 2021</para>
</simplesect>
<hruler/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="27" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1a1dc02c6360b09a5d610af81f6c45104f" prot="public" static="no">
        <name>NULIKE_SAFE_VERSION</name>
        <initializer>1_0_9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="28" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1a17220a22242ad7c7bc29b1529a354f24" prot="public" static="no">
        <name>RIVET_VERSION</name>
        <initializer>&quot;3.1.5&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="30" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1ac716a12158f4d9e12e59061fa23559e3" prot="public" static="no">
        <name>RIVET_SAFE_VERSION</name>
        <initializer>3_1_5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="31" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1ae3af33b6ed980ac24cab46f6d3c35135" prot="public" static="no">
        <name>CONTUR_VERSION</name>
        <initializer>&quot;2.1.1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="32" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1afa21319f2ceaad4c016ccae1bb06c3ff" prot="public" static="no">
        <name>CONTUR_SAFE_VERSION</name>
        <initializer>2_1_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="33" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1a34521615a9204b4381d686444f25cd17" prot="public" static="no">
        <name>FULLLIKES_VERSION</name>
        <initializer>&quot;1.0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="35" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="solo_8cpp_1a9378cb8cffae4d2c26fcce339130b26c" prot="public" static="no">
        <name>FULLLIKES_SAFE_VERSION</name>
        <initializer>1_0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="36" column="9" bodyfile="ColliderBit/examples/solo.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="solo_8cpp_1a4e9bf917e962ebb1fd928774f856ef3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tsetting</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool apply_setting_if_present</definition>
        <argsstring>(const std::string &amp;setting, Options &amp;settings, Gambit::module_functor&lt; ColliderBit::map_str_AnalysisLogLikes &gt; &amp;the_functor)</argsstring>
        <name>apply_setting_if_present</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>setting</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type><ref refid="classGambit_1_1module__functor" kindref="compound">Gambit::module_functor</ref>&lt; <ref refid="ColliderBit__types_8hpp_1ade4399591a1439faab3ff177475b4c4a" kindref="member">ColliderBit::map_str_AnalysisLogLikes</ref> &gt; &amp;</type>
          <declname>the_functor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="48" column="6" bodyfile="ColliderBit/examples/solo.cpp" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="solo_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>ColliderBit Solo main program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ColliderBit/examples/solo.cpp" line="59" column="5" bodyfile="ColliderBit/examples/solo.cpp" bodystart="59" bodyend="428"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">///</highlight></codeline>
<codeline lineno="4"><highlight class="comment">///<sp/><sp/>ColliderBit<sp/>Solo:<sp/>an<sp/>event-based<sp/>LHC<sp/>recast</highlight></codeline>
<codeline lineno="5"><highlight class="comment">///<sp/><sp/>tool<sp/>using<sp/>the<sp/>GAMBIT<sp/>ColliderBit<sp/>module.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">///</highlight></codeline>
<codeline lineno="7"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">///</highlight></codeline>
<codeline lineno="9"><highlight class="comment">///<sp/><sp/>Authors<sp/>(add<sp/>name<sp/>and<sp/>date<sp/>if<sp/>you<sp/>modify):</highlight></codeline>
<codeline lineno="10"><highlight class="comment">///</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/><sp/>\author<sp/>Pat<sp/>Scott</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/><sp/>(p.scott@imperial.ac.uk)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///<sp/><sp/>\date<sp/>May<sp/>2019</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/><sp/>\author<sp/>Tomek<sp/>Procter</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///<sp/><sp/>(t.procter.1@research.gla.ac.uk)</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/><sp/>\date<sp/>November<sp/>2021</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="standalone__module_8hpp" kindref="compound">gambit/Elements/standalone_module.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ColliderBit__rollcall_8hpp" kindref="compound">gambit/ColliderBit/ColliderBit_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__functions_8hpp" kindref="compound">gambit/Utils/util_functions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Utils_2include_2gambit_2Utils_2cats_8hpp" kindref="compound">gambit/Utils/cats.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;gambit/Backends/backend_rollcall.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NULIKE_VERSION<sp/>&quot;1.0.9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NULIKE_SAFE_VERSION<sp/>1_0_9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RIVET_VERSION<sp/>&quot;3.1.5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RIVET_SAFE_VERSION<sp/>3_1_5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONTUR_VERSION<sp/>&quot;2.1.1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONTUR_SAFE_VERSION<sp/>2_1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FULLLIKES_VERSION<sp/>&quot;1.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FULLLIKES_SAFE_VERSION<sp/>1_0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ColliderBit::Functown;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">BackendIniBit::Functown;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="Backends_2scripts_2BOSS_2common__headers_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(Backends::nulike_,NULIKE_SAFE_VERSION)::Functown;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="Backends_2scripts_2BOSS_2common__headers_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(Backends::ATLAS_FullLikes_,FULLLIKES_SAFE_VERSION)::Functown;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="Backends_2scripts_2BOSS_2common__headers_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(Backends::Contur_,CONTUR_SAFE_VERSION)::Functown;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="Backends_2scripts_2BOSS_2common__headers_2cats_8hpp_1aa7c74d1cd12eae89a2d03f84ea2b8598" kindref="member">CAT</ref>(Backends::Rivet_,RIVET_SAFE_VERSION)::Functown;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>check<sp/>if<sp/>setting<sp/>in<sp/>CBS<sp/>yaml<sp/>and<sp/>then<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>It<sp/>would<sp/>be<sp/>nice<sp/>also<sp/>to<sp/>template<sp/>final<sp/>arg<sp/>as<sp/>Gambit::module_functor&lt;typename<sp/>T&gt;.<sp/>I<sp/>think<sp/>this<sp/>breaks<sp/>setOption<sp/>is<sp/>itself<sp/>a<sp/>templated<sp/>function?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tsetting&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>apply_setting_if_present(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;setting,<sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>&amp;<sp/>settings,<sp/><ref refid="classGambit_1_1module__functor" kindref="compound">Gambit::module_functor&lt;ColliderBit::map_str_AnalysisLogLikes&gt;</ref><sp/>&amp;the_functor)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="classGambit_1_1Options_1a2a05334b7abcabecbf1f6c59daa02471" kindref="member">hasKey</ref>(setting))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>the_functor.<ref refid="classGambit_1_1functor_1ab42c0faae1334f0e4aec38fa6dc2c3b2" kindref="member">setOption</ref>&lt;Tsetting&gt;(setting,<sp/>settings.getValue&lt;Tsetting&gt;(setting));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">///<sp/>ColliderBit<sp/>Solo<sp/>main<sp/>program</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gambit_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>number<sp/>of<sp/>command<sp/>line<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>user<sp/>how<sp/>to<sp/>run<sp/>the<sp/>program<sp/>and<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;your<sp/>CBS<sp/>yaml<sp/>file&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>nulike<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;nulike&quot;</highlight><highlight class="normal">)+NULIKE_VERSION])<sp/><ref refid="namespaceGambit_1a22f9590f97f034945dfabd86a0345ec9" kindref="member">backend_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;nulike<sp/>&quot;</highlight><highlight class="normal">)+NULIKE_VERSION+</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>Rivet<sp/>and<sp/>Contur<sp/>are<sp/>there:<sp/>permit<sp/>runs<sp/>without<sp/>that<sp/>don&apos;t<sp/>ask<sp/>for<sp/>them:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>conturWorks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rivetWorks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;Contur&quot;</highlight><highlight class="normal">)+CONTUR_VERSION])<sp/>{<sp/>conturWorks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;Rivet&quot;</highlight><highlight class="normal">)+RIVET_VERSION])<sp/>{<sp/>rivetWorks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>ATLAS<sp/>FullLikes<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>Backends::backendInfo().works[<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;ATLAS_FullLikes&quot;</highlight><highlight class="normal">)<sp/>+<sp/>FULLLIKES_VERSION])<sp/><ref refid="namespaceGambit_1a22f9590f97f034945dfabd86a0345ec9" kindref="member">backend_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;ATLAS_FullLikes<sp/>&quot;</highlight><highlight class="normal">)+FULLLIKES_VERSION</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>banner<sp/>(if<sp/>you<sp/>could<sp/>call<sp/>it<sp/>that)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;||<sp/><sp/><sp/><sp/>CBS:<sp/>ColliderBit<sp/>Solo<sp/><sp/><sp/><sp/><sp/>||&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;||<sp/><sp/>GAMBIT<sp/>Collider<sp/>Workgroup<sp/><sp/><sp/>||&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>input<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename_in<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>settings<sp/>in<sp/>the<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>YAML::Node<sp/>infile;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;str&gt;<sp/>analyses;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref><sp/>settings;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>up<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infile<sp/>=<sp/>YAML::LoadFile(filename_in);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>analyses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infile[</highlight><highlight class="stringliteral">&quot;analyses&quot;</highlight><highlight class="normal">])<sp/>analyses<sp/>=<sp/>infile[</highlight><highlight class="stringliteral">&quot;analyses&quot;</highlight><highlight class="normal">].as&lt;std::vector&lt;str&gt;&gt;();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Analyses<sp/>list<sp/>not<sp/>found<sp/>in<sp/>&quot;</highlight><highlight class="normal">+filename_in+</highlight><highlight class="stringliteral">&quot;.<sp/><sp/>Quitting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>other<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infile[</highlight><highlight class="stringliteral">&quot;settings&quot;</highlight><highlight class="normal">])<sp/>settings<sp/>=<sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>(infile[</highlight><highlight class="stringliteral">&quot;settings&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Settings<sp/>section<sp/>not<sp/>found<sp/>in<sp/>&quot;</highlight><highlight class="normal">+filename_in+</highlight><highlight class="stringliteral">&quot;.<sp/><sp/>Quitting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(YAML::Exception<sp/>&amp;e)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;YAML<sp/>error<sp/>in<sp/>&quot;</highlight><highlight class="normal">+filename_in+</highlight><highlight class="stringliteral">&quot;.\n(yaml-cpp<sp/>error:<sp/>&quot;</highlight><highlight class="normal">+std::string(e.what())+</highlight><highlight class="stringliteral">&quot;<sp/>)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>relevant<sp/>settings<sp/>into<sp/>appropriate<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>settings.getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Use<sp/>the<sp/>use_FullLikes<sp/>setting<sp/>to<sp/>allow<sp/>CBS<sp/>runs<sp/>without<sp/>having<sp/>ATLAS_FullLikes<sp/>installed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>use_FullLikes<sp/>=<sp/>settings.getValueOrDef&lt;bool&gt;(false,<sp/>&quot;use_FullLikes&quot;);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_lnpiln<sp/>=<sp/>settings.getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;use_lognormal_distribution_for_1d_systematic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jet_pt_min<sp/>=<sp/>settings.getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(10.0,<sp/></highlight><highlight class="stringliteral">&quot;jet_pt_min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref><sp/>event_filename<sp/>=<sp/>settings.getValue&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&gt;(</highlight><highlight class="stringliteral">&quot;event_file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>event_file_is_HepMC<sp/>=<sp/>(<sp/><sp/><sp/><ref refid="util__functions_8hpp_1ab50f1b4aef2cd4ab820abd9bcf416bc8" kindref="member">Gambit::Utils::endsWith</ref>(event_filename,<sp/></highlight><highlight class="stringliteral">&quot;.hepmc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="util__functions_8hpp_1ab50f1b4aef2cd4ab820abd9bcf416bc8" kindref="member">Gambit::Utils::endsWith</ref>(event_filename,<sp/></highlight><highlight class="stringliteral">&quot;.hepmc2&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="util__functions_8hpp_1ab50f1b4aef2cd4ab820abd9bcf416bc8" kindref="member">Gambit::Utils::endsWith</ref>(event_filename,<sp/></highlight><highlight class="stringliteral">&quot;.hepmc3&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>event_file_is_HepMC)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>event<sp/>file<sp/>format<sp/>in<sp/>&quot;</highlight><highlight class="normal">+event_filename+</highlight><highlight class="stringliteral">&quot;;<sp/>must<sp/>be<sp/>.hepmc.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>Rivet<sp/>&amp;<sp/>Contur<sp/>requested<sp/>and/or<sp/>enabled<sp/>then<sp/>extract<sp/>options<sp/>from<sp/>yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>withRivet;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>withContur;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref><sp/>rivet_settings;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>contur_options;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infile[</highlight><highlight class="stringliteral">&quot;rivet-settings&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withRivet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rivet_settings<sp/>=<sp/><ref refid="classGambit_1_1Options" kindref="compound">Options</ref>(infile[</highlight><highlight class="stringliteral">&quot;rivet-settings&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{withRivet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Should<sp/>we<sp/>just<sp/>assume<sp/>contur<sp/>with<sp/>no<sp/>options<sp/>if<sp/>rivet<sp/>settings<sp/>are<sp/>specified<sp/>and<sp/>Contur<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infile[</highlight><highlight class="stringliteral">&quot;contur-settings&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withContur<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contur_options<sp/>=<sp/>infile[</highlight><highlight class="stringliteral">&quot;contur-settings&quot;</highlight><highlight class="normal">].as&lt;std::vector&lt;std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withContur<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Throw<sp/>out<sp/>cases<sp/>where<sp/>things<sp/>won&apos;t<sp/>work,<sp/>with<sp/>informative<sp/>errors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withContur<sp/>&amp;&amp;<sp/>!withRivet)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>run<sp/>contur<sp/>without<sp/>rivet.<sp/>Try<sp/>adding<sp/>a<sp/>rivet-settings<sp/>section<sp/>to<sp/>your<sp/>yaml-file.<sp/>Quitting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!withContur<sp/>&amp;&amp;<sp/>withRivet)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>run<sp/>rivet<sp/>without<sp/>contur.<sp/>Try<sp/>adding<sp/>a<sp/>contur-settings<sp/>section<sp/>to<sp/>your<sp/>yaml-file.<sp/>Quitting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withContur<sp/>&amp;&amp;<sp/>!conturWorks)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a22f9590f97f034945dfabd86a0345ec9" kindref="member">backend_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;yaml<sp/>file<sp/>requests<sp/>contur,<sp/>but<sp/>Contur<sp/>&quot;</highlight><highlight class="normal">)+CONTUR_VERSION+</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withRivet<sp/>&amp;&amp;<sp/>!rivetWorks)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a22f9590f97f034945dfabd86a0345ec9" kindref="member">backend_error</ref>().<ref refid="classGambit_1_1exception_1ab12c6189c744fdc119c6377d288ae961" kindref="member">raise</ref>(LOCAL_INFO,<sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&quot;yaml<sp/>file<sp/>requests<sp/>rivet,<sp/>but<sp/>Rivet<sp/>&quot;</highlight><highlight class="normal">)+RIVET_VERSION+</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>missing!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withContur<sp/>&amp;&amp;<sp/>withRivet)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok,<sp/>we&apos;re<sp/>good<sp/>to<sp/>go<sp/>with<sp/>Rivet<sp/>and<sp/>Contur,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Proper<sp/>citation<sp/>message?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nUsing<sp/>RIVET<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>RIVET_VERSION<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>CONTUR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONTUR_VERSION<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>this<sp/>run.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(YAML::Exception<sp/>&amp;e)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;YAML<sp/>error<sp/>in<sp/>&quot;</highlight><highlight class="normal">+filename_in+</highlight><highlight class="stringliteral">&quot;.\n(yaml-cpp<sp/>error:<sp/>&quot;</highlight><highlight class="normal">+std::string(e.what())+</highlight><highlight class="stringliteral">&quot;<sp/>)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>the<sp/>event<sp/>file<sp/>reader<sp/>according<sp/>to<sp/>file<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>HepMC&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>event_filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>getEvent<sp/>=<sp/><ref refid="getHepMCEvent_8cpp_1a5298dfa93d25ab471bcaf29149c0c435" kindref="member">getHepMCEvent</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>convertEvent<sp/>=<sp/>convertHepMCEvent_HEPUtils;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>logs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>logger().set_log_debug_messages(debug);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a6afc90c5723abe5408be8b03d495bf4c" kindref="member">initialise_standalone_logs</ref>(</highlight><highlight class="stringliteral">&quot;CBS_logs/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>logger()&lt;&lt;</highlight><highlight class="stringliteral">&quot;Running<sp/>CBS&quot;</highlight><highlight class="normal">&lt;&lt;LogTags::info&lt;&lt;<ref refid="namespaceGambit_1aed4726aee167bc7cf497e993d6318514" kindref="member">EOM</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>random<sp/>number<sp/>generator,<sp/>using<sp/>a<sp/>hardware<sp/>seed<sp/>if<sp/>no<sp/>seed<sp/>is<sp/>given<sp/>in<sp/>the<sp/>input<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed<sp/>=<sp/>settings.getValueOrDef&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(-1,<sp/></highlight><highlight class="stringliteral">&quot;seed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Random::create_rng_engine(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,<sp/>seed);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>options<sp/>to<sp/>the<sp/>main<sp/>event<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>YAML::Node<sp/>CBS(infile[</highlight><highlight class="stringliteral">&quot;settings&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>CBS[</highlight><highlight class="stringliteral">&quot;analyses&quot;</highlight><highlight class="normal">]<sp/>=<sp/>analyses;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>CBS[</highlight><highlight class="stringliteral">&quot;min_nEvents&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)(1000);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>CBS[</highlight><highlight class="stringliteral">&quot;max_nEvents&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)(1000000000);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1ac3e5caa6762666779fa7980190de2207" kindref="member">operateLHCLoop</ref>.setOption&lt;YAML::Node&gt;(</highlight><highlight class="stringliteral">&quot;CBS&quot;</highlight><highlight class="normal">,<sp/>CBS);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1ac3e5caa6762666779fa7980190de2207" kindref="member">operateLHCLoop</ref>.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;silenceLoop&quot;</highlight><highlight class="normal">,<sp/>not<sp/>debug);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>the<sp/>filename<sp/>and<sp/>the<sp/>jet<sp/>pt<sp/>cutoff<sp/>to<sp/>the<sp/>HepMC<sp/>reader/HEPUtils<sp/>converter<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>getEvent.setOption&lt;<ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&gt;(</highlight><highlight class="stringliteral">&quot;hepmc_filename&quot;</highlight><highlight class="normal">,<sp/>event_filename);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>convertEvent.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;jet_pt_min&quot;</highlight><highlight class="normal">,<sp/>jet_pt_min);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>options<sp/>to<sp/>the<sp/>cross-section<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="classGambit_1_1Options_1a2a05334b7abcabecbf1f6c59daa02471" kindref="member">hasKey</ref>(</highlight><highlight class="stringliteral">&quot;cross_section_pb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_pb&quot;</highlight><highlight class="normal">,<sp/>settings.getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_pb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="classGambit_1_1Options_1a2a05334b7abcabecbf1f6c59daa02471" kindref="member">hasKey</ref>(</highlight><highlight class="stringliteral">&quot;cross_section_fractional_uncert&quot;</highlight><highlight class="normal">))<sp/>{<sp/><ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_fractional_uncert&quot;</highlight><highlight class="normal">,<sp/>settings.getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_fractional_uncert&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_uncert_pb&quot;</highlight><highlight class="normal">,<sp/>settings.getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_uncert_pb&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>&lt;--<sp/>must<sp/>have<sp/>option<sp/>&quot;cross_section_fb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_fb&quot;</highlight><highlight class="normal">,<sp/>settings.getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_fb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="classGambit_1_1Options_1a2a05334b7abcabecbf1f6c59daa02471" kindref="member">hasKey</ref>(</highlight><highlight class="stringliteral">&quot;cross_section_fractional_uncert&quot;</highlight><highlight class="normal">))<sp/>{<sp/><ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_fractional_uncert&quot;</highlight><highlight class="normal">,<sp/>settings.getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_fractional_uncert&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.setOption&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_uncert_fb&quot;</highlight><highlight class="normal">,<sp/>settings.getValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;cross_section_uncert_fb&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>options<sp/>to<sp/>the<sp/>likelihood<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>I&apos;m<sp/>not<sp/>specifying<sp/>the<sp/>defaults<sp/>here.<sp/>I&apos;ll<sp/>add<sp/>the<sp/>argument<sp/>only<sp/>if<sp/>the<sp/>user<sp/>supplies<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ColliderBit<sp/>can<sp/>then<sp/>fall<sp/>back<sp/>to<sp/>its<sp/>defaults<sp/>if<sp/>nothing<sp/>is<sp/>supplied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;use_covariances&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;use_marginalising&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;combine_SRs_without_covariances&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_prof_initstep&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>0.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_prof_convtol&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>0.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_prof_maxsteps&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_prof_convacc&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>0.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_prof_simplexsize&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>1e-5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_prof_method&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_marg_convthres_abs&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>0.05</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_marg_convthres_rel&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>0.05</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;long&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_marg_nsamples_start&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>1000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;nuisance_marg_nulike1sr&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calc_noerr_loglikes<sp/>=<sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;calc_noerr_loglikes&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calc_expected_loglikes=<sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;calc_expected_loglikes&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calc_expected_noerr_loglikes<sp/>=<sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;calc_expected_noerr_loglikes&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calc_scaledsignal_loglikes<sp/>=<sp/>apply_setting_if_present&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;calc_scaledsignal_loglikes&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_setting_if_present&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;signal_scalefactor&quot;</highlight><highlight class="normal">,<sp/>settings,<sp/>calc_LHC_LogLikes_full);</highlight><highlight class="comment">//Default<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Rivet/Contur,<sp/>set<sp/>Rivet/Contur<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withRivet)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;drop_YODA_file&quot;</highlight><highlight class="normal">,<sp/>rivet_settings.getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;drop_YODA_file&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.setOption&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;runningStandalone&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.setOption&lt;std::vector&lt;std::string&gt;&gt;(</highlight><highlight class="stringliteral">&quot;analyses&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rivet_settings.getValue&lt;std::vector&lt;std::string&gt;&gt;(</highlight><highlight class="stringliteral">&quot;analyses&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.setOption&lt;std::vector&lt;std::string&gt;&gt;(</highlight><highlight class="stringliteral">&quot;exclude_analyses&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rivet_settings.getValueOrDef&lt;std::vector&lt;std::string&gt;&gt;({},</highlight><highlight class="stringliteral">&quot;exclude_analyses&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>contur_options<sp/>=<sp/>infile[</highlight><highlight class="stringliteral">&quot;contur-settings&quot;</highlight><highlight class="normal">].as&lt;std::vector&lt;std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_from_stream.setOption(</highlight><highlight class="stringliteral">&quot;contur_options&quot;</highlight><highlight class="normal">,<sp/>contur_options);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>ColliderBit<sp/>dependencies<sp/>and<sp/>backend<sp/>requirements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>convertEvent.resolveDependency(&amp;getEvent);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a5d9da53652210cd01275f3b77f8a2206" kindref="member">calc_combined_LHC_LogLike</ref>.resolveDependency(&amp;calc_LHC_LogLikes_full);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a5d9da53652210cd01275f3b77f8a2206" kindref="member">calc_combined_LHC_LogLike</ref>.resolveDependency(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1aae752d88dc8febc660c69c3b7497bb37" kindref="member">get_LHC_LogLike_per_analysis</ref>.resolveDependency(&amp;calc_LHC_LogLikes_full);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.resolveDependency(&amp;CollectAnalyses);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.resolveDependency(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.resolveBackendReq(use_lnpiln<sp/>?<sp/>&amp;nulike_lnpiln<sp/>:<sp/>&amp;nulike_lnpin);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.resolveBackendReq(&amp;FullLikes_FileExists);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.resolveBackendReq(&amp;FullLikes_ReadIn);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.resolveBackendReq(&amp;FullLikes_Evaluate);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1af5bd300bc1e749fb377602573b391d34" kindref="member">CollectAnalyses</ref>.resolveDependency(&amp;runATLASAnalyses);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1af5bd300bc1e749fb377602573b391d34" kindref="member">CollectAnalyses</ref>.resolveDependency(&amp;runCMSAnalyses);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1af5bd300bc1e749fb377602573b391d34" kindref="member">CollectAnalyses</ref>.resolveDependency(&amp;runIdentityAnalyses);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>runATLASAnalyses.resolveDependency(&amp;getATLASAnalysisContainer);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>runATLASAnalyses.resolveDependency(&amp;smearEventATLAS);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>runCMSAnalyses.resolveDependency(&amp;getCMSAnalysisContainer);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>runCMSAnalyses.resolveDependency(&amp;smearEventCMS);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>runIdentityAnalyses.resolveDependency(&amp;getIdentityAnalysisContainer);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>runIdentityAnalyses.resolveDependency(&amp;copyEvent);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>getATLASAnalysisContainer.resolveDependency(&amp;getYAMLCrossSection);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>getCMSAnalysisContainer.resolveDependency(&amp;getYAMLCrossSection);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>getIdentityAnalysisContainer.resolveDependency(&amp;getYAMLCrossSection);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>smearEventATLAS.resolveDependency(&amp;getBuckFastATLAS);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>smearEventATLAS.resolveDependency(&amp;convertEvent);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>smearEventCMS.resolveDependency(&amp;getBuckFastCMS);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>smearEventCMS.resolveDependency(&amp;convertEvent);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>copyEvent.resolveDependency(&amp;getBuckFastIdentity);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>copyEvent.resolveDependency(&amp;convertEvent);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>using<sp/>Rivet/Contur,<sp/>resolve<sp/>Rivet/Contur<sp/>dependencies:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withRivet)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.resolveDependency(&amp;getEvent);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.resolveBackendReq(&amp;Contur_get_analyses_from_beam);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_from_stream.resolveDependency(&amp;Rivet_measurements);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_from_stream.resolveBackendReq(&amp;Contur_LogLike_from_stream);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_LogLike.resolveDependency(&amp;Contur_LHC_measurements_from_stream);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_LogLike_perPool.resolveDependency(&amp;Contur_LHC_measurements_from_stream);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_histotags_perPool.resolveDependency(&amp;Contur_LHC_measurements_from_stream);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>loop<sp/>manager<sp/>for<sp/>ColliderBit<sp/>event<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>getEvent.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>convertEvent.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getBuckFast_8cpp_1adb6cf55a989324b29f8d1d5605712571" kindref="member">getBuckFastATLAS</ref>.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getBuckFast_8cpp_1a081bd4307fbc73cdf6000e942fe3b537" kindref="member">getBuckFastCMS</ref>.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getBuckFast_8cpp_1a2cba3802cdcd2c9ca425eb09d6a71f8d" kindref="member">getBuckFastIdentity</ref>.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>getATLASAnalysisContainer.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>getCMSAnalysisContainer.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>getIdentityAnalysisContainer.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>smearEventATLAS.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>smearEventCMS.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>copyEvent.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getxsec_8cpp_1a785b9f67e6f3febfe0edd0e609fa3064" kindref="member">getYAMLCrossSection</ref>.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>runATLASAnalyses.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>runCMSAnalyses.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>runIdentityAnalyses.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;functor*&gt;<sp/>nested_functions<sp/>=<sp/>initVector&lt;functor*&gt;(&amp;getEvent,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;convertEvent,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getBuckFastATLAS,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getBuckFastCMS,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getBuckFastIdentity,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getYAMLCrossSection,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getATLASAnalysisContainer,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getCMSAnalysisContainer,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;getIdentityAnalysisContainer,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;smearEventATLAS,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;smearEventCMS,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;copyEvent,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;runATLASAnalyses,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;runCMSAnalyses,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;runIdentityAnalyses);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>using<sp/>contur<sp/>and<sp/>rivet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withRivet)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rivet_measurements.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_from_stream.resolveLoopManager(&amp;operateLHCLoop);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nested_functions.push_back(&amp;Rivet_measurements);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nested_functions.push_back(&amp;Contur_LHC_measurements_from_stream);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1ac3e5caa6762666779fa7980190de2207" kindref="member">operateLHCLoop</ref>.setNestedList(nested_functions);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>initialisation<sp/>function<sp/>for<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>CAT_3(nulike_,NULIKE_SAFE_VERSION,_init).reset_and_calculate();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withRivet)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CAT_3(Contur_,<sp/>CONTUR_SAFE_VERSION,_init).reset_and_calculate();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CAT_3(Rivet_,<sp/>RIVET_SAFE_VERSION,_init).reset_and_calculate();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>the<sp/>detector<sp/>sim<sp/>and<sp/>selected<sp/>analyses<sp/>on<sp/>all<sp/>the<sp/>events<sp/>read<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1ac3e5caa6762666779fa7980190de2207" kindref="member">operateLHCLoop</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ColliderBit__eventloop_8cpp_1af5bd300bc1e749fb377602573b391d34" kindref="member">CollectAnalyses</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1aae752d88dc8febc660c69c3b7497bb37" kindref="member">get_LHC_LogLike_per_analysis</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LHC__likelihoods_8cpp_1a5d9da53652210cd01275f3b77f8a2206" kindref="member">calc_combined_LHC_LogLike</ref>.reset_and_calculate();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withContur)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_LogLike.reset_and_calculate();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_LogLike_perPool.reset_and_calculate();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Contur_LHC_measurements_histotags_perPool.reset_and_calculate();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>and<sp/>print<sp/>the<sp/>predicted<sp/>+<sp/>observed<sp/>counts<sp/>and<sp/>likelihoods<sp/>for<sp/>the<sp/>individual<sp/>SRs<sp/>and<sp/>analyses,<sp/>as<sp/>well<sp/>as<sp/>the<sp/>total<sp/>likelihood.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_events<sp/>=<sp/><ref refid="ColliderBit__eventloop_8cpp_1ac3e5caa6762666779fa7980190de2207" kindref="member">operateLHCLoop</ref>(0).event_count.at(</highlight><highlight class="stringliteral">&quot;CBS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>summary_line;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>analysis<sp/>=<sp/>0;<sp/>analysis<sp/>&lt;<sp/><ref refid="ColliderBit__eventloop_8cpp_1af5bd300bc1e749fb377602573b391d34" kindref="member">CollectAnalyses</ref>(0).size();<sp/>++analysis)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1ColliderBit_1_1AnalysisData" kindref="compound">Gambit::ColliderBit::AnalysisData</ref>&amp;<sp/>adata<sp/>=<sp/>*(<ref refid="ColliderBit__eventloop_8cpp_1af5bd300bc1e749fb377602573b391d34" kindref="member">CollectAnalyses</ref>(0).at(analysis));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1aff3f41b9e6112a6d471a03b2df1f2427" kindref="member">str</ref>&amp;<sp/>analysis_name<sp/>=<sp/>adata.<ref refid="structGambit_1_1ColliderBit_1_1AnalysisData_1ad3bbb73eef8db0bf21e758f0a03e01aa" kindref="member">analysis_name</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1ColliderBit_1_1AnalysisLogLikes" kindref="compound">Gambit::ColliderBit::AnalysisLogLikes</ref>&amp;<sp/>analysis_loglikes<sp/>=<sp/><ref refid="LHC__likelihoods_8cpp_1a7b9ac13e428b4a93854d22ebd9ea7470" kindref="member">calc_LHC_LogLikes_full</ref>(0).at(analysis_name);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sr_index<sp/>=<sp/>0;<sp/>sr_index<sp/>&lt;<sp/>adata.<ref refid="structGambit_1_1ColliderBit_1_1AnalysisData_1a2e008d78f65df55af79ad0749f772e29" kindref="member">size</ref>();<sp/>++sr_index)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData" kindref="compound">Gambit::ColliderBit::SignalRegionData</ref><sp/>srData<sp/>=<sp/>adata[sr_index];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>combined_s_uncertainty<sp/>=<sp/>srData.calc_n_sig_scaled_err();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>combined_bg_uncertainty<sp/>=<sp/>srData.<ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData_1a6c40cf37895938463cbb45dcd7ac5b86" kindref="member">n_bkg_err</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Signal<sp/>region<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>srData.<ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData_1a398a8f3147eb9c471547ffb201213f57" kindref="member">sr_label</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(SR<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sr_index<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>Observed<sp/>events:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>srData.<ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData_1a4dbd9594096938c904447fb4c2cd2c36" kindref="member">n_obs</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>SM<sp/>prediction:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>srData.<ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData_1a7c6cd1a69af381ec7e27577a2004ee29" kindref="member">n_bkg</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>+/-<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>combined_bg_uncertainty<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>Signal<sp/>prediction:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>srData.<ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData_1afd8408153cedd1beb179b582cc632dcc" kindref="member">n_sig_scaled</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>+/-<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>combined_s_uncertainty<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>Log-likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.sr_loglikes.at(sr_index)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_noerr_loglikes)<sp/>{summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>No-Error<sp/>Log-Likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.alt_sr_loglikes.at(</highlight><highlight class="stringliteral">&quot;noerr&quot;</highlight><highlight class="normal">).at(sr_index)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_expected_loglikes)<sp/>{summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>Expected<sp/>Log-Likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.alt_sr_loglikes.at(</highlight><highlight class="stringliteral">&quot;expected&quot;</highlight><highlight class="normal">).at(sr_index)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_expected_noerr_loglikes)<sp/>{summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>Expected<sp/>No-Error<sp/>Log-Likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.alt_sr_loglikes.at(</highlight><highlight class="stringliteral">&quot;expected_noerr&quot;</highlight><highlight class="normal">).at(sr_index)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_scaledsignal_loglikes)<sp/>{summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>Scaled<sp/>Signal<sp/>Log-Likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.alt_sr_loglikes.at(</highlight><highlight class="stringliteral">&quot;scaledsignal&quot;</highlight><highlight class="normal">).at(sr_index)<sp/>&lt;&lt;<sp/>std::endl;}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Selected<sp/>signal<sp/>region:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.combination_sr_label<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Total<sp/>log-likelihood<sp/>for<sp/>analysis:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>analysis_loglikes.combination_loglike<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withContur)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nContur<sp/>results:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>Contur<sp/>Log-Likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Contur_LHC_measurements_LogLike(0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1a98f19afeabdc4fcaa456c944cc19a50c" kindref="member">map_str_dbl</ref><sp/>pool_LLRs<sp/>=<sp/>Contur_LHC_measurements_LogLike_perPool(0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1ae96b932df1a511063b912a23631f260b" kindref="member">map_str_str</ref><sp/>pool_info<sp/>=<sp/>Contur_LHC_measurements_histotags_perPool(0);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>pool<sp/>:<sp/>pool_LLRs){</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary_line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tPool<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pool.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\t\tLog-likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\t\tDominant<sp/>measurement:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pool_info[pool.first]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loglike<sp/>=<sp/><ref refid="LHC__likelihoods_8cpp_1a5d9da53652210cd01275f3b77f8a2206" kindref="member">calc_combined_LHC_LogLike</ref>(0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>cout.precision(5);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>and<sp/>analysed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n_events<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>events<sp/>from<sp/>HepMC<sp/>file.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Analysis<sp/>details:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>summary_line.str()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Mention<sp/>LHCb<sp/>as<sp/>contur<sp/>can<sp/>include<sp/>an<sp/>LHCb<sp/>pool?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>std::scientific<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>combined<sp/>ATLAS+CMS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(withContur?</highlight><highlight class="stringliteral">&quot;<sp/>analysis<sp/>and<sp/>searches<sp/>&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;log-likelihood:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>loglike<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>more<sp/>to<sp/>see<sp/>here<sp/>folks,<sp/>go<sp/>home.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CBS<sp/>has<sp/>exited<sp/>with<sp/>fatal<sp/>exception:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finished,<sp/>but<sp/>an<sp/>exception<sp/>was<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="ColliderBit/examples/solo.cpp"/>
  </compounddef>
</doxygen>
