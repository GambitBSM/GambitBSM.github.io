<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code Reference on</title><link>https://gambitbsm.github.io/documentation/code/</link><description>Recent content in Code Reference on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gambitbsm.github.io/documentation/code/index.xml" rel="self" type="application/rss+xml"/><item><title>Classes</title><link>https://gambitbsm.github.io/documentation/code/index_classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/index_classes/</guid><description>Classes class AbstractBase
class AdvanceDevs
namespace Functown
class BasicDevs
namespace CAT
class Cholesky
struct Chunk
Struct to describe start and end indices for a chunk of data. struct ChunkEqual
struct ChunkHash
struct ChunkLess
namespace Functown
namespace Functown
namespace Functown
namespace Eigen
namespace Functown
class ExponDev
namespace FJNS &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace PseudoJet
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace Functown
namespace Gambit
TODO: see if we can use this one: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;class ASCIIdictReader
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;class ASCIItableReader
namespace AlterBBN_2_2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;struct errorparam
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;struct relicparam</description></item><item><title>Files</title><link>https://gambitbsm.github.io/documentation/code/index_files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/index_files/</guid><description>Files dir Backends dir examples &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file examples/libFarrayTest.f90
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file examples/libMathematicaTest.m
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file examples/libfirst.cpp
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file examples/libfortran.f90
dir libsecond dir 1.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file 1.0/libsecond_1_0.py
dir 1.1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file 1.1/libsecond_1_1.py
dir 1.2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file 1.2/libsecond_1_2.py
dir libthird dir 1.0 dir libthird_1_0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_0/1.0/libthird_1_0/main.py
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_0/1.0/libthird_1_0/sub_module.py
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_0/examples/libthird/1.0/libthird_1_0/__init__.py
dir 1.1 dir libthird_1_1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_1/1.1/libthird_1_1/main.py
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_1/1.1/libthird_1_1/sub_module.py
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_1/examples/libthird/1.1/libthird_1_1/__init__.py
dir 1.2 dir libthird_1_2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_2/1.2/libthird_1_2/main.py
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_2/1.2/libthird_1_2/sub_module.py
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file libthird_1_2/examples/libthird/1.2/libthird_1_2/__init__.py
dir salami dir 0.1.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file 0.1.0/salami_gambit.py
dir xsecBE dir 1.0.2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file 1.</description></item><item><title>Pages</title><link>https://gambitbsm.github.io/documentation/code/index_pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/index_pages/</guid><description>Pages page Deprecated List
page Todo List
Updated on 2022-09-08 at 01:05:24 +0000</description></item><item><title>Namespaces</title><link>https://gambitbsm.github.io/documentation/code/index_namespaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/index_namespaces/</guid><description>Namespaces namespace Functown
namespace CAT
namespace Functown
namespace Functown
namespace Functown
namespace Eigen
namespace Functown
namespace FJNS &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace PseudoJet
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace Functown
namespace Gambit
TODO: see if we can use this one: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace AlterBBN_2_2
namespace Backends &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace AlterBBN_2_2
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace HepLike_1_2
namespace Pythia_8_212 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace Pythia8
namespace gm2calc_1_2_0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace gm2calc
namespace gm2calc_1_3_0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace gm2calc
namespace vevacious_1_0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace VevaciousPlusPlus
namespace ColliderBit &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace ATLAS
ATLAS-specific efficiency and smearing functions for super fast detector simulation. &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace CMS</description></item><item><title>class AbstractBase</title><link>https://gambitbsm.github.io/documentation/code/classes/classabstractbase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/classes/classabstractbase/</guid><description>class AbstractBase [No description available]
Public Functions Name virtual ~AbstractBase() virtual ~AbstractBase() Public Functions Documentation function ~AbstractBase inline virtual ~AbstractBase() function ~AbstractBase inline virtual ~AbstractBase() Updated on 2022-09-08 at 01:05:15 +0000</description></item><item><title>class AdvanceDevs</title><link>https://gambitbsm.github.io/documentation/code/classes/classadvancedevs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/classes/classadvancedevs/</guid><description>class AdvanceDevs [No description available]
Inherits from BasicDevs, Cholesky, BasicDevs, Cholesky, Ran
Inherited by RandomPlane, RandomPlane
Public Functions Name AdvanceDevs(int nin, double din, unsigned long long iin) AdvanceDevs(double ** vvar, const int nin, double din, unsigned long long iin) void MultiDev(double * pin, double * p0) void MultiDev(double ** cvar, double * pin, double * p0) void EllipseDev(double * pin, double * p0, double fin) void EllipseDev(double ** cvar, double * pin, double * p0, double fin) AdvanceDevs(int nin, double din, unsigned long long iin) AdvanceDevs(double ** vvar, const int nin, double din, unsigned long long iin) double MultiDevDist() double MultiDevPDF(double r, int dim) void MultiDev(double * pin, double * p0) void MultiDev(double ** cvar, double * pin, double * p0) void EllipseDev(double * pin, double * p0, double fin) void EllipseDev(double ** cvar, double * pin, double * p0, double fin) Additional inherited members Public Functions inherited from BasicDevs</description></item><item><title>class asymm_mt2_lester_bisect</title><link>https://gambitbsm.github.io/documentation/code/classes/classasymm__mt2__lester__bisect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/classes/classasymm__mt2__lester__bisect/</guid><description>class asymm_mt2_lester_bisect [No description available]
Public Functions Name double get_mT2(const double mVis1, const double pxVis1, const double pyVis1, const double mVis2, const double pxVis2, const double pyVis2, const double pxMiss, const double pyMiss, const double mInvis1, const double mInvis2, const double desiredPrecisionOnMT2 =0, const bool useDeciSectionsInitially =true) void disableCopyrightMessage(const bool printIfFirst =false) double get_mT2_Sq(const double mVis1, const double pxVis1, const double pyVis1, const double mVis2, const double pxVis2, const double pyVis2, const double pxMiss, const double pyMiss, const double mInvis1, const double mInvis2, const double desiredPrecisionOnMT2 =0, const bool useDeciSectionsInitially =true) Public Attributes Name const int MT2_ERROR Public Functions Documentation function get_mT2 static inline double get_mT2( const double mVis1, const double pxVis1, const double pyVis1, const double mVis2, const double pxVis2, const double pyVis2, const double pxMiss, const double pyMiss, const double mInvis1, const double mInvis2, const double desiredPrecisionOnMT2 =0, const bool useDeciSectionsInitially =true ) function disableCopyrightMessage static inline void disableCopyrightMessage( const bool printIfFirst =false ) function get_mT2_Sq static inline double get_mT2_Sq( const double mVis1, const double pxVis1, const double pyVis1, const double mVis2, const double pxVis2, const double pyVis2, const double pxMiss, const double pyMiss, const double mInvis1, const double mInvis2, const double desiredPrecisionOnMT2 =0, const bool useDeciSectionsInitially =true ) Public Attributes Documentation variable MT2_ERROR static const int MT2_ERROR =-1; Updated on 2022-09-08 at 01:05:15 +0000</description></item><item><title>class BasicDevs</title><link>https://gambitbsm.github.io/documentation/code/classes/classbasicdevs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/classes/classbasicdevs/</guid><description>class BasicDevs [No description available]
Inherits from Ran, Ran
Inherited by AdvanceDevs, AdvanceDevs, RandomBasis, RandomBasis
Public Functions Name BasicDevs(unsigned long long i) double Dev() double ExpDev() BasicDevs(unsigned long long i) double Dev() double ExpDev() Additional inherited members Public Functions inherited from Ran
Name Ran(unsigned long long int ) double Doub() Ran(unsigned long long int ) double Doub() Public Functions inherited from Ran
Name Ran(unsigned long long int ) double Doub() Ran(unsigned long long int ) double Doub() Public Functions Documentation function BasicDevs inline BasicDevs( unsigned long long i ) function Dev inline double Dev() function ExpDev inline double ExpDev() function BasicDevs inline BasicDevs( unsigned long long i ) function Dev inline double Dev() function ExpDev inline double ExpDev() Updated on 2022-09-08 at 01:05:15 +0000</description></item><item><title>class Cholesky</title><link>https://gambitbsm.github.io/documentation/code/classes/classcholesky/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/classes/classcholesky/</guid><description>class Cholesky [No description available]
Inherited by AdvanceDevs, AdvanceDevs, MultiNormDev, MultiNormDev, MultiNormalDev, MultiNormalDev, TransformRandomBasis, TransformRandomBasis
Public Functions Name Cholesky(const int nin) Cholesky(double ** a, const int nin) bool EnterMatM(double ** a, const int min) bool EnterMat(double ** a) void EnterMat(double ** a, int nin) void ElMult(double * y, double * b) void ElMult(double * y) void Solve(double * b, double * x) double Square(double * y, double * y0) double Square(double * y, double * y0, int * map) void Inverse(double ** ainv) double DetSqrt() ~Cholesky() Cholesky(const int nin) Cholesky(double ** a, const int nin) bool EnterMatM(double ** a, const int min) bool EnterMat(double ** a) bool EnterMat(const std::vector&amp;lt; std::vector&amp;lt; double &amp;gt; &amp;gt; &amp;amp; a) void EnterMat(double ** a, int nin) void ElMult(double * y, double * b) void ElMult(double * y) void Solve(double * b, double * x) double Square(double * y, double * y0) double Square(double * y, double * y0, int * map) void Inverse(double ** ainv) double DetSqrt() ~Cholesky() Protected Attributes Name int num Public Functions Documentation function Cholesky inline Cholesky( const int nin ) function Cholesky inline Cholesky( double ** a, const int nin ) function EnterMatM inline bool EnterMatM( double ** a, const int min ) function EnterMat inline bool EnterMat( double ** a ) function EnterMat inline void EnterMat( double ** a, int nin ) function ElMult inline void ElMult( double * y, double * b ) function ElMult inline void ElMult( double * y ) function Solve inline void Solve( double * b, double * x ) function Square inline double Square( double * y, double * y0 ) function Square inline double Square( double * y, double * y0, int * map ) function Inverse inline void Inverse( double ** ainv ) function DetSqrt inline double DetSqrt() function ~Cholesky inline ~Cholesky() function Cholesky inline Cholesky( const int nin ) function Cholesky inline Cholesky( double ** a, const int nin ) function EnterMatM inline bool EnterMatM( double ** a, const int min ) function EnterMat inline bool EnterMat( double ** a ) function EnterMat inline bool EnterMat( const std::vector&amp;lt; std::vector&amp;lt; double &amp;gt; &amp;gt; &amp;amp; a ) function EnterMat inline void EnterMat( double ** a, int nin ) function ElMult inline void ElMult( double * y, double * b ) function ElMult inline void ElMult( double * y ) function Solve inline void Solve( double * b, double * x ) function Square inline double Square( double * y, double * y0 ) function Square inline double Square( double * y, double * y0, int * map ) function Inverse inline void Inverse( double ** ainv ) function DetSqrt inline double DetSqrt() function ~Cholesky inline ~Cholesky() Protected Attributes Documentation variable num int num; Updated on 2022-09-08 at 01:05:15 +0000</description></item><item><title>class daFunk::Bottle</title><link>https://gambitbsm.github.io/documentation/code/classes/classdafunk_1_1bottle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gambitbsm.github.io/documentation/code/classes/classdafunk_1_1bottle/</guid><description>class daFunk::Bottle [No description available]
Inherits from daFunk::FunkBase, boost::enable_shared_from_this&amp;lt; FunkBase &amp;gt;
Public Functions Name Bottle(Funk f, std::string msg) virtual double value(const std::vector&amp;lt; double &amp;gt; &amp;amp; data, size_t bindID) Additional inherited members Public Functions inherited from daFunk::FunkBase
Name FunkBase() virtual ~FunkBase() template &amp;lt;typename&amp;hellip; Args&amp;gt; Funk set(std::string arg, Funk g, Args&amp;hellip; args) template &amp;lt;typename&amp;hellip; Args&amp;gt; Funk set(std::string arg, double x, Args&amp;hellip; args) template &amp;lt;typename&amp;hellip; Args&amp;gt; Funk set(std::string arg, std::string arg1, Args&amp;hellip; args) template &amp;lt;typename&amp;hellip; Args&amp;gt; Funk set() template &amp;lt;typename&amp;hellip; Args&amp;gt; shared_ptr&amp;lt; FunkBound &amp;gt; bind(Args&amp;hellip; args) const std::vector&amp;lt; std::string &amp;gt; &amp;amp; getArgs() std::size_t getNArgs() bool hasArg(std::string arg) bool hasArgs() Funk help() template &amp;lt;typename&amp;hellip; Args&amp;gt; bool assert_args(Args&amp;hellip; args) virtual void resolve(std::map&amp;lt; std::string, size_t &amp;gt; datamap, size_t &amp;amp; datalen, size_t bindID, std::map&amp;lt; std::string, size_t &amp;gt; &amp;amp; argmap) Singularities getSingl() Funk set_singularity(std::string arg, double pos, double width) Funk print(std::string arg) template &amp;lt;typename&amp;hellip; Args&amp;gt; shared_ptr&amp;lt; FunkIntegrate_gsl1d &amp;gt; gsl_integration(Args&amp;hellip; args) PlainPtrs1 plain(std::string arg1) PlainPtrs2 plain(std::string arg1, std::string arg2) PlainPtrs3 plain(std::string arg1, std::string arg2, std::string arg3) PlainPtrs4 plain(std::string arg1, std::string arg2, std::string arg3, std::string arg4) template &amp;lt;typename T &amp;gt; PlainPtr1 plain(std::string arg1) template &amp;lt;typename T &amp;gt; PlainPtr2 plain(std::string arg1, std::string arg2) template &amp;lt;typename T &amp;gt; PlainPtr3 plain(std::string arg1, std::string arg2, std::string arg3) template &amp;lt;typename T &amp;gt; PlainPtr4 plain(std::string arg1, std::string arg2, std::string arg3, std::string arg4) Funk set() Protected Attributes inherited from daFunk::FunkBase</description></item></channel></rss>