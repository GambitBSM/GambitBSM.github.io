<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Installation on</title><link>https://gambitbsm.org/documentation/installation/</link><description>Recent content in Installation on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 01 Jul 2022 22:31:46 +0100</lastBuildDate><atom:link href="https://gambitbsm.org/documentation/installation/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://gambitbsm.org/documentation/installation/introduction/</link><pubDate>Fri, 01 Jul 2022 22:31:46 +0100</pubDate><guid>https://gambitbsm.org/documentation/installation/introduction/</guid><description>Introduction Introduction to GAMBIT Evidence for new physics Beyond the Standard Model (BSM) could appear in any observable in particle, astroparticle or nuclear physics. This means that if a BSM model is to be proven or disproven it is necessary to analyse the data from many different experimental sources simultaneously. Global fits attempt to tackle this problem, combining theoretical observable predictions with targeted searches of experimental data.
GAMBIT, the Global And Modular BSM Inference Tool, is one of a number of global fitting software frameworks.</description></item><item><title>Docker Usage</title><link>https://gambitbsm.org/documentation/installation/docker_usage/</link><pubDate>Fri, 01 Jul 2022 22:31:46 +0100</pubDate><guid>https://gambitbsm.org/documentation/installation/docker_usage/</guid><description>Docker Usage A pre-built version of GAMBIT is available as a Docker image which can be downloaded and run locally. This is useful for trying out GAMBIT and following the tutorials on this site without the need to build GAMBIT from source.
ⓘ Info:
The current Docker image is based on GAMBIT v2.4.0. The Docker engine requires administrator privileges in order to be activated. Therefore it may be less suited for use on shared clusters.</description></item><item><title>Installation for Linux</title><link>https://gambitbsm.org/documentation/installation/installation_for_linux/</link><pubDate>Fri, 01 Jul 2022 22:31:46 +0100</pubDate><guid>https://gambitbsm.org/documentation/installation/installation_for_linux/</guid><description>Installation for Linux ⓘ Info:
If you intend to build the entirety of GAMBIT without optimisation, at least 10GB of RAM is required. Building with optimisation (for performance-critical applications) may require more than 20GB of RAM. If your system does not meet these requirements then consider only partially building GAMBIT, or using the Docker image. This guide assumes some knowledge of bash and the Linux command line. See the Linux command line tutorial ⧉ for a basic introduction.</description></item><item><title>Installation for Windows</title><link>https://gambitbsm.org/documentation/installation/installation_for_windows/</link><pubDate>Fri, 01 Jul 2022 22:31:46 +0100</pubDate><guid>https://gambitbsm.org/documentation/installation/installation_for_windows/</guid><description>Installation for Windows Windows is not directly supported by GAMBIT. However, Linux distributions can be installed on Windows machines using WSL or by dual-booting. GAMBIT can then be built within these Linux environments
Running Linux on a Windows machine Installing Windows Subsystem for Linux (WSL) WSL is a tool supplied by Microsoft that allows Linux distributions to be installed on Windows. Follow the installation instructions ⧉ to install it on your system.</description></item><item><title>Installation for macOS</title><link>https://gambitbsm.org/documentation/installation/installation_for_macos/</link><pubDate>Fri, 01 Jul 2022 22:31:46 +0100</pubDate><guid>https://gambitbsm.org/documentation/installation/installation_for_macos/</guid><description>Installation for macOS ⓘ Info:
This guide supplements the information available on the Installation for Linux page, and includes the steps required to get GAMBIT up and running on a clean Mac Mini with an M1 (arm64) processor. The steps should however be applicable to other Macs as well. This guide assumes that you want to use the AppleClang compiler that ships with macOS. If you want to use GCC instead, you can certainly do that, it&amp;rsquo;s just more work.</description></item></channel></rss>