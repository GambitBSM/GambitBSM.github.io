name: Deploy Gambit Site

on:
  workflow_dispatch:
    inputs:
      rebuild_all:
        description: 'Rebuild all doxygen documentation in addition to deploying site'
        type: boolean
        required: true
        default: false
      clear_code_dir:
        description: 'While rebuilding, remove previously built doxygen documentation'
        type: boolean
        required: true
        default: true
      dev_repo:
        description: 'Development repo'
        required: true
        default: 'https://github.com/RC1242RC/gambit_sphinx.git'
      dev_branches_to_document:
        description: 'Branches of the GAMBIT development repo to document'
        required: true
        default: "['main', 'ColliderBit_development', 'DarkBit_development']"
      repos_to_document:
        description: 'Standalone repos (GAMBIT releases) to document'
        required: true
        default: "['https://github.com/RC1242RC/gambit_sphinx.git']"

jobs:
  
  setup:
    if: ${{ inputs.rebuild_all }}
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.setVariables.outputs.branches }}
      repos: ${{ steps.setVariables.outputs.repos }}
    steps:
      - id: setVariables
        run: echo "::set-output name=branches::$branches_temp"
          && echo "::set-output name=repos::$repos_temp"
        env:
          branches_temp: ${{ inputs.dev_branches_to_document }}
          repos_temp: ${{ inputs.repos_to_document }}

  document_branches_and_build_menu:
    if: ${{ inputs.rebuild_all }}
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branches: ${{ fromJson(needs.setup.outputs.branches )}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install doxybook2
        run:  wget https://github.com/matusnovak/doxybook2/releases/download/v1.4.0/doxybook2-linux-amd64-v1.4.0.zip
          && mkdir doxybook2
          && unzip doxybook2-linux-amd64-v1.4.0.zip -d ./doxybook2
      - name: Install sed
        run: sudo apt-get install sed
      - name: Set folder variable
        run: str=${{ matrix.branches }}
          && echo "folder2=${str%_*}" >> $GITHUB_ENV
      - name: Shallow clone branch
        run: git clone --depth 1 ${{ inputs.dev_repo }} --branch ${{ matrix.branches }} ${{ env.folder2 }}_source
      - name: Generate doxygen xml
        uses: mattnotmitt/doxygen-action@v1.9.4
        with:
          working-directory: ./${{ env.folder2 }}_source
          doxyfile-path: ../doxygen_and_doxybook2/Doxyfile
      - name: Change baseURL for md output
        run: sed -i -e 's+/documentation/code/+/documentation/code/${{ env.folder2 }}/+g' ./doxygen_and_doxybook2/config.json
      - name: Convert xml to md using doxybook2
        run: mkdir ${{ env.folder2 }}
          && ./doxybook2/bin/doxybook2 --input ./xml --output ./${{ env.folder2 }} --config ./doxygen_and_doxybook2/config.json --templates ./doxygen_and_doxybook2/doxybook_templates
      - name: Copy index template into branch folder to act as parent menu
        run: cp version_index_template.md ./${{ env.folder2 }}/_index.md
      - name: Add gambit version, type, and weights into index files to reference parent menu
        run: sed -i -- 's+GAMBIT_VERSION_HERE+${{ env.folder2 }}+g' *.md
          && sed -i -- 's+VERSION_TYPE_HERE+development+g' _index.md
          && sed -i -- 's+WEIGHT_HERE+20+g' _index.md
        working-directory: ./${{ env.folder2 }}
      - name: Upload branch code md as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.folder2 }}
          path: ./${{ env.folder2 }}
        
  document_repos_and_build_menu:
    if: ${{ inputs.rebuild_all }}
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repos: ${{ fromJson(needs.setup.outputs.repos )}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install doxybook2
        run:  wget https://github.com/matusnovak/doxybook2/releases/download/v1.4.0/doxybook2-linux-amd64-v1.4.0.zip
          && mkdir doxybook2
          && unzip doxybook2-linux-amd64-v1.4.0.zip -d ./doxybook2
      - name: Install sed
        run: sudo apt-get install sed
      - name: Set folder variable
        run: str=${{ matrix.repos }}
          && str2=${str##*/}
          && echo "folder=${str2%%.*}" >> $GITHUB_ENV
      - name: Shallow clone repo
        run: git clone --depth 1 ${{ matrix.repos }} ${{ env.folder }}_source
      - name: Generate doxygen xml
        uses: mattnotmitt/doxygen-action@v1.9.4
        with:
          working-directory: ./${{ env.folder }}_source
          doxyfile-path: ../doxygen_and_doxybook2/Doxyfile
      - name: Change baseURL for md output
        run: sed -i -e 's+/documentation/code/+/documentation/code/${{ env.folder }}/+g' ./doxygen_and_doxybook2/config.json
      - name: Convert xml to md using doxybook2
        run: mkdir ${{ env.folder }}
          && ./doxybook2/bin/doxybook2 --input ./xml --output ./${{ env.folder }} --config ./doxygen_and_doxybook2/config.json --templates ./doxygen_and_doxybook2/doxybook_templates
      - name: Copy index template into repo folder to act as parent menu
        run: cp version_index_template.md ./${{ env.folder }}/_index.md
      - name: Add gambit version, type, and weights into index files to reference parent menu
        run: sed -i -- 's+GAMBIT_VERSION_HERE+${{ env.folder }}+g' *.md
          && sed -i -- 's+VERSION_TYPE_HERE+release+g' _index.md
          && sed -i -- 's+WEIGHT_HERE+10+g' _index.md
        working-directory: ./${{ env.folder }}
      - name: Upload repo code md as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.folder }}
          path: ./${{ env.folder }}

  deploy:
    runs-on: ubuntu-latest
    needs: [document_repos_and_build_menu, document_branches_and_build_menu]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache npm packages
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          # cache: 'npm'
      - name: Wipe code dir
        if: ${{ inputs.clear_code_dir && inputs.rebuild_all }}
        run: ls -a -l
          && rm -r code
          && mkdir code
        working-directory: ./content/en/documentation
      - name: Download docs artifacts into code dir
        if: ${{ inputs.rebuild_all }}
        uses: actions/download-artifact@v3
        with:
          path: ./content/en/documentation/code
      - name: add _index file to act as code menu
        if: ${{ inputs.rebuild_all }}
        run: touch _index.md
        working-directory: ./content/en/documentation/code
      - name: Commit changes
        if: ${{ inputs.rebuild_all }}
        run: git config --local user.email "test@github.com"
          && git config --local user.name "GitHub Action test"
          && git add --all
          && git commit -m "Documentation rebuild"
          && git push
      - name: Install npm dependencies and build site
        run: npm install
          && npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
